#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FWBROWSE.CH"
#LINE 2 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\DIALOG.CH"
#LINE 28 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FONT.CH"
#LINE 29 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\PTMENU.CH"
#LINE 31 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\PRINT.CH"
#LINE 33 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\COLORS.CH"
#LINE 35 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FOLDER.CH"
#LINE 37 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\MSOBJECT.CH"
#LINE 38 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\VKEY.CH"
#LINE 42 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\WINAPI.CH"
#LINE 44 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FWCOMMAND.CH"
#LINE 47 "PROTHEUS.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FWCSS.CH"
#LINE 50 "PROTHEUS.CH"
#LINE 3 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\PARMTYPE.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\PARMTYPECH.CH"
#LINE 3 "PARMTYPE.CH"
#LINE 4 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FILTEREX.CH"
#LINE 5 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\HBUTTON.CH"
#LINE 6 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FWFILTER.CH"
#LINE 7 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE-LIB\FWBRWSTR.CH"
#LINE 8 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FWMVCDEF.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\PARMTYPE.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\PARMTYPECH.CH"
#LINE 3 "PARMTYPE.CH"
#LINE 2 "FWMVCDEF.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FWMBROWSE.CH"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\FWBROWSE.CH"
#LINE 3 "FWMBROWSE.CH"
#LINE 4 "FWMVCDEF.CH"
#LINE 9 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"
#LINE 1 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\INCLUDE\DBSTRUCT.CH"
#LINE 11 "C:\TOTVS\VSCODE\WK_LIB_MASTER\ADVPLFRAMEWORK\SRC\MVC-VIEW\GENERICO\FWBROWSE.PRW"










STATIC __CTOPBUILD := ""
STATIC __FWPROFILE := NIL
STATIC __INTWSCALL:=IIF(FINDFUNCTION("INTWSCALL"),INTWSCALL(), .F. )
STATIC LISP11    := (GETVERSAO( .F. ) <> "P10")
STATIC __LISP12    := (GETVERSAO( .F. ) == "12")
STATIC __CBUILDAPPSERVER := GETBUILD()

_OBJNEWCLASS( FWBROWSE , )

	_OBJCLASSDATA( OOWNER,OBJECT,, )
	_OBJCLASSDATA( OFWFILTER,OBJECT,, )
	_OBJCLASSDATA( OBACKPANEL,OBJECT,, )
	_OBJCLASSDATA( OBROWSE,OBJECT,, )
	_OBJCLASSDATA( ODATA,OBJECT,, )
	_OBJCLASSDATA( OFONT,OBJECT,, )
	_OBJCLASSDATA( OFONTCONFIG,OBJECT,, )
	_OBJCLASSDATA( OFWFORMGRID,OBJECT,, )
	_OBJCLASSDATA( OMARK,OBJECT,, )
	_OBJCLASSDATA( LACCVISUAL,LOGICAL,, )
	_OBJCLASSDATA( OPANELEMPTY,OBJECT,, )
	_OBJCLASSDATA( OCONFIG,OBJECT,, )

	_OBJCLASSDATA( OBROWSEUI,OBJECT,, )

	_OBJCLASSDATA( BCANADD,BLOCK,, )
	_OBJCLASSDATA( BADD,BLOCK,, )
	_OBJCLASSDATA( BAFTERADDLINE,BLOCK,, )
	_OBJCLASSDATA( BALLOK,BLOCK,, )
	_OBJCLASSDATA( BAPPLYCONFIG,BLOCK,, )
	_OBJCLASSDATA( BAPPLYPARAMS,BLOCK,, )
	_OBJCLASSDATA( BCHANGE,BLOCK,, )
	_OBJCLASSDATA( BBLKCOLOR,BLOCK,, )
	_OBJCLASSDATA( BBLKBACKCOLOR,BLOCK,, )
	_OBJCLASSDATA( BCUSTOMHEADERCLICK,BLOCK,, )
	_OBJCLASSDATA( BCUSTOMLDBLCLICK,BLOCK,, )
	_OBJCLASSDATA( BDELETE,BLOCK,, )
	_OBJCLASSDATA( BDELOK,BLOCK,, )
	_OBJCLASSDATA( BGROUP,BLOCK,, )
	_OBJCLASSDATA( BHEADERCLICK,BLOCK,, )
	_OBJCLASSDATA( BCONFIGITEMCONFIRM,BLOCK,, )
	_OBJCLASSDATA( BLDBLCLICK,BLOCK,, )
	_OBJCLASSDATA( BLINE,BLOCK,, )
	_OBJCLASSDATA( BLINEOK,BLOCK,, )
	_OBJCLASSDATA( BLOGICLEN,BLOCK,, )
	_OBJCLASSDATA( BONMOVE,BLOCK,, )
	_OBJCLASSDATA( BSEEKCHANGE,BLOCK,, )
	_OBJCLASSDATA( BSUPERDEL,BLOCK,, )
	_OBJCLASSDATA( BUPDATEBROWSE,BLOCK,, )
	_OBJCLASSDATA( BVALIDEDIT,BLOCK,, )
	_OBJCLASSDATA( BVLDEXECFILTER,BLOCK,, )
	_OBJCLASSDATA( BCONFIG,BLOCK,, )
	_OBJCLASSDATA( BGOTFOCUS,BLOCK,, )


	_OBJCLASSDATA( BPREEDITCELL,BLOCK,, )
	_OBJCLASSDATA( BMODELEDTLINE,BLOCK,, )
	_OBJCLASSDATA( BVIEWEDTLINE,BLOCK,, )

	_OBJCLASSDATA( CALIAS,CHARACTER,, )
	_OBJCLASSDATA( CCLASSNAME,CHARACTER,, )
	_OBJCLASSDATA( CDESCRIPTION,CHARACTER,, )
	_OBJCLASSDATA( CFILTERDEFAULT,CHARACTER,, )
	_OBJCLASSDATA( CORIGINALFILTER,CHARACTER,, )
	_OBJCLASSDATA( CFONTBODY,CHARACTER,, )
	_OBJCLASSDATA( CPROFILEID,CHARACTER,, )
	_OBJCLASSDATA( CREALALIAS,CHARACTER,, )
	_OBJCLASSDATA( CIDALIAS,CHARACTER,, )
	_OBJCLASSDATA( CSTYLE,CHARACTER,, )
	_OBJCLASSDATA( COLDFILTER,CHARACTER,, )
	_OBJCLASSDATA( CESPFILTER,CHARACTER,, )
	_OBJCLASSDATA( CSVALIAS,CHARACTER,, )
	_OBJCLASSDATA( CSVSRCALIAS,CHARACTER,, )

	_OBJCLASSDATA( NAT,NUMERIC,, )
	_OBJCLASSDATA( NBACKCOLOR,NUMERIC,, )
	_OBJCLASSDATA( NCLRALTERROW,NUMERIC,, )
	_OBJCLASSDATA( NHEADERCOLOR,NUMERIC,, )
	_OBJCLASSDATA( NTXTHEADERCOLOR,NUMERIC,, )
	_OBJCLASSDATA( NCURSORPOS,NUMERIC,, )
	_OBJCLASSDATA( NDOUBLECLICK,NUMERIC,, )
	_OBJCLASSDATA( NFONTBODY,NUMERIC,, )
	_OBJCLASSDATA( NFORECOLOR,NUMERIC,, )
	_OBJCLASSDATA( NHEADERCLICK,NUMERIC,, )
	_OBJCLASSDATA( NMOVETYPE,NUMERIC,, )
	_OBJCLASSDATA( NOFFSET,NUMERIC,, )
	_OBJCLASSDATA( NPOSSIBLEROWS,NUMERIC,, )
	_OBJCLASSDATA( NROWHEIGHT,NUMERIC,, )
	_OBJCLASSDATA( NTYPEMOVE,NUMERIC,, )
	_OBJCLASSDATA( NVISIBLEROWS,NUMERIC,, )
	_OBJCLASSDATA( NLEN,NUMERIC,, )
	_OBJCLASSDATA( NSEEKPOS,NUMERIC,, )
	_OBJCLASSDATA( NRECNOATU,NUMERIC,, )
	_OBJCLASSDATA( NSVRECNO,NUMERIC,, )
	_OBJCLASSDATA( NSVORDER,NUMERIC,, )
	_OBJCLASSDATA( NSVSRCRECNO,NUMERIC,, )
	_OBJCLASSDATA( NSVSRCORDER,NUMERIC,, )

	_OBJCLASSDATA( ABREAKREPORT,ARRAY,, )
	_OBJCLASSDATA( ABRWRELATION,ARRAY,, )
	_OBJCLASSDATA( ACLASSIFY,ARRAY,, )
	_OBJCLASSDATA( ACOLUMNS,ARRAY,, )
	_OBJCLASSDATA( ACUSTOMCONFIG,ARRAY,, )
	_OBJCLASSDATA( ACUSTOMCOLOR,ARRAY,, )
	_OBJCLASSDATA( ADEFAULTCOLUMNS,ARRAY,, )
	_OBJCLASSDATA( ADEFORDERSEEK,ARRAY,, )
	_OBJCLASSDATA( AEMPTYMESSAGE,ARRAY,, )
	_OBJCLASSDATA( AFILTERDEFAULT,ARRAY,, )
	_OBJCLASSDATA( AFONTEWIDTH,ARRAY,, )
	_OBJCLASSDATA( AGROUP,ARRAY,, )
	_OBJCLASSDATA( AITEMHEADERCLICK,ARRAY,, )
	_OBJCLASSDATA( AITEMDOUBLECLICK,ARRAY,, )
	_OBJCLASSDATA( ALEFTJOIN,ARRAY,, )
	_OBJCLASSDATA( ALEGENDS,ARRAY,, )
	_OBJCLASSDATA( AMAPFIELD,ARRAY,, )
	_OBJCLASSDATA( ATOTAL,ARRAY,, )
	_OBJCLASSDATA( ATOTALDEFAULT,ARRAY,, )
	_OBJCLASSDATA( ABKPBRWORDER,ARRAY,, )
	_OBJCLASSDATA( ABKPSIZECOL,ARRAY,, )
	_OBJCLASSDATA( ABKPPROFILE,ARRAY,, )
	_OBJCLASSDATA( ARECBRWRELA,ARRAY,, )
	_OBJCLASSDATA( AVISIBLEREG,ARRAY,, )
	_OBJCLASSDATA( AUNIQUEKEY,ARRAY,, )

	_OBJCLASSDATA( LMODELDATA,LOGICAL,, )
	_OBJCLASSDATA( LCANCANCELFILTER,LOGICAL,, )
	_OBJCLASSDATA( LCFGEMPFIL,LOGICAL,, )
	_OBJCLASSDATA( LCHANGEFONT,LOGICAL,, )
	_OBJCLASSDATA( LCLRALTERROW,LOGICAL,, )
	_OBJCLASSDATA( LCUSTOMCOLOR,LOGICAL,, )
	_OBJCLASSDATA( LDATAARRAY,LOGICAL,, )
	_OBJCLASSDATA( LDATAQUERY,LOGICAL,, )
	_OBJCLASSDATA( LDATATABLE,LOGICAL,, )
	_OBJCLASSDATA( LDATATEXT,LOGICAL,, )
	_OBJCLASSDATA( LDELETE,LOGICAL,, )
	_OBJCLASSDATA( LDBFFILTER,LOGICAL,, )
	_OBJCLASSDATA( LDISABLEPAINT,LOGICAL,, )
	_OBJCLASSDATA( LEXECCHGCOLUMN,LOGICAL,, )
	_OBJCLASSDATA( LHEADERCLICK,LOGICAL,, )
	_OBJCLASSDATA( LHIDEBUTTONS,LOGICAL,, )
	_OBJCLASSDATA( LLDBLCLICK,LOGICAL,, )
	_OBJCLASSDATA( LEDITCELL,LOGICAL,, )
	_OBJCLASSDATA( LFILTRATE,LOGICAL,, )
	_OBJCLASSDATA( LFONTBOLD,LOGICAL,, )
	_OBJCLASSDATA( LFONTITALIC,LOGICAL,, )
	_OBJCLASSDATA( LFONTUNDERLINE,LOGICAL,, )
	_OBJCLASSDATA( LINSERT,LOGICAL,, )
	_OBJCLASSDATA( LNUMBERLEGEND,LOGICAL,, )
	_OBJCLASSDATA( LNOPAINT,LOGICAL,, )
	_OBJCLASSDATA( LOBLIGATEFILTER,LOGICAL,, )
	_OBJCLASSDATA( LOPENGROUP,LOGICAL,, )
	_OBJCLASSDATA( LOPTIONCONFIG,LOGICAL,, )
	_OBJCLASSDATA( LOPTIONREPORT,LOGICAL,, )
	_OBJCLASSDATA( LSAVECONFIG,LOGICAL,, )
	_OBJCLASSDATA( LSAVEDCONFIG,LOGICAL,, )
	_OBJCLASSDATA( LSAVEAREA,LOGICAL,, )
	_OBJCLASSDATA( LSAVEFILTER,LOGICAL,, )
	_OBJCLASSDATA( LSETFILTER,LOGICAL,, )
	_OBJCLASSDATA( LSETCASEFILTER,LOGICAL,, )
	_OBJCLASSDATA( LACTIVATE,LOGICAL,, )
	_OBJCLASSDATA( LSEEK,LOGICAL,, )
	_OBJCLASSDATA( LFILTER,LOGICAL,, )
	_OBJCLASSDATA( LCASEFILTER,LOGICAL,, )
	_OBJCLASSDATA( LLOCATE,LOGICAL,, )
	_OBJCLASSDATA( LEDITLINE,LOGICAL,, )
	_OBJCLASSDATA( LRELATIONFILTER,LOGICAL,, )
	_OBJCLASSDATA( LFORCEREFRESH,LOGICAL,, )
	_OBJCLASSDATA( LCANGOTFOCUS,LOGICAL,, )
	_OBJCLASSDATA( LDODESTROY,LOGICAL,, )
	_OBJCLASSDATA( LLOOKUP,LOGICAL,, )
	_OBJCLASSDATA( LADJUST,LOGICAL,, )
	_OBJCLASSDATA( LCHECKLAYOUT,LOGICAL,, )
	_OBJCLASSDATA( LFOCUSONACTIVATE,LOGICAL,, )
	_OBJCLASSDATA( LUPDVISIBRW,LOGICAL,, )
	_OBJCLASSDATA( LORDERCOL,LOGICAL,, )
	_OBJCLASSDATA( LTOTALCHANGE,LOGICAL,, )
	_OBJCLASSDATA( LAPPLYFILTERONACTIVATE,LOGICAL,, )
	_OBJCLASSDATA( LCANSAVEAREA,LOGICAL,, )
	_OBJCLASSDATA( LHASCHECKEDNATIVE,LOGICAL,, )


	_OBJCLASSDATA( BFONSTART,BLOCK,, )


	_OBJCLASSDATA( BSACTION,BLOCK,, )
	_OBJCLASSDATA( ASORDER,ARRAY,, )

	_OBJCLASSMETHOD(CHECKEMPTY,,)



	_OBJCLASSMETHOD(AFTERCONTENTCREATE,,)
	_OBJCLASSMETHOD(AFTERBROWSECREATE,,)
	_OBJCLASSMETHOD(ACTIONCONFIG,(OPANEL),)
	_OBJCLASSMETHOD(ADDCOLUMNCONFIG,(OPANEL),)
	_OBJCLASSMETHOD(ADDCUSTOMCONFIG,(CTITLE,BVIEW,BSAVE),)
	_OBJCLASSMETHOD(ADDITEMHEADERCLICK,(AITEMHEADERCLICK),)
	_OBJCLASSMETHOD(ADDITEMDOUBLECLICK,(AITEMDOUBLECLICK),)
	_OBJCLASSMETHOD(ALIGNCONFIG,(OPANEL),)
	_OBJCLASSMETHOD(APPLYLEFTJOIN,,)

	_OBJCLASSMETHOD(BROWSECONFIG,(OPANEL,OPANELCONFIG),)

	_OBJCLASSMETHOD(CANLOCSEEK,,)
	_OBJCLASSMETHOD(CHECKFILTRATE,,)
	_OBJCLASSMETHOD(CLASSIFYCOLUMNCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(CLEANPROFILE,,)
	_OBJCLASSMETHOD(CLRALTERNATECONFIG,(OPANEL),)
	_OBJCLASSMETHOD(GETCOLBYGRIDID,,)
	_OBJCLASSMETHOD(GETFILTEREXPRESSION,,)
	_OBJCLASSMETHOD(COLORCOLUMNCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(COLORCONFIG,(OPANEL),)
	_OBJCLASSMETHOD(COLORTRIANGLE,(OOBJECT,OSAYCOLOR,NOPTION,ACOLORS),)
	_OBJCLASSMETHOD(COLUMNORDER,(AORDER,NORDER,LUP),)
	_OBJCLASSMETHOD(COLUMNSCONFIG,(OCONFIG),)
	_OBJCLASSMETHOD(COMMENTCOLUMNCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(COMMENTCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(CONFIG,(OOBJECT),)

	_OBJCLASSMETHOD(DELCOLUMN,(NCOLUMN),)
	_OBJCLASSMETHOD(DELCOLUMNCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(DISABLECONFIG,,)
	_OBJCLASSMETHOD(DISABLEORDER,,)
	_OBJCLASSMETHOD(DISABLEREPORT,,)
	_OBJCLASSMETHOD(DISABLESAVECONFIG,,)

	_OBJCLASSMETHOD(FIELDISFASTLOCATE,,)
	_OBJCLASSMETHOD(FILTERCONFIG,(OPANEL),)
	_OBJCLASSMETHOD(FONTCOLUMNCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(FONTCONFIG,(OOBJECT),)

	_OBJCLASSMETHOD(GETALIAS,,)
	_OBJCLASSMETHOD(GETBACKCOLOR,,)
	_OBJCLASSMETHOD(GETCLRALTERROW,,)
	_OBJCLASSMETHOD(GETCOLUMN,,)
	_OBJCLASSMETHOD(SETCOLPOS,(NCOL),)
	_OBJCLASSMETHOD(GETCOLUMNCONFIG,(CTITLE,CDATA,CTYPE,CPICTURE,CALIGN,NWIDTH,CEDIT,CVALID,CIMAGE,CREADVAR),)
	_OBJCLASSMETHOD(GETFIELDINFO,,)
	_OBJCLASSMETHOD(GETFORECOLOR,,)
	_OBJCLASSMETHOD(GETFONTWIDTH,(CTEXT),)
	_OBJCLASSMETHOD(GETPROFILEID,,)
	_OBJCLASSMETHOD(GETOWNER,,)
	_OBJCLASSMETHOD(GETSEEK,,)
	_OBJCLASSMETHOD(GETINDFIELDS,,)
	_OBJCLASSMETHOD(GETUNIQUEKEY,,)
	_OBJCLASSMETHOD(GETUNIQUEDATAKEY,,)

	_OBJCLASSMETHOD(VERIFYLAYOUT,,)

	_OBJCLASSMETHOD(INITTOTALS,,)
	_OBJCLASSMETHOD(ISCFGEMPFIL,,)

	_OBJCLASSMETHOD(LINEHEIGHTCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(LOADCONFIG,,)
	_OBJCLASSMETHOD(LOCATECONFIG,(OPANEL),)

	_OBJCLASSMETHOD(OPTIONCONFIG,,)
	_OBJCLASSMETHOD(OPTIONREPORT,,)
	_OBJCLASSMETHOD(OPTIONPRINT,,)
	_OBJCLASSMETHOD(ORDERCONFIG,(OOBJECT),)

	_OBJCLASSMETHOD(PICTURECOLUMNCONFIG,(OOBJECT),)

	_OBJCLASSMETHOD(RECOVERYCOLUMN,(NCOLUMN),)
	_OBJCLASSMETHOD(RECUPARATECOLUMNCONFIG,(OOBJECT),)
	_OBJCLASSMETHOD(RECUPCONFIG,(OPANELCONFIG),)

	_OBJCLASSMETHOD(SAVE,,)
	_OBJCLASSMETHOD(SAVECONFIG,(OPANELCONFIG),)
	_OBJCLASSMETHOD(SAVEONPROFILE,,)
	_OBJCLASSMETHOD(SAVESRCALIAS,,)

	_OBJCLASSMETHOD(SEEKCONFIG,(OPANEL),)
	_OBJCLASSMETHOD(SETALIGNCOLUMNS,(AALIGNCOLUMNS),)
	_OBJCLASSMETHOD(SETBACKCOLOR,(NBACKCOLOR),)
	_OBJCLASSMETHOD(SETCLASSIFYCOLUMN,(ACLASSIFY),)
	_OBJCLASSMETHOD(SETCLRALTERROW,(NCLRALTERROW),)
	_OBJCLASSMETHOD(SETCOMMENTCOLUMNS,(ACOMMENT),)
	_OBJCLASSMETHOD(SETCOLOR,,)
	_OBJCLASSMETHOD(SETCOLORCOLUMNS,(ACOLORS),)
	_OBJCLASSMETHOD(SETBLKCOLOR,(BBLKCOLOR),)
	_OBJCLASSMETHOD(SETBLKBACKCOLOR,(BBACKCOLOR),)
	_OBJCLASSMETHOD(SETDELCOLUMN,(ADELCOLUMNS),)
	_OBJCLASSMETHOD(SETCOLUMNORDER,(NCOLUMN,NNEWORDER),)
	_OBJCLASSMETHOD(SETCFGEMPFIL,,)
	_OBJCLASSMETHOD(SETFONTBROWSE,(OFONT),)
	_OBJCLASSMETHOD(SETFONTCOLUMNS,(AFONT),)
	_OBJCLASSMETHOD(SETFORECOLOR,(NFORECOLOR),)
	_OBJCLASSMETHOD(SETFWFORMGRID,,)
	_OBJCLASSMETHOD(SETIDALIAS,(CIDALIAS),)
	_OBJCLASSMETHOD(SETITEMHEADERCLICK,(AITEMHEADERCLICK),)
	_OBJCLASSMETHOD(SETITEMDOUBLECLICK,(AITEMDOUBLECLICK),)
	_OBJCLASSMETHOD(SETLINEHEIGHT,(NHEIGHT),)
	_OBJCLASSMETHOD(SETORDERCOLUMNS,(AORDER),)
	_OBJCLASSMETHOD(SETPICTURECOLUMNS,(APICTURE),)
	_OBJCLASSMETHOD(SETTOTALDEFAULT,,)
	_OBJCLASSMETHOD(SETDISABLEADJUST,(LADJUST),)
	_OBJCLASSMETHOD(SETCHKLAYOUT,,)
	_OBJCLASSMETHOD(SETEMPTYMESSAGE,,)
	_OBJCLASSMETHOD(SETSAVEFILTER,,)
	_OBJCLASSMETHOD(SETLOOKUP,,)
	_OBJCLASSMETHOD(SETCANSAVEAREA,(LSET),)
	_OBJCLASSMETHOD(SETUNIQUEKEY,(ASETKEY),)

	_OBJCLASSMETHOD(UPDEMPTYMESSAGE,,)

	_OBJCLASSMETHOD(SETPREEDITCELL,,)
	_OBJCLASSMETHOD(SETPOSTEDITCELL,,)

	_OBJCLASSMETHOD(SETRECUPARATECOLUMN,(ARECCOLUMNS),)
	_OBJCLASSMETHOD(SETPROFILEID,(CPROFILEID),)
	_OBJCLASSMETHOD(SETSTYLE,,)
	_OBJCLASSMETHOD(SETTOTALCOLUMNS,,)
	_OBJCLASSMETHOD(SETVSCROLL,,)
	_OBJCLASSMETHOD(SETWIDTHCOLUMNS,(AWIDTH),)
	_OBJCLASSMETHOD(SETCANGOTFOCUS,,)

	_OBJCLASSMETHOD(TOTALCHANGE,,)
	_OBJCLASSMETHOD(TOTALCOLUMNCONFIG,(OOBJECT),)

	_OBJCLASSMETHOD(VIEWCOMMENT,,)

	_OBJCLASSMETHOD(WIDTHCOLUMNCONFIG,(OOBJECT),)




	_OBJCLASSMETHOD(ADDFILTER,(CFILTER,CEXPADVPL,LNOCHECK,LSELECTED,CALIAS,LFILTERASK,AFILPARSER,CID),)

	_OBJCLASSMETHOD(CLEANEXFILTER,,)
	_OBJCLASSMETHOD(CLEANFILTER,,)

	_OBJCLASSMETHOD(DBFFILTER,,)
	_OBJCLASSMETHOD(DELETEFILTER,(CID),)
	_OBJCLASSMETHOD(DISABLEFILTER,,)

	_OBJCLASSMETHOD(EXECUTEFILTER,(LBRWUPDATE),)

	_OBJCLASSMETHOD(FILTRATE,,)
	_OBJCLASSMETHOD(FWFILTER,,)

	_OBJCLASSMETHOD(OBLIGATEFILTER,,)

	_OBJCLASSMETHOD(SETDBFFILTER,(LDBFFILTER),)
	_OBJCLASSMETHOD(SETFIELDFILTER,(AFIELDS),)
	_OBJCLASSMETHOD(SETFILTER,(CCPOFIL,CTOPFUN,CBOTFUN,LDOFILTER),)
	_OBJCLASSMETHOD(SETCASEFILTER,,)
	_OBJCLASSMETHOD(SETFILTERDEFAULT,(CFILTERDEFAULT,LREPLACEORIGINALFILTER),)
	_OBJCLASSMETHOD(SETOBLIGATEFILTER,(LOBLIGATEFILTER,LCANCANCEL),)
	_OBJCLASSMETHOD(SETUSEFILTER,(NALIGN,BONSTART),)
	_OBJCLASSMETHOD(SETUSECASEFILTER,(NALIGN,BONSTART),)
	_OBJCLASSMETHOD(SETUSERELATIONFILTER,(LRELATIONFILTER),)
	_OBJCLASSMETHOD(SETVLDEXECFILTER,(BVLDEXECFILTER),)
	_OBJCLASSMETHOD(GETFILTERDEFAULT,,)
	_OBJCLASSMETHOD(GETORIGINALFILTER,,)




	_OBJCLASSMETHOD(ADDCOLUMN,(ACOLUMN,LCREATE),)
	_OBJCLASSMETHOD(ADDUSERCOLUMN,(ACOLUMN,LCREATE),)
	_OBJCLASSMETHOD(ADDMARKCOLUMNS,(BMARK,BLDBLCLICK,BHEADERCLICK),)
	_OBJCLASSMETHOD(ADDSTATUSCOLUMNS,(BSTATUS,BLDBLCLICK),)

	_OBJCLASSMETHOD(BDATAMARK,(BMARK),)
	_OBJCLASSMETHOD(BDATASTATUS,(BSTATUS),)

	_OBJCLASSMETHOD(COLPOS,(LDELETED),)

	_OBJCLASSMETHOD(DOUBLECLICK,(X),)

	_OBJCLASSMETHOD(EDITCELL,(NCOLUMN),)

	_OBJCLASSMETHOD(GETCOLUMNDATA,(NIDCOLUMN),)
	_OBJCLASSMETHOD(GOCOLUMN,(NCOLUMN),)
	_OBJCLASSMETHOD(GORIGHT,,)
	_OBJCLASSMETHOD(HEADERCLICK,,)

	_OBJCLASSMETHOD(ONCOLUMNCHANGED,,)
	_OBJCLASSMETHOD(ORDERCOLUMN,,)

	_OBJCLASSMETHOD(SETCOLUMNS,(ACOLUMNS),)
	_OBJCLASSMETHOD(SETDOUBLECLICK,(BLDBLCLICK),)
	_OBJCLASSMETHOD(SETEDITCELL,(LEDITCELL,BVALIDEDIT),)
	_OBJCLASSMETHOD(SETHEADERIMAGE,(NCOLUMN,CRESOURCE),)

	_OBJCLASSMETHOD(VALIDEDIT,(LCANCEL),)




	_OBJCLASSMETHOD(BDATAGROUP,,)

	_OBJCLASSMETHOD(EXECUTEGROUP,,)

	_OBJCLASSMETHOD(GROUPLINEREFRESH,,)

	_OBJCLASSMETHOD(SETGROUP,(BGROUP,LOPEN),)




	_OBJCLASSMETHOD(ADDLEGEND,(XCONDITION,CCOLOR,CTITLE,LFILTER),)

	_OBJCLASSMETHOD(SETNUMBERLEGEND,(LNUMBER),)




	_OBJCLASSMETHOD(GETBREAKREPORT,,)

	_OBJCLASSMETHOD(REPORT,,)

	_OBJCLASSMETHOD(SETBREAKREPORT,(ABREAKREPORT),)




	_OBJCLASSMETHOD(ADDLINE,,)
	_OBJCLASSMETHOD(AT,,)

	_OBJCLASSMETHOD(DELLINE,,)
	_OBJCLASSMETHOD(DELOK,,)

	_OBJCLASSMETHOD(GETCOLBYID,,)
	_OBJCLASSMETHOD(GETTOTBYID,,)
	_OBJCLASSMETHOD(GETMOVETYPE,,)
	_OBJCLASSMETHOD(GETOFFSET,,)
	_OBJCLASSMETHOD(GOBOTTOM,(LCALLREFRESH),)
	_OBJCLASSMETHOD(GODOWN,(NOFFSET),)
	_OBJCLASSMETHOD(GOPGDOWN,,)
	_OBJCLASSMETHOD(GOPGUP,,)
	_OBJCLASSMETHOD(GOTOP,,)
	_OBJCLASSMETHOD(GOUP,(NOFFSET),)
	_OBJCLASSMETHOD(GOTO,(NGOTO,LREFRESH),)

	_OBJCLASSMETHOD(ISWHEELMOVE,,)

	_OBJCLASSMETHOD(KEYBLOCK,,)

	_OBJCLASSMETHOD(LINEOK,,)
	_OBJCLASSMETHOD(LINEREFRESH,,)
	_OBJCLASSMETHOD(LOCATEACTION,,)

	_OBJCLASSMETHOD(ONCHANGE,,)
	_OBJCLASSMETHOD(ONMOVE,(OBROWSE,NMVTYPE,NCURPOS,NOFFSET,NVISROWS),)

	_OBJCLASSMETHOD(SELECTROW,(N),)
	_OBJCLASSMETHOD(SETAFTERADDLINE,(BAFTERADDLINE),)
	_OBJCLASSMETHOD(SETADDLINE,,)
	_OBJCLASSMETHOD(SETCANADDLINE,,)
	_OBJCLASSMETHOD(SETCHANGE,(BCHANGE),)
	_OBJCLASSMETHOD(SETDELETE,(LDELETE,BDELETE),)
	_OBJCLASSMETHOD(SETDELOK,(BDELOK),)
	_OBJCLASSMETHOD(SETFOCUS,,)
	_OBJCLASSMETHOD(SETINSERT,(LINSERT),)
	_OBJCLASSMETHOD(SETLINEBEGIN,(NLINEBEGIN),)
	_OBJCLASSMETHOD(SETLINEOK,(BLINEOK),)
	_OBJCLASSMETHOD(SETSUPERDEL,(BSUPERDEL),)
	_OBJCLASSMETHOD(SETTYPEMOVE,(NTYPEMOVE),)
	_OBJCLASSMETHOD(SHOWDATA,(NCOUNT),)
	_OBJCLASSMETHOD(SUPERDEL,,)
	_OBJCLASSMETHOD(GOTOARRAYINITIALLINE,(NLINE),)
	_OBJCLASSMETHOD(GOTODATAKEY,(ADATAKEY),)




	_OBJCLASSMETHOD(ALIAS,,)
	_OBJCLASSMETHOD(ALLOK,,)

	_OBJCLASSMETHOD(DATA,,)
	_OBJCLASSMETHOD(DATAARRAY,,)
	_OBJCLASSMETHOD(DATAQUERY,,)
	_OBJCLASSMETHOD(DATATABLE,,)
	_OBJCLASSMETHOD(DATATEXT,,)
	_OBJCLASSMETHOD(DEFAULT,,)
	_OBJCLASSMETHOD(DISABLELOCATE,,)
	_OBJCLASSMETHOD(DISABLESEEK,,)
	_OBJCLASSMETHOD(DODESTROY,,)

	_OBJCLASSMETHOD(GETPOSICIONE,,)
	_OBJCLASSMETHOD(GETQUERY,,)
	_OBJCLASSMETHOD(GETOBJMARK,,)

	_OBJCLASSMETHOD(LOGICLEN,,)

	_OBJCLASSMETHOD(MAPFIELD,,)

	_OBJCLASSMETHOD(RESTOREAREA,,)
	_OBJCLASSMETHOD(RESTORESRCALIAS,,)

	_OBJCLASSMETHOD(SAVEAREA,,)
	_OBJCLASSMETHOD(SEEKACTION,,)
	_OBJCLASSMETHOD(SETALIAS,(CALIAS),)
	_OBJCLASSMETHOD(SETALLOK,(BALLOK),)
	_OBJCLASSMETHOD(SETAPPLYPARAMS,(BAPPLYPARAMS),)
	_OBJCLASSMETHOD(SETARRAY,(AARRAY),)
	_OBJCLASSMETHOD(SETDATAARRAY,,)
	_OBJCLASSMETHOD(SETDATAQUERY,,)
	_OBJCLASSMETHOD(SETDATATABLE,,)
	_OBJCLASSMETHOD(SETDATATEXT,,)
	_OBJCLASSMETHOD(SETDATAMODEL,,)
	_OBJCLASSMETHOD(SETDODESTROY,(LDODESTROY),)
	_OBJCLASSMETHOD(SETFILE,(CFILE),)
	_OBJCLASSMETHOD(SETLOCATE,(BACTIONLOCATE,NALIGN),)
	_OBJCLASSMETHOD(SETMAPFIELD,(AMAPFIELD),)
	_OBJCLASSMETHOD(SETOBJMARK,(OOBJMARK),)
	_OBJCLASSMETHOD(SETQUERY,(CQUERY),)
	_OBJCLASSMETHOD(SETQUERYINDEX,(AINDEX),)
	_OBJCLASSMETHOD(SETSEEK,(BACTION,AORDER,NALIGN),)
	_OBJCLASSMETHOD(SETSEEKCHANGE,(BSEEKCHANGE),)
	_OBJCLASSMETHOD(SETSHOWLIMIT,(LSHOWLIMIT),)

	_OBJCLASSMETHOD(UPDATETOPBOT,(LGOTOP),)
	_OBJCLASSMETHOD(UPDATERELATION,,)




	_OBJCLASSMETHOD(ACTIVATE,,)

	_OBJCLASSMETHOD(BROWSE,,)

	_OBJCLASSMETHOD(CLASSNAME,,)
	_OBJCLASSMETHOD(CREATEBROWSE,(LUPDATE),)

	_OBJCLASSMETHOD(DEACTIVATE,,)
	_OBJCLASSMETHOD(DISABLE,,)
	_OBJCLASSMETHOD(DESTROY,,)

	_OBJCLASSMETHOD(ENABLE,,)

	_OBJCLASSMETHOD(GETDESCRIPTION,(CDESCRIPTION),)

	_OBJCLASSMETHOD(HIDE,,)

	_OBJCLASSMETHOD(NEW,(OOWNER),)

	_OBJCLASSMETHOD(REFRESH,(LGOTOP),)
	_OBJCLASSMETHOD(REFRESHCUSTOMCOLOR,,)
	_OBJCLASSMETHOD(REFRESHSEEK,,)
	_OBJCLASSMETHOD(RESET,,)
	_OBJCLASSMETHOD(RESETLEN,,)

	_OBJCLASSMETHOD(SETDESCRIPTION,(CDESCRIPTION),)
	_OBJCLASSMETHOD(SETOWNER,(OOWNER),)
	_OBJCLASSMETHOD(SETUPDATEBROWSE,(BUPDATEBROWSE),)
	_OBJCLASSMETHOD(SHOW,,)
	_OBJCLASSMETHOD(SETAPPLYFILTERONACTIVATE,,)

	_OBJCLASSMETHOD(UPDATEBROWSE,,)
	_OBJCLASSMETHOD(UPDVISIBRW,,)





	_OBJCLASSMETHOD(SHOWEDITLINE,,)
	_OBJCLASSMETHOD(SETMODELEDTLINE,,)
	_OBJCLASSMETHOD(SETVIEWEDTLINE,,)


	_OBJCLASSMETHOD(ADDBRWRELATION,,)
	_OBJCLASSMETHOD(GETLEFTJOIN,,)
	_OBJCLASSMETHOD(GETBRWRELATION,,)
	_OBJCLASSMETHOD(GETCHANGE,,)

	_OBJCLASSMETHOD(INITFILTER,,)
	_OBJCLASSMETHOD(INITLOCATE,,)
	_OBJCLASSMETHOD(INITSEEK,,)
	_OBJCLASSMETHOD(INITCASEFILTER,,)

	_OBJCLASSMETHOD(SHOWBROWSE,,)
	_OBJCLASSMETHOD(HIDEBROWSE,,)




	_OBJCLASSMETHOD(CLEARFILTER,,)
	_OBJCLASSMETHOD(RESTOREFILTER,,)

_OBJENDCLASS( )












FUNCTION ___FWBROWSE____NEW(OOWNER )
LOCAL LGRID AS  LOGICAL
LOCAL CTCBUILD AS  CHARACTER
LOCAL OFACTORY AS  OBJECT

IF OOWNER <> NIL .AND.  !(VALTYPE(OOWNER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OOWNER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OOWNER)); ENDIF

LGRID := ( __CBUILDAPPSERVER >= "7.00.081215P-20081216" )
CTCBUILD := "TCGETBUILD"
OFACTORY := FWUIBROWSEFACTORY():NEW()


IF !LGRID
	USEREXCEPTION(FWI18NLANG("FWBRWSTR","STR0001",1))
ENDIF

SELF:OBROWSEUI := OFACTORY:GETUI(SELF)
SELF:CIDALIAS         := ""
SELF:CCLASSNAME       := "FWBROWSE"
SELF:CFONTBODY        := "ARIAL"
SELF:NCURSORPOS       := 0
SELF:CDESCRIPTION     := ""
SELF:CFILTERDEFAULT   := ""
SELF:CPROFILEID       := ""
SELF:NDOUBLECLICK     := 1
SELF:NFONTBODY        := 9
SELF:NMOVETYPE        := 0
SELF:NOFFSET          := 0
SELF:NPOSSIBLEROWS    := 0
SELF:NHEADERCLICK     := 1
SELF:NROWHEIGHT       := IIF(__LISP12,30,16)
SELF:NTYPEMOVE        := 0
SELF:NLEN             := 0
SELF:NSEEKPOS         := 1
SELF:ABREAKREPORT     := {}
SELF:ABRWRELATION     := {}
SELF:ACLASSIFY        := {}
SELF:ACOLUMNS         := {}
SELF:ACUSTOMCONFIG    := {}
SELF:ACUSTOMCOLOR     := {}
SELF:ADEFAULTCOLUMNS  := {}
SELF:ADEFORDERSEEK    := {}
SELF:AGROUP           := {}
SELF:AFILTERDEFAULT   := {}
SELF:AITEMHEADERCLICK := {}
SELF:AITEMDOUBLECLICK := {}
SELF:ALEFTJOIN        := {}
SELF:ALEGENDS         := {}
SELF:AMAPFIELD        := {}
SELF:LMODELDATA	   := .F. 
SELF:LCANCANCELFILTER := .F. 
SELF:LCHANGEFONT      := .T. 
SELF:LCLRALTERROW     := .F. 
SELF:LCUSTOMCOLOR     := .F. 
SELF:LDATAQUERY       := .F. 
SELF:LDATATABLE       := .F. 
SELF:LDATATEXT        := .F. 
SELF:LDATAARRAY       := .F. 
SELF:LDBFFILTER       := .F. 
SELF:LDISABLEPAINT    := .F. 
SELF:LNOPAINT         := .F. 
SELF:LEXECCHGCOLUMN   := .F. 
SELF:LFILTER          := .T. 
SELF:LCASEFILTER      := .T. 
SELF:LHEADERCLICK     := .T. 
SELF:LHIDEBUTTONS     := .T. 
SELF:LEDITCELL        := .F. 
SELF:LFILTRATE        := .F. 
SELF:LLOCATE          := .T. 
SELF:LLDBLCLICK       := .T. 
SELF:LFONTBOLD        := .F. 
SELF:LFONTITALIC      := .F. 
SELF:LFONTUNDERLINE   := .F. 
SELF:LNUMBERLEGEND    := .F. 
SELF:LOBLIGATEFILTER  := .F. 
SELF:LOPENGROUP       := .F. 
SELF:LOPTIONCONFIG    := .T. 
SELF:LOPTIONREPORT    := .T. 
SELF:LSAVEAREA        := .F. 
SELF:LSAVECONFIG      := .T. 
SELF:LSEEK            := .T. 
SELF:LSETFILTER       := .F. 
SELF:LSETCASEFILTER   := .F. 
SELF:LACTIVATE        := .F. 
SELF:LEDITLINE        := .F. 
SELF:LRELATIONFILTER  := .T. 
SELF:LCANGOTFOCUS     := .T. 
SELF:LDODESTROY       := .T. 
SELF:LLOOKUP          := .F. 
SELF:LCFGEMPFIL	   := .F. 
SELF:LADJUST		   := .T. 
SELF:LUPDVISIBRW	   := .F. 
SELF:LORDERCOL        := .T. 
SELF:LFOCUSONACTIVATE := .T. 
SELF:LCHECKLAYOUT     := .T. 
SELF:LSAVEDCONFIG     := .F. 
SELF:LSAVEFILTER      := .T. 
SELF:LTOTALCHANGE 	   := .T. 
SELF:LAPPLYFILTERONACTIVATE:= .T. 
SELF:LCANSAVEAREA     := .F. 
SELF:LHASCHECKEDNATIVE := .F. 

SELF:ABKPPROFILE   := {}

SELF:COLDFILTER       := ""
SELF:CESPFILTER       := ""

SELF:AEMPTYMESSAGE := {}

SELF:ATOTALDEFAULT := {}
SELF:ABKPBRWORDER  := {}

SELF:AUNIQUEKEY      := {}




IF __LISP12
	SELF:OCONFIG := FWBRWMODELCONFIG():NEW()
ENDIF




SELF:LACCVISUAL := FWHASACCMODE(1)



IF SELF:LACCVISUAL
	AVSETLEGEND("CLEAR")
ENDIF




SELF:ADDITEMHEADERCLICK({ FWI18NLANG("FWBRWSTR","STR0002",2), })
SELF:ADDITEMHEADERCLICK({ FWI18NLANG("FWBRWSTR","STR0003",3), })




SELF:ADDITEMDOUBLECLICK({ FWI18NLANG("FWBRWSTR","STR0002",2), })
SELF:ADDITEMDOUBLECLICK({ FWI18NLANG("FWBRWSTR","STR0003",3), })

SELF:SETALIAS("")
SELF:SETBACKCOLOR(16777215)
SELF:SETCLRALTERROW( FWGETCSS( "", 076 ) )
SELF:SETFORECOLOR(0)
SELF:SETDELETE( .F. )
SELF:SETEDITCELL( .F. )
SELF:SETINSERT( .F. )
SELF:SETOWNER(OOWNER)
__CTOPBUILD := &CTCBUILD.()
SELF:LFORCEREFRESH := TYPE("__CUSERID") == "C" .AND.  FWCANSHOW( "RFRHBRW" )




OFACTORY := NIL

RETURN SELF











FUNCTION ___FWBROWSE____ACTIVATE(LFWBROWSE )
IF LFWBROWSE <> NIL .AND.  !(VALTYPE(LFWBROWSE) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFWBROWSE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFWBROWSE)); ENDIF; LFWBROWSE := IF(LFWBROWSE == NIL, .T. ,LFWBROWSE)









IF VALTYPE(SELF:OOWNER) <> "O"
	USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0006",6)+"FWBROWSE"+": "+FWI18NLANG("FWBRWSTR","STR0004",4))
ENDIF



IF VALTYPE(SELF:ODATA) <> "O"
	USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0006",6)+"FWBROWSE"+": "+FWI18NLANG("FWBRWSTR","STR0005",5))
ENDIF



IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
	IF EMPTY(SELF:CALIAS)
		USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0006",6)+"FWBROWSE"+": "+FWI18NLANG("FWBRWSTR","STR0006",6))
	ENDIF



ELSEIF SELF:DATATEXT()
	IF EMPTY(SELF:ODATA:GETFILE())
		USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0006",6)+"FWBROWSE"+": "+FWI18NLANG("FWBRWSTR","STR0007",7))
	ENDIF
ENDIF

IF SELF:OBROWSEUI:OOWNER == NIL
	SELF:OBROWSEUI:SETOWNER(SELF:OOWNER)
ENDIF




IF EMPTY(SELF:CPROFILEID)
	SELF:SETPROFILEID(SELF:CALIAS)
ENDIF




IF LFWBROWSE .AND.  GETRPORELEASE("R5") .AND.  FINDFUNCTION("FWGETPRFBRW")
	FWGETPRFBRW(SELF)
ENDIF



IF !SELF:LLOCATE .OR.  SELF:LACCVISUAL
	SELF:OBROWSEUI:SETUSELOCATE( .F. )
ENDIF



IF !SELF:LFILTER
	SELF:OBROWSEUI:SETUSEFILTER( .F. )
ENDIF



IF !SELF:LSEEK
	SELF:OBROWSEUI:SETUSESEEK( .F. )
ENDIF




IF !SELF:LSEEK
	SELF:OBROWSEUI:SETUSECASEFILTER( .F. )
ENDIF

IF !SELF:LACCVISUAL



	IF SELF:OPTIONREPORT() .AND.  FINDFUNCTION("__FWBRWREPORT")
		SELF:OBROWSEUI:BBROWSEPRINT := {|| SELF:REPORT() }
	ENDIF




	IF SELF:OPTIONCONFIG() .AND.  FINDFUNCTION("__FWCONTROLPANEL")
		SELF:OBROWSEUI:BCONFIG := {|O| SELF:CONFIG() }
	ENDIF
ENDIF

IF SELF:BONMOVE == NIL
	SELF:BONMOVE := {|OBROWSE,NMOVETYPE,NCURSORPOS,NQTDLINHA,NVISBLEROW|SELF:ONMOVE(OBROWSE,NMOVETYPE,NCURSORPOS,NQTDLINHA,NVISBLEROW)}
ENDIF


SELF:OBROWSEUI:SETBHOME( {|| EVAL(SELF:BONMOVE,SELF:OBROWSE,2,SELF:NCURSORPOS,0,SELF:NVISIBLEROWS)} )
SELF:OBROWSEUI:SETBPGUP( {|| EVAL(SELF:BONMOVE,SELF:OBROWSE,4,SELF:NCURSORPOS,0,SELF:NVISIBLEROWS)} )
SELF:OBROWSEUI:SETBUP( {|| EVAL(SELF:BONMOVE,SELF:OBROWSE,0,SELF:NCURSORPOS,1,SELF:NVISIBLEROWS)} )
SELF:OBROWSEUI:SETBEND( {|| EVAL(SELF:BONMOVE,SELF:OBROWSE,3,SELF:NCURSORPOS,0,SELF:NVISIBLEROWS)} )
SELF:OBROWSEUI:SETBPGDOWN( {||EVAL(SELF:BONMOVE,SELF:OBROWSE,5,SELF:NCURSORPOS,0,SELF:NVISIBLEROWS)} )
SELF:OBROWSEUI:SETBDOWN( {||EVAL(SELF:BONMOVE,SELF:OBROWSE,1,SELF:NCURSORPOS,1,SELF:NVISIBLEROWS)} )

SELF:OBROWSEUI:SETBCLEANFILTER( {|| IIF(SELF:FWFILTER() <> NIL , (SELF:FWFILTER():UNCHECKFILTER("*"),SELF:ODATA:REMOVEFILSEEK(SELF), SELF:CHECKEMPTY() ), ) } )

SELF:OBROWSEUI:BFILTRATESAY := { || SELF:FWFILTER():FILTERBAR(SELF:OBROWSEUI:OFOOTSAY, .T. )  }




SELF:OBROWSEUI:CREATECONTENT()




SELF:AFTERCONTENTCREATE()




SELF:OBROWSEUI:ACTIVATE()




IF SELF:OPTIONCONFIG()
	SELF:LOADCONFIG()
ENDIF

SELF:INITTOTALS()




SELF:LACTIVATE := .T. 




SELF:CREATEBROWSE()




SELF:AFTERBROWSECREATE()




SELF:LTOTALCHANGE := .T. 
SELF:ONCHANGE()


	SELF:CHECKEMPTY()


IF __CBUILDAPPSERVER > "7.00.131227A-20140129"
	SELF:ABKPSIZECOL := SELF:OBROWSE:GETCOLUMNSSIZE()
ENDIF

RETURN












FUNCTION ___FWBROWSE____AFTERCONTENTCREATE( )
	SELF:OBROWSE := SELF:OBROWSEUI:GETGRID()

	SELF:OFWFILTER := SELF:FWFILTER()

	SELF:INITLOCATE(SELF:OBROWSEUI:GETLOCATE())
	SELF:INITFILTER(SELF:OFWFILTER)
	SELF:INITSEEK(SELF:GETSEEK())
	SELF:INITCASEFILTER(SELF:OBROWSEUI:GETCASEFILTER())
	IF  SELF:OFWFILTER <> NIL
		IF ! SELF:DATATABLE()
			SELF:OFWFILTER:HIDEBTNFIELDS()
		ELSEIF  SELECT("SX2") == 0
			SELF:OFWFILTER:HIDEBTNFIELDS()
		ENDIF
	ENDIF
RETURN











FUNCTION ___FWBROWSE____AFTERBROWSECREATE( )
	SELF:OBROWSEUI:GETGRID():COLORDER(SELF:ABKPBRWORDER)
RETURN












FUNCTION ___FWBROWSE____ACTIONCONFIG(OPANEL )
LOCAL OCOMBO
LOCAL OCOMBO2
LOCAL OSAY
LOCAL OSELF   := SELF
LOCAL NLIN    := 5
LOCAL NCOL    := 5
LOCAL NCOLGET := 35
LOCAL CCLICK  := ""
LOCAL CDOUBLECLICK := ""
LOCAL ADOUBLECLICK := {}
LOCAL AHEADERCLICK := {}

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()




AEVAL(SELF:AITEMHEADERCLICK, { |X| AADD(AHEADERCLICK,X[1]) } )

 OSAY := TSAY():NEW( NLIN, NCOL,{||  FWI18NLANG("FWBRWSTR","STR0011",11)},OPANEL,,,.F.,.F.,.F.,.T.,,, 70, 10,.F.,.F.,.F.,.F.,.F.,.F. )

NLIN+= 10
OCOMBO := TCOMBOBOX():NEW(NLIN,NCOL,&("{ | U | IF( PCOUNT() == 0, CCLICK,CCLICK := U ) }"),AHEADERCLICK,73,10,OPANEL,,,,,, .T. ,,, .F. ,, .F. ,,,,)
OCOMBO:SELECT(SELF:NHEADERCLICK)

NLIN+=15
 OSAY := TSAY():NEW( NLIN, NCOL,{||  FWI18NLANG("FWBRWSTR","STR0012",12)},OPANEL,,,.F.,.F.,.F.,.T.,,, 70, 10,.F.,.F.,.F.,.F.,.F.,.F. )




AEVAL(SELF:AITEMDOUBLECLICK, { |X| AADD(ADOUBLECLICK,X[1]) } )

NLIN+= 10
OCOMBO2:= TCOMBOBOX():NEW(NLIN,NCOL,&("{ | U | IF( PCOUNT() == 0,CDOUBLECLICK,CDOUBLECLICK := U ) }"),ADOUBLECLICK,73,10,OPANEL,,,,,, .T. ,,, .F. ,, .F. ,,,,)
OCOMBO2:SELECT(SELF:NDOUBLECLICK)

IF FWISTOUCH()
	OSAY:NTOP += 20
	OCOMBO2:NTOP += 20
	IF FWCHKBUILD("7.00.120420A-20120529")
		OCOMBO:SETHEIGHT(35)
		OCOMBO2:SETHEIGHT(35)
	ENDIF
ENDIF







SELF:BCONFIGITEMCONFIRM := { || ( SELF:NHEADERCLICK := OCOMBO:NAT,IF(SELF:NHEADERCLICK>2,SELF:BCUSTOMHEADERCLICK := SELF:AITEMHEADERCLICK[SELF:NHEADERCLICK,2], IF(SELF:NHEADERCLICK==1,(SELF:LHEADERCLICK := .T. ,SELF:BCUSTOMHEADERCLICK:= NIL),SELF:LHEADERCLICK := .F. )), ( SELF:NDOUBLECLICK := OCOMBO2:NAT, IF(SELF:NDOUBLECLICK>2,SELF:BCUSTOMLDBLCLICK := SELF:AITEMDOUBLECLICK[SELF:NDOUBLECLICK,2], IF(SELF:NDOUBLECLICK==1,(SELF:LLDBLCLICK := .T. ,SELF:BCUSTOMLDBLCLICK:= NIL),SELF:LLDBLCLICK := .F. )))) }

RETURN














FUNCTION ___FWBROWSE____ADDBRWRELATION(OBRWREL )
IF !(VALTYPE(OBRWREL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OBRWREL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OBRWREL)); ENDIF

AADD( SELF:ABRWRELATION, OBRWREL )

RETURN






























FUNCTION ___FWBROWSE____ADDCOLUMN(ACOLUMN,LCREATE )
LOCAL OFWCOLUMN
LOCAL OSELF  := SELF
LOCAL NI     := 0
LOCAL NSIZE  := 0
LOCAL NSIZE2 := 0
LOCAL CBLINE := ""
LOCAL CTYPE  := ""

IF !(VALTYPE(ACOLUMN) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACOLUMN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ACOLUMN)); ENDIF
IF LCREATE <> NIL .AND.  !(VALTYPE(LCREATE) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LCREATE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LCREATE)); ENDIF; LCREATE := IF(LCREATE == NIL, .T. ,LCREATE)

IF (ACOLUMN[2] <> NIL) .AND.  (ACOLUMN[3] == "F")
	IF VALTYPE(EVAL(ACOLUMN[2])) == "U"
		ACOLUMN[2] := NIL
		ALERT(FWI18NLANG("FWBRWSTR","STR0077",77))
	ENDIF
ENDIF

IF (ACOLUMN[2] <> NIL)
	AADD( SELF:ACOLUMNS, OFWCOLUMN:= FWBRWCOLUMN():NEW() )
	OFWCOLUMN:SETTITLE(ACOLUMN[1])
	OFWCOLUMN:SETDATA(ACOLUMN[2])
	IF LEN(ACOLUMN) > 2
		CTYPE := ACOLUMN[3]
		IF ACOLUMN[3] == "F"
			CTYPE := VALTYPE(EVAL(ACOLUMN[2]))
		ENDIF
		OFWCOLUMN:SETTYPE(CTYPE)
	ENDIF
	IF LEN(ACOLUMN) > 3
		OFWCOLUMN:SETPICTURE(ACOLUMN[4])
	ENDIF
	IF LEN(ACOLUMN) > 4
		OFWCOLUMN:SETALIGN(ACOLUMN[5])
	ENDIF
	IF LEN(ACOLUMN) > 5
		OFWCOLUMN:SETSIZE(ACOLUMN[6])
	ENDIF
	IF LEN(ACOLUMN) > 6
		OFWCOLUMN:SETDECIMAL(ACOLUMN[7])
	ENDIF
	IF LEN(ACOLUMN) > 7
		OFWCOLUMN:SETEDIT(ACOLUMN[8])
	ENDIF
	IF LEN(ACOLUMN) > 8
		OFWCOLUMN:SETVALID(ACOLUMN[9])
	ENDIF
	IF LEN(ACOLUMN) > 9
		OFWCOLUMN:SETIMAGE(ACOLUMN[10])
	ENDIF
	IF LEN(ACOLUMN) > 10
		OFWCOLUMN:SETDOUBLECLICK(ACOLUMN[11])
	ENDIF
	IF LEN(ACOLUMN) > 11
		OFWCOLUMN:SETREADVAR(ACOLUMN[12])
	ENDIF
	IF LEN(ACOLUMN) > 12
		OFWCOLUMN:SETHEADERCLICK(ACOLUMN[13])
	ENDIF
	IF LEN(ACOLUMN) > 13
		IF VALTYPE(ACOLUMN[14]) == "L"
			OFWCOLUMN:SETDELETE(ACOLUMN[14])
		ENDIF
	ENDIF
	IF LEN(ACOLUMN) > 14
		OFWCOLUMN:SETDETAILS(ACOLUMN[15])
	ENDIF
	IF LEN(ACOLUMN) > 15
		OFWCOLUMN:SETOPTIONS(ACOLUMN[16])
	ENDIF
	IF LEN(ACOLUMN) > 16
		OFWCOLUMN:SETID(ACOLUMN[17])
	ENDIF
	IF LEN(ACOLUMN) > 17
		OFWCOLUMN:SETVIRTUAL(ACOLUMN[18])
	ENDIF
	OFWCOLUMN:SETORDER(LEN(SELF:ACOLUMNS))
	OFWCOLUMN:SETORDERDEFAULT(LEN(SELF:ACOLUMNS))




	IF VALTYPE(SELF:OBROWSE) == "O" .AND.  LCREATE
		NI := LEN(SELF:ACOLUMNS)




		IF SELF:LCHANGEFONT
			SELF:LCHANGEFONT := .F. 
			SELF:AFONTEWIDTH := GETFONTPIXWIDTHS(SELF:CFONTBODY,SELF:NFONTBODY,SELF:LFONTBOLD,SELF:LFONTITALIC,SELF:LFONTUNDERLINE )
		ENDIF




		IF SELF:ACOLUMNS[NI]:GETAUTOSIZE()



			NSIZE  := SELF:GETFONTWIDTH(SELF:ACOLUMNS[NI]:GETSIZE()+SELF:ACOLUMNS[NI]:GETDECIMAL())
			NSIZE2 := SELF:GETFONTWIDTH(LEN(SELF:ACOLUMNS[NI]:GETTITLE()))
			IF NSIZE < NSIZE2
				NSIZE := NSIZE2
			ENDIF
		ELSE
			IF SELF:ACOLUMNS[NI]:GETWIDTH() == 0
				NSIZE := SELF:ACOLUMNS[NI]:GETSIZE()
			ELSE
				NSIZE := SELF:ACOLUMNS[NI]:GETWIDTH()
			ENDIF
		ENDIF
		SELF:ACOLUMNS[NI]:SETGRIDID(NI)



		SELF:OBROWSE:ADDCOLUMN(NI,SELF:ACOLUMNS[NI]:GETTITLE(),NSIZE,SELF:ACOLUMNS[NI]:GETALIGN())

		FOR NI := 1 TO LEN(SELF:ACOLUMNS)
			CBLINE += "GETCOLUMNDATA(OSELF,"+LTRIM(STR(SELF:ACOLUMNS[NI]:GETORDERDEFAULT()))+"),"
		NEXT

		CBLINE := SUBSTR(CBLINE,1,LEN(CBLINE)-1)




		SELF:BLINE := &("{ |O| {" + CBLINE + "} }")
	ENDIF
ENDIF
RETURN OFWCOLUMN





























FUNCTION ___FWBROWSE____ADDUSERCOLUMN(ACOLUMN,LCREATE )
LOCAL OFWCOLUMN

IF !(VALTYPE(ACOLUMN) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACOLUMN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ACOLUMN)); ENDIF
IF LCREATE <> NIL .AND.  !(VALTYPE(LCREATE) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LCREATE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LCREATE)); ENDIF; LCREATE := IF(LCREATE == NIL, .T. ,LCREATE)

OFWCOLUMN := SELF:ADDCOLUMN(ACOLUMN,LCREATE)
OFWCOLUMN:SETUSERCOLUMN( .T. )

RETURN OFWCOLUMN












FUNCTION ___FWBROWSE____ADDCOLUMNCONFIG(OPANEL )
LOCAL OALIGN
LOCAL OBTN
LOCAL OPCONFIRM
LOCAL OSELF := SELF
LOCAL OEDIT
LOCAL OIMAGE
LOCAL OTYPE
LOCAL CALIGN   := ""
LOCAL CDATA    := SPACE(100)
LOCAL CEDIT    := ""
LOCAL CIMAGE   := ""
LOCAL CPICTURE := SPACE(60)
LOCAL CREADVAR := SPACE(10)
LOCAL CTITLE   := SPACE(60)
LOCAL CTYPE    := ""
LOCAL CVALID   := SPACE(60)
LOCAL CID   := SPACE(10)
LOCAL NWIDTH   := 0
LOCAL LEDIT    := .F. 
LOCAL LIMAGE   := .F. 
LOCAL NLIN     := 2
LOCAL NCOLSAY  := 7
LOCAL NCOLGET  := 85
LOCAL AALIGN   := {FWI18NLANG("FWBRWSTR","STR0013",13),FWI18NLANG("FWBRWSTR","STR0014",14),FWI18NLANG("FWBRWSTR","STR0015",15)}
LOCAL ACOLUMN  := {}
LOCAL AEDIT    := {FWI18NLANG("FWBRWSTR","STR0016",16),FWI18NLANG("FWBRWSTR","STR0017",17)}
LOCAL AIMAGE   := {FWI18NLANG("FWBRWSTR","STR0016",16),FWI18NLANG("FWBRWSTR","STR0017",17)}
LOCAL ATYPE    := {FWI18NLANG("FWBRWSTR","STR0018",18),FWI18NLANG("FWBRWSTR","STR0019",19),FWI18NLANG("FWBRWSTR","STR0020",20)}
LOCAL OSCROLL

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF





OPANEL:FREECHILDREN()

IF FWISTOUCH()
	OSCROLL := TSCROLLBOX():NEW (OPANEL,01,01,OPANEL:NHEIGHT,OPANEL:NWIDTH,, .T. ,)
	OSCROLL:ALIGN := 5

	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0021",21) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OGET := TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CTITLE, CTITLE := U ) },OSCROLL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CTITLE",,,, )

	NLIN+=20
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0022",22) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 ODATA := TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CDATA, CDATA := U ) },OSCROLL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CDATA",,,, )

	NLIN+=20
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0023",23) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OTYPE := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CTYPE, CTYPE := U ) }, ATYPE, 70, 10, OSCROLL,,,,,,.T.,,,.F.,,.F.,,, ,"CTYPE" )

	NLIN+=20
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0024",24) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OPICTURE := TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CPICTURE, CPICTURE := U ) },OSCROLL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CPICTURE",,,, )

	NLIN+=20
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0025",25) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OALIGN := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CALIGN, CALIGN := U ) }, AALIGN, 70, 10, OSCROLL,,,,,,.T.,,,.F.,,.F.,,, ,"CALIGN" )

	NLIN+=20
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0026",26) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OWIDTH := TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, NWIDTH, NWIDTH := U ) },OSCROLL, 20, 08, "999",,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"NWIDTH",,,, )

	NLIN+=20
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0027",27) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OEDIT := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CEDIT, CEDIT := U ) }, AEDIT, 70, 10, OSCROLL,,,,,,.T.,,,.F.,,.F.,,, ,"CEDIT" )

	NLIN+=20
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0028",28) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OVALID := TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CVALID, CVALID := U ) },OSCROLL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CVALID",,,, )

	NLIN+=20
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0029",29) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OIMAGE := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CIMAGE, CIMAGE := U ) }, AIMAGE, 70, 10, OSCROLL,,,,,,.T.,,,.F.,,.F.,,, ,"CIMAGE" )
	OIMAGE:NAT := 2

	NLIN+=20
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0030",30) }, OSCROLL,,,,,, .T. ,,,,,,,,,)
	 OREADVAR := TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CREADVAR, CREADVAR := U ) },OSCROLL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CREADVAR",,,, )

	OGET:NHEIGHT += 12
	ODATA:NHEIGHT += 12
	OPICTURE:NHEIGHT += 12
	OWIDTH:NHEIGHT += 12
	OVALID:NHEIGHT += 12
	OREADVAR:NHEIGHT += 12
	IF FWCHKBUILD("7.00.120420A-20120529")
		OTYPE:SETHEIGHT(35)
		OALIGN:SETHEIGHT(35)
		OEDIT:SETHEIGHT(35)
		OIMAGE:SETHEIGHT(35)
		OGET:LTABLET := .F. 
		ODATA:LTABLET := .F. 
		OPICTURE:LTABLET := .F. 
		OWIDTH:LTABLET := .F. 
		OVALID:LTABLET := .F. 
		OREADVAR:LTABLET := .F. 
	ENDIF
ELSE
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0021",21) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 OGET := TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CTITLE, CTITLE := U ) },OPANEL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CTITLE",,,, )

	NLIN+=12
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0022",22) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CDATA, CDATA := U ) },OPANEL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CDATA",,,, )

	NLIN+=12
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0023",23) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 OTYPE := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CTYPE, CTYPE := U ) }, ATYPE, 70, 10, OPANEL,,,,,,.T.,,,.F.,,.F.,,, ,"CTYPE" )

	NLIN+=12
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0024",24) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CPICTURE, CPICTURE := U ) },OPANEL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CPICTURE",,,, )

	NLIN+=12
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0025",25) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 OALIGN := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CALIGN, CALIGN := U ) }, AALIGN, 70, 10, OPANEL,,,,,,.T.,,,.F.,,.F.,,, ,"CALIGN" )

	NLIN+=12
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0026",26) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, NWIDTH, NWIDTH := U ) },OPANEL, 20, 08, "999",,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"NWIDTH",,,, )

	NLIN+=12
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0027",27) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 OEDIT := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CEDIT, CEDIT := U ) }, AEDIT, 70, 10, OPANEL,,,,,,.T.,,,.F.,,.F.,,, ,"CEDIT" )

	NLIN+=12
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0028",28) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CVALID, CVALID := U ) },OPANEL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CVALID",,,, )

	NLIN+=12
	TSAY():NEW(NLIN+1,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0029",29) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 OIMAGE := TCOMBOBOX():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CIMAGE, CIMAGE := U ) }, AIMAGE, 70, 10, OPANEL,,,,,,.T.,,,.F.,,.F.,,, ,"CIMAGE" )
	OIMAGE:NAT := 2

	NLIN+=12
	TSAY():NEW(NLIN+2,NCOLSAY, {|| FWI18NLANG("FWBRWSTR","STR0030",30) }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CREADVAR, CREADVAR := U ) },OPANEL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CREADVAR",,,, )

	NLIN+=12
	TSAY():NEW(NLIN+2,NCOLSAY, {|| "ID" }, OPANEL,,,,,, .T. ,,,,,,,,,)
	 TGET():NEW( NLIN, NCOLGET, { | U | IF( PCOUNT() == 0, CID, CID := U ) },OPANEL, 70, 08,,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,"CID",,,, )
ENDIF
 OPCONFIRM := TPANEL():NEW( 00, 00,,OPANEL,,.F.,.F.,,, 11, 11,.F.,.F. )
OPCONFIRM:ALIGN := 4




 OBTN := TBUTTON():NEW( 00, 00, FWI18NLANG("FWBRWSTR","STR0031",31), OPCONFIRM,{||  IIF(VALIDNEWCOLUMN(CTITLE,CDATA,CTYPE,CPICTURE,CALIGN,NWIDTH,CEDIT,CVALID,CIMAGE,CREADVAR,CID),(ACOLUMN:=SELF:GETCOLUMNCONFIG(CTITLE,CDATA,CTYPE,CPICTURE,CALIGN,NWIDTH,CEDIT,CVALID,CIMAGE,CREADVAR,CID),SELF:ADDUSERCOLUMN(ACOLUMN)),NIL)}, 35, 10,,,.F.,.T.,.F.,,.F.,,,.F. )



OBTN:ALIGN := 2




SELF:BCONFIGITEMCONFIRM := NIL

RETURN













FUNCTION ___FWBROWSE____ADDCUSTOMCONFIG(CTITLE,BVIEW,BSAVE )
IF !(VALTYPE(CTITLE) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CTITLE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CTITLE)); ENDIF
IF !(VALTYPE(BVIEW) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BVIEW"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BVIEW)); ENDIF
IF BSAVE <> NIL .AND.  !(VALTYPE(BSAVE) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BSAVE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BSAVE)); ENDIF; BSAVE := IF(BSAVE == NIL,{||},BSAVE)

AADD( SELF:ACUSTOMCONFIG, { CTITLE, BVIEW, BSAVE } )

RETURN




















FUNCTION ___FWBROWSE____ADDFILTER(CFILTER,CEXPADVPL,LNOCHECK,LSELECTED,CALIAS,LFILTERASK,AFILPARSER,CID,LFUNCTION )
LOCAL NLEN := 0
LOCAL NPOS := 0
LOCAL OFWFILTER

IF !(VALTYPE(CFILTER) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CFILTER)); ENDIF
IF !(VALTYPE(CEXPADVPL) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CEXPADVPL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CEXPADVPL)); ENDIF
IF LNOCHECK <> NIL .AND.  !(VALTYPE(LNOCHECK) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LNOCHECK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LNOCHECK)); ENDIF; LNOCHECK := IF(LNOCHECK == NIL, .F. ,LNOCHECK)
IF LSELECTED <> NIL .AND.  !(VALTYPE(LSELECTED) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"3"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LSELECTED"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LSELECTED)); ENDIF; LSELECTED := IF(LSELECTED == NIL, .F. ,LSELECTED)
IF CALIAS <> NIL .AND.  !(VALTYPE(CALIAS) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"4"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CALIAS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CALIAS)); ENDIF; CALIAS := IF(CALIAS == NIL,"",CALIAS)
IF LFILTERASK <> NIL .AND.  !(VALTYPE(LFILTERASK) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"5"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFILTERASK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFILTERASK)); ENDIF; LFILTERASK := IF(LFILTERASK == NIL, .F. ,LFILTERASK)
IF AFILPARSER <> NIL .AND.  !(VALTYPE(AFILPARSER) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"6"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AFILPARSER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AFILPARSER)); ENDIF; AFILPARSER := IF(AFILPARSER == NIL,{},AFILPARSER)
IF CID <> NIL .AND.  !(VALTYPE(CID) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"7"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CID"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CID)); ENDIF; CID := IF(CID == NIL,"",CID)
IF LFUNCTION <> NIL .AND.  !(VALTYPE(LFUNCTION) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"8"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFUNCTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFUNCTION)); ENDIF; LFUNCTION := IF(LFUNCTION == NIL, .F. ,LFUNCTION)

IF !EMPTY(CFILTER) .AND.  !EMPTY(CEXPADVPL)
	OFWFILTER := SELF:FWFILTER()



	IF !SELF:LACTIVATE
		AADD( SELF:AFILTERDEFAULT, ARRAY(10) )
		NLEN := LEN(SELF:AFILTERDEFAULT)
		SELF:AFILTERDEFAULT[NLEN,1         ] := CFILTER
		SELF:AFILTERDEFAULT[NLEN,2   ] := CEXPADVPL
		SELF:AFILTERDEFAULT[NLEN,5 ] := LNOCHECK
		SELF:AFILTERDEFAULT[NLEN,6] := LSELECTED
		SELF:AFILTERDEFAULT[NLEN,7     ] := LFILTERASK
		SELF:AFILTERDEFAULT[NLEN,8   ] := CALIAS
		SELF:AFILTERDEFAULT[NLEN,4  ] := AFILPARSER
		SELF:AFILTERDEFAULT[NLEN,9      ] := CID
		IF VALTYPE(OFWFILTER) == "O" .AND.  ASCAN(OFWFILTER:AFILTER, { |X| X[2] == SELF:AFILTERDEFAULT[NLEN,2] } ) == 0
			OFWFILTER:ADDLEVEL(SELF:AFILTERDEFAULT[NLEN,1],SELF:AFILTERDEFAULT[NLEN,2],"",AFILPARSER,SELF:AFILTERDEFAULT[NLEN,5],LFILTERASK,SELF:AFILTERDEFAULT[NLEN,5] .OR.  SELF:AFILTERDEFAULT[NLEN,6],CALIAS,SELF:AFILTERDEFAULT[NLEN,9],LFUNCTION)
		ENDIF
	ELSE



		IF ASCAN(OFWFILTER:AFILTER, { |X| X[2] == CEXPADVPL } ) == 0
			OFWFILTER:ADDLEVEL(CFILTER,CEXPADVPL,"",AFILPARSER,LNOCHECK,LFILTERASK,LNOCHECK .OR.  LSELECTED,CALIAS,CID)



			IF !EMPTY(CALIAS) .AND.  !EMPTY(OFWFILTER:ARELATION)
				IF (NPOS := ASCAN(OFWFILTER:ARELATION, { |X| X[2] == CALIAS })) > 0
					OFWFILTER:ARELATION[NPOS,1] := .T. 
				ENDIF
			ENDIF
		ENDIF
	ENDIF
ENDIF

RETURN













FUNCTION ___FWBROWSE____ADDITEMHEADERCLICK(AITEMHEADERCLICK )

AADD(SELF:AITEMHEADERCLICK,AITEMHEADERCLICK)

RETURN













FUNCTION ___FWBROWSE____ADDITEMDOUBLECLICK(AITEMDOUBLECLICK )

AADD(SELF:AITEMDOUBLECLICK,AITEMDOUBLECLICK)

RETURN















FUNCTION ___FWBROWSE____ADDLEGEND(XCONDITION,CCOLOR,CTITLE,CID,LFILTER )
LOCAL OLEGEND

IF !(VALTYPE(XCONDITION) $ SUBS("CHARACTER",1,1) + SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"XCONDITION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+","+SUBS("BLOCK",1,1)+"->"+VALTYPE(XCONDITION)); ENDIF
IF !(VALTYPE(CCOLOR) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CCOLOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CCOLOR)); ENDIF
IF CTITLE <> NIL .AND.  !(VALTYPE(CTITLE) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CTITLE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CTITLE)); ENDIF; CTITLE := IF(CTITLE == NIL,"",CTITLE)
IF CID <> NIL .AND.  !(VALTYPE(CID) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"3"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CID"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CID)); ENDIF; CID := IF(CID == NIL,"DEFAULT",CID)
IF LFILTER <> NIL .AND.  !(VALTYPE(LFILTER) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"4"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFILTER)); ENDIF; LFILTER := IF(LFILTER == NIL, .T. ,LFILTER)

IF (NPOS := ASCAN( SELF:ALEGENDS, { |X| X[1] == CID } )) > 0
	OLEGEND := SELF:ALEGENDS[NPOS,2]
ELSE



	OLEGEND := FWLEGEND():NEW()
	OLEGEND:SETNUMBER(SELF:LNUMBERLEGEND)
	SELF:ADDSTATUSCOLUMNS({ || OLEGEND:EXECUTE() },{ || OLEGEND:VIEW() })
	AADD(SELF:ALEGENDS, { CID, OLEGEND, LEN(SELF:ACOLUMNS) } )
ENDIF




OLEGEND:ADD(XCONDITION,CCOLOR,CTITLE)



IF VALTYPE(XCONDITION) == "C" .AND.  LFILTER
	SELF:ADDFILTER(CTITLE,XCONDITION)
ENDIF

RETURN










FUNCTION ___FWBROWSE____ADDLINE( )
LOCAL NLASTREC := 0

IF (SELF:DATATABLE() .OR.  SELF:DATAARRAY())
	NLASTREC := SELF:LOGICLEN()+1
	SELF:ODATA:ADDLINE()
	SELF:BLOGICLEN := { || NLASTREC }



	SELF:NLEN := SELF:LOGICLEN()



	IF VALTYPE(SELF:BAFTERADDLINE) == "B"
		EVAL(SELF:BAFTERADDLINE,SELF)
	ENDIF
ENDIF

RETURN














FUNCTION ___FWBROWSE____ADDMARKCOLUMNS(BMARK,BLDBLCLICK,BHEADERCLICK,CHDDESC )
LOCAL OFWCOLUMN
LOCAL BDATA := { || SELF:BDATAMARK(BMARK) }

IF !(VALTYPE(BMARK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BMARK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BMARK)); ENDIF
IF BLDBLCLICK <> NIL .AND.  !(VALTYPE(BLDBLCLICK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BLDBLCLICK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BLDBLCLICK)); ENDIF
IF BHEADERCLICK <> NIL .AND.  !(VALTYPE(BHEADERCLICK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BHEADERCLICK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BHEADERCLICK)); ENDIF
IF CHDDESC <> NIL .AND.  !(VALTYPE(CHDDESC) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"3"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CHDDESC"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CHDDESC)); ENDIF; CHDDESC := IF(CHDDESC == NIL,"",CHDDESC)

AADD( SELF:ACOLUMNS, OFWCOLUMN:= FWBRWCOLUMN():NEW())
OFWCOLUMN:SETTITLE(CHDDESC)
OFWCOLUMN:SETDATA(BDATA)
OFWCOLUMN:SETTYPE("C")
OFWCOLUMN:SETDOUBLECLICK(BLDBLCLICK)
OFWCOLUMN:SETALIGN("CENTER")
OFWCOLUMN:SETSIZE(3)
OFWCOLUMN:SETDECIMAL(0)
OFWCOLUMN:SETIMAGE( .T. )
OFWCOLUMN:SETDETAILS( .F. )
OFWCOLUMN:SETORDER(LEN(SELF:ACOLUMNS))
OFWCOLUMN:SETORDERDEFAULT(LEN(SELF:ACOLUMNS))
OFWCOLUMN:SETHEADERCLICK(BHEADERCLICK)

RETURN












FUNCTION ___FWBROWSE____ADDSTATUSCOLUMNS(BSTATUS,BLDBLCLICK )
LOCAL OFWCOLUMN
LOCAL BDATA := { || SELF:BDATASTATUS(BSTATUS) }

IF !(VALTYPE(BSTATUS) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BSTATUS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BSTATUS)); ENDIF
IF BLDBLCLICK <> NIL .AND.  !(VALTYPE(BLDBLCLICK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BLDBLCLICK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BLDBLCLICK)); ENDIF

AADD( SELF:ACOLUMNS, OFWCOLUMN:= FWBRWCOLUMN():NEW() )
OFWCOLUMN:SETTITLE("")
OFWCOLUMN:SETDATA(BDATA)
OFWCOLUMN:SETTYPE("C")
OFWCOLUMN:SETDOUBLECLICK(BLDBLCLICK)
OFWCOLUMN:SETALIGN("CENTER")
OFWCOLUMN:SETSIZE(3)
OFWCOLUMN:SETDECIMAL(0)
OFWCOLUMN:SETIMAGE( .T. )
OFWCOLUMN:SETDETAILS( .F. )
OFWCOLUMN:SETORDER(LEN(SELF:ACOLUMNS))
OFWCOLUMN:SETORDERDEFAULT(LEN(SELF:ACOLUMNS))




IF SELF:LACCVISUAL .AND.  VALTYPE(BLDBLCLICK) == "B"
	AVSETLEGEND(BLDBLCLICK)
ENDIF

RETURN











FUNCTION ___FWBROWSE____ALIAS( )

RETURN SELF:CALIAS











FUNCTION ___FWBROWSE____ALLOK( )
LOCAL LRET := .T. 

IF VALTYPE(SELF:BALLOK) == "B"
	LRET := EVAL(SELF:BALLOK,SELF)
	IF VALTYPE(LRET) <> "L"
		LRET := .T. 
	ENDIF
ENDIF

RETURN LRET












FUNCTION ___FWBROWSE____ALIGNCONFIG(OPCENTER )
LOCAL OALIGN
LOCAL OPANEL
LOCAL NI       := 0
LOCAL NLIN     := 5
LOCAL NCOLGET  := 95
LOCAL NCOLSAY  := 5
LOCAL NSIZE    := 0
LOCAL NTOTAL   := LEN(SELF:ACOLUMNS)
LOCAL CTITLE   := ""
LOCAL AALIGN   := {FWI18NLANG("FWBRWSTR","STR0014",14),FWI18NLANG("FWBRWSTR","STR0013",13),FWI18NLANG("FWBRWSTR","STR0015",15)}
LOCAL ACBALIGN := ARRAY(NTOTAL)
LOCAL OCOMBO
IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		NSIZE+=12
	ENDIF
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5


FOR NI := 1 TO NTOTAL



	ACBALIGN[NI] := ALLTRIM(STR(SELF:ACOLUMNS[NI]:GETALIGN()))



	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		IF SELF:ACOLUMNS[NI]:ISIMAGE()
			CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
		ELSE
			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
		ENDIF
		TSAY():NEW(NLIN+1,NCOLSAY,&("{||'"+ CTITLE +"'}"), OPANEL,,,,,, .T. ,,,,,,,,,)
		OCOMBO := TCOMBOBOX():NEW(NLIN,NCOLGET,&("{ | U | IF( PCOUNT() == 0, ACBALIGN["+STR(NI)+"],ACBALIGN["+STR(NI)+"] := U ) }"),AALIGN,50,10,OPANEL,,,,,, .T. ,,, .F. ,, .F. ,,,,)
		IF FWISTOUCH()
			IF FWCHKBUILD("7.00.120420A-20120529")
				OCOMBO:SETHEIGHT(35)
				NLIN += 9
			ENDIF
		ENDIF
		NLIN+=12
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETALIGNCOLUMNS(ACBALIGN) }

RETURN











FUNCTION ___FWBROWSE____AT( )

RETURN SELF:NAT












FUNCTION ___FWBROWSE____BDATAGROUP( )
LOCAL CIMAGE
LOCAL NPOS

IF VALTYPE(SELF:BGROUP) == "B" .AND.  EVAL(SELF:BGROUP,SELF)
	IF (NPOS := ASCAN(SELF:AGROUP,{ |X| X[1] == SELF:NAT } )) == 0
		CIMAGE := IIF(SELF:LOPENGROUP,"SHORTCUTMINUS","SHORTCUTPLUS")
		AADD( SELF:AGROUP, { SELF:NAT,SELF:LOPENGROUP, 0, 0 } )
		ASORT(SELF:AGROUP,,,{|X,Y| X[1] < Y[1] })
	ELSE
		CIMAGE := IIF(SELF:AGROUP[NPOS,2],"SHORTCUTMINUS","SHORTCUTPLUS")
	ENDIF
ENDIF

RETURN CIMAGE













FUNCTION ___FWBROWSE____BDATAMARK(BMARK )
LOCAL CIMAGE

CIMAGE := EVAL(BMARK,SELF)

RETURN CIMAGE













FUNCTION ___FWBROWSE____BDATASTATUS(BSTATUS )
LOCAL CIMAGE

CIMAGE := EVAL(BSTATUS,SELF)

RETURN CIMAGE











FUNCTION ___FWBROWSE____BROWSE( )

RETURN SELF:OBROWSE












FUNCTION ___FWBROWSE____BROWSECONFIG(OCONFIG )
LOCAL OSELF := SELF
LOCAL BLCLICKED
LOCAL NI
LOCAL CTITLE := ""

IF !(VALTYPE(OCONFIG) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OCONFIG"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OCONFIG)); ENDIF

OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0032",32),,{ |OPANELCONFIG| SELF:ACTIONCONFIG(OPANELCONFIG)       })
OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0033",33),,{ |OPANELCONFIG| SELF:FONTCONFIG(OPANELCONFIG)         })
OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0034",34),,{ |OPANELCONFIG| SELF:CLRALTERNATECONFIG(OPANELCONFIG) })
OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0035",35),,{ |OPANELCONFIG| SELF:COLORCONFIG(OPANELCONFIG)        })
OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0036",36),,{ |OPANELCONFIG| SELF:LINEHEIGHTCONFIG(OPANELCONFIG)   })
IF VALTYPE(SELF:FWFILTER()) == "O"
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0037",37),,{ |OPANELCONFIG| SELF:FILTERCONFIG(OPANELCONFIG) })
ENDIF
IF VALTYPE(SELF:GETSEEK()) == "O"
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0038",38),,{ |OPANELCONFIG| SELF:SEEKCONFIG(OPANELCONFIG) })
ENDIF
IF VALTYPE(SELF:OBROWSEUI:GETLOCATE()) == "O" .AND.  SELF:LLOCATE
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0039",39),,{ |OPANELCONFIG| SELF:LOCATECONFIG(OPANELCONFIG) })
ENDIF

IF !EMPTY(SELF:ACUSTOMCONFIG)
	FOR NI := 1 TO LEN(SELF:ACUSTOMCONFIG)
		CTITLE := SELF:ACUSTOMCONFIG[NI,1]


		BLCLICKED := &(" { |OPANELCONFIG| OPANELCONFIG:FREECHILDREN(),"+ 'IF(VALTYPE(OSELF:BCONFIGITEMCONFIRM)=="B",EVAL(OSELF:BCONFIGITEMCONFIRM),),'+ "EVAL("+GETCBSOURCE(OSELF:ACUSTOMCONFIG[NI,2])+",OPANELCONFIG) }")
		OCONFIG:ADDTREEITEM(CTITLE,,BLCLICKED)
	NEXT
ENDIF

RETURN












FUNCTION ___FWBROWSE____CLASSIFYCOLUMNCONFIG(OPCENTER )
LOCAL OCOMBO
LOCAL OPANEL
LOCAL NI         := 0
LOCAL NIMAGE     := 0
LOCAL NLIN       := 5
LOCAL NPOS       := 0
LOCAL NCOL       := 5
LOCAL NSIZE      := 0
LOCAL NTOTAL     := LEN(SELF:ACOLUMNS)
LOCAL ACHECKS    := ARRAY(NTOTAL)
LOCAL ACLASSIF   := {}
LOCAL ACOMBO     := {}
LOCAL ACBCLASSIF := ARRAY(NTOTAL)
LOCAL CPOS		:= ""

IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5




AADD( ACLASSIF, " " )
FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  !SELF:ACOLUMNS[NI]:USERCOLUMN() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M" .AND.  !SELF:ACOLUMNS[NI]:GETVIRTUAL()
		IF !SELF:ACOLUMNS[NI]:ISIMAGE()
			AADD( ACLASSIF, LTRIM(STR(SELF:ACOLUMNS[NI]:GETORDERDEFAULT()))+"="+SELF:ACOLUMNS[NI]:GETTITLE() )
			NSIZE+=12
		ENDIF
	ENDIF
NEXT
NSIZE+=20

FOR NI := 1 TO NTOTAL



	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  !SELF:ACOLUMNS[NI]:USERCOLUMN() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		IF !SELF:ACOLUMNS[NI]:ISIMAGE()
			AADD( ACOMBO, TCOMBOBOX():NEW(NLIN,NCOL,&("{ | U | IF( PCOUNT() == 0, ACBCLASSIF["+STR(NI)+"],ACBCLASSIF["+STR(NI)+"] := U ) }"),ACLASSIF,55,10,OPANEL,,,,,, .T. ,,, .F. ,, .F. ,,,,))



			IF LEN(ACOMBO) <= LEN(SELF:ACLASSIFY)
				CPOS := ALLTRIM(STR(SELF:ACLASSIFY[LEN(ACOMBO),1]))
				ACOMBO[LEN(ACOMBO)]:SELECT(ASCAN( ACLASSIF,{|X| SUBSTR(X,1,LEN(CPOS)) == CPOS } ) )
				ACHECKS[LEN(ACOMBO)+NIMAGE] := SELF:ACLASSIFY[LEN(ACOMBO),2]
			ENDIF
			TCHECKBOX():NEW(NLIN,NCOL+60,FWI18NLANG("FWBRWSTR","STR0040",40),&("{ | U | IF( PCOUNT() == 0, ACHECKS[" + STR(NI) + "], ACHECKS[" + STR(NI) + "] := U ) }"),OPANEL,70,10,, {|| },,,,, .F. , .T. ,, .F. , )
			NLIN+=12
		ELSE
			NIMAGE++
		ENDIF
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETCLASSIFYCOLUMN(ACBCLASSIF,ACHECKS) }

RETURN











FUNCTION ___FWBROWSE____CLASSNAME( )

RETURN "FWBROWSE"











FUNCTION ___FWBROWSE____CLEANEXFILTER( )

IF SELF:DATATABLE()
	SELF:ODATA:CLEANEXFILTER()
ENDIF

RETURN












FUNCTION ___FWBROWSE____CLEANPROFILE( )
LOCAL OPROFILE
LOCAL APROFILE := {}

__FWPROFILE := IF( __FWPROFILE == NIL, FINDFUNCTION("__FWPROFILE"), __FWPROFILE ) ;




IF __FWPROFILE
	OPROFILE:= FWPROFILE():NEW()
	OPROFILE:SETTASK("PROTHEUS")
	OPROFILE:SETTYPE(IF(SUBSTR(SELF:GETPROFILEID(),1,4)=="FWLK","BRW","BROWSE")+SELF:GETPROFILEID())
	OPROFILE:SETPROFILE(APROFILE)
	OPROFILE:SAVE(SELF:ISCFGEMPFIL())



	SELF:ABKPBRWORDER := {}
ENDIF

SELF:SETFORECOLOR(0)
SELF:SETBACKCOLOR(16777215)
SELF:SETCLRALTERROW(( 178 + ( 203 * 256 ) + ( 231 * 65536 ) ))
RETURN












FUNCTION ___FWBROWSE____CLRALTERNATECONFIG(OPANEL )
LOCAL OBGCOLOR
LOCAL NCLRALTERROW := SELF:NCLRALTERROW
LOCAL NLIN         := 5
LOCAL NCOL         := 65
LOCAL NLINIMAGE    := 5
LOCAL NCOLIMAGE    := 100

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()

TSAY():NEW(NLIN+1,10, {|| FWI18NLANG("FWBRWSTR","STR0034",34) }, OPANEL,,,,,, .T. ,0,,40,10,,,,,)
TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE,25,25,"BGCOLOR","BGCOLOR",,,{ |O| SELF:COLORTRIANGLE(O,OBGCOLOR,2) }, OPANEL, , , .T.  )

OBGCOLOR := TSAY():NEW(NLIN,NCOL, {|| " " }, OPANEL,,,,,, .T. ,0,NCLRALTERROW,32,10,,,,,)
OBGCOLOR:LTRANSPARENT := .F. 




SELF:BCONFIGITEMCONFIRM := { || SELF:LCLRALTERROW := .T.  }

RETURN












FUNCTION ___FWBROWSE____COLORCOLUMNCONFIG(OPANEL )
LOCAL OPOPUP
LOCAL OSELF     := SELF
LOCAL NI        := 0
LOCAL NLIN      := 5
LOCAL NCOLSAY   := 5
LOCAL NLINIMAGE := 10
LOCAL NCOLIMAGE := 100
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL CTITLE    := ""
LOCAL ACOLORS   := ARRAY(NTOTAL,3)

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED()



		ACOLORS[NI,1] := SELF:ACOLUMNS[NI]:GETBACKCOLOR()
		ACOLORS[NI,2] := SELF:ACOLUMNS[NI]:GETFORECOLOR()
		NSIZE+=10
	ENDIF
NEXT
NSIZE+=20

OPOPUP := FWPANELPOPUP():NEW(0,0,NSIZE,90,OPANEL)

 OPANEL := TPANEL():NEW( 00, 00,,OPOPUP,,.F.,.F.,,, 0, 0,.F.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL



	IF !SELF:ACOLUMNS[NI]:DELETED()
		IF SELF:ACOLUMNS[NI]:ISIMAGE()
			CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
		ELSE
			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
		ENDIF
		TSAY():NEW(NLIN+1,NCOLSAY,&("{||'"+ CTITLE +"'}"), OPANEL,,,,,, .T. ,,,,,,,,,)
		TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE,10,10,"FW_ARROW_RIGHT","FW_ARROW_RIGHT",,,&("{ || OSELF:COLORCONFIG(OPANEL,ACOLORS["+STR(NI)+"]) }"), OPANEL, , , .T.  )
		NLIN+=10
		NLINIMAGE+=20
	ENDIF
NEXT


 TBUTTON():NEW( NLIN+2, NCOLSAY+15, FWI18NLANG("FWBRWSTR","STR0031",31), OPANEL,{||  (SELF:SETCOLORCOLUMNS(ACOLORS),OPOPUP:HIDE(),SELF:UPDATEBROWSE())}, 35, 10,,,.F.,.T.,.F.,,.F.,,,.F. )

OPOPUP:ACTIVATE(,,OPANEL)

RETURN















FUNCTION ___FWBROWSE____COLORCONFIG(OPANEL,ACOLORS )
LOCAL OBGCOLOR
LOCAL OFRCOLOR
LOCAL OSELF        := SELF
LOCAL NBACKCOLOR   := SELF:NBACKCOLOR
LOCAL NFORECOLOR   := SELF:NFORECOLOR
LOCAL NLIN         := 5
LOCAL NCOL         := 65
LOCAL NLINIMAGE    := 5
LOCAL NCOLIMAGE    := 100

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF
IF ACOLORS <> NIL .AND.  !(VALTYPE(ACOLORS) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACOLORS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ACOLORS)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()

IF VALTYPE(ACOLORS) == "A"
	NBACKCOLOR   := ACOLORS[1]
	NFORECOLOR   := ACOLORS[2]
ENDIF




TSAY():NEW(NLIN+1,05, {|| FWI18NLANG("FWBRWSTR","STR0041",41) }, OPANEL,,,,,, .T. ,0,,50,10,,,,,)

OBTN := TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE,25,25,"BGCOLOR","BGCOLOR",,,{ |O| SELF:COLORTRIANGLE(O,OBGCOLOR,1,ACOLORS) }, OPANEL, , , .T.  )
OBTN:CTOOLTIP := FWI18NLANG("FWBRWSTR","STR0042",42)

OBGCOLOR := TSAY():NEW(NLIN,NCOL, {|| " " }, OPANEL,,,,,, .T. ,0,NBACKCOLOR,32,10,,,,,)
OBGCOLOR:LTRANSPARENT := .F. 




NLIN+= 13
NLINIMAGE+= 26
TSAY():NEW(NLIN+1,05, {|| FWI18NLANG("FWBRWSTR","STR0043",43) }, OPANEL,,,,,, .T. ,0,,50,10,,,,,)
OBTN := TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE,25,25,"FRCOLOR","FRCOLOR",,,{ |O| SELF:COLORTRIANGLE(O,OFRCOLOR,3,ACOLORS) }, OPANEL, , , .T.  )

OFRCOLOR := TSAY():NEW(NLIN,NCOL, {|| " " }, OPANEL,,,,,, .T. ,0,NFORECOLOR,32,10,,,,,)
OFRCOLOR:LTRANSPARENT := .F. 




SELF:BCONFIGITEMCONFIRM := { || SELF:LCLRALTERROW := .F.  }

RETURN

















FUNCTION ___FWBROWSE____COLORTRIANGLE(OOBJECT,OSAYCOLOR,NOPTION,ACOLORS )
LOCAL BACTION
LOCAL OCOLORT
LOCAL ODLG
LOCAL OSELF     := SELF
LOCAL NLIN      := 85
LOCAL NCOL      := 135
LOCAL NCOLORINI := 0
LOCAL NTOP      := 0
LOCAL NLEFT     := 0
LOCAL LCENTERED := .T. 

IF !(VALTYPE(OOBJECT) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OOBJECT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OOBJECT)); ENDIF
IF !(VALTYPE(OSAYCOLOR) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OSAYCOLOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OSAYCOLOR)); ENDIF
IF !(VALTYPE(NOPTION) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NOPTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NOPTION)); ENDIF
IF ACOLORS <> NIL .AND.  !(VALTYPE(ACOLORS) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"3"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACOLORS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ACOLORS)); ENDIF




IF NOPTION == 1
	IF VALTYPE(ACOLORS) == "A"
		NCOLORINI := ACOLORS[1]
		BACTION := &("{|| ACOLORS[1] := OCOLORT:RETCOLOR() }")
	ELSE
		NCOLORINI := SELF:NBACKCOLOR
		BACTION := &("{|| OSELF:SETBACKCOLOR(OCOLORT:RETCOLOR()) }")
	ENDIF



ELSEIF NOPTION == 2
	IF VALTYPE(ACOLORS) == "A"
		NCOLORINI := ACOLORS[3]
		BACTION := &("{|| ACOLORS[3] := OCOLORT:RETCOLOR() }")
	ELSE
		NCOLORINI := SELF:NCLRALTERROW
		BACTION := &("{|| OSELF:SETCLRALTERROW(OCOLORT:RETCOLOR()) }")
	ENDIF



ELSE
	IF VALTYPE(ACOLORS) == "A"
		NCOLORINI := ACOLORS[2]
		BACTION := &("{|| ACOLORS[2] := OCOLORT:RETCOLOR() }")
	ELSE
		NCOLORINI := SELF:NFORECOLOR
		BACTION := &("{|| OSELF:SETFORECOLOR(OCOLORT:RETCOLOR()) }")
	ENDIF
ENDIF

OOBJECT:OWND:COMMITCONTROLS()




NTOP  := OOBJECT:OWND:NTOP
NLEFT := OOBJECT:OWND:NLEFT-320
IF FINDFUNCTION("_GETXCOORS")
	_GETXCOORS(OOBJECT,@NTOP)
	_GETYCOORS(OOBJECT,@NLEFT)
	LCENTERED := .F. 
ENDIF




ODLG = MSDIALOG():NEW( NTOP, NLEFT, NTOP+170, NLEFT+340,,,,.F., NOR(268435456,2147483648),,,,,.T.,, ,.F. )

OCOLORT := TCOLORTRIANGLE():CREATE(ODLG)
OCOLORT:SETCOLORINI(NCOLORINI)
OCOLORT:SETSIZETRIANGLE(160,145)


 TBUTTON():NEW( NLIN, NCOL, FWI18NLANG("FWBRWSTR","STR0031",31), ODLG,{||  (EVAL(BACTION),OSAYCOLOR:NCLRPANE:=OCOLORT:RETCOLOR(),OSAYCOLOR:REFRESH(),ODLG:END())}, 35, 10,,,.F.,.T.,.F.,,.F.,,,.F. )

IF LCENTERED
	ODLG:ACTIVATE( ODLG:BLCLICKED, ODLG:BMOVED, ODLG:BPAINTED,.T.,,,, ODLG:BRCLICKED, )
ELSE
	ODLG:ACTIVATE( ODLG:BLCLICKED, ODLG:BMOVED, ODLG:BPAINTED,,,,, ODLG:BRCLICKED, )
ENDIF

RETURN












FUNCTION ___FWBROWSE____COLPOS(LDELETED )
LOCAL NAUX    := 0
LOCAL NI      := 0
LOCAL NDEL    := 0
LOCAL NCOLPOS := 1
LOCAL NPOSDEF := 0

IF LDELETED <> NIL .AND.  !(VALTYPE(LDELETED) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LDELETED"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LDELETED)); ENDIF; LDELETED := IF(LDELETED == NIL, .T. ,LDELETED)

IF __CBUILDAPPSERVER >= "7.00.090818P-20100119" .AND.  SELF:OBROWSE <> NIL
	NCOLPOS := SELF:OBROWSE:COLPOS()



	IF LDELETED
		FOR NI := 1 TO LEN(SELF:ACOLUMNS)
			IF (NPOSDEF := ASCAN(SELF:ACOLUMNS, {|X| NI == X:NORDERDEFAULT})) > 0
				IF SELF:ACOLUMNS[NPOSDEF]:DELETED() .OR.  SELF:ACOLUMNS[NPOSDEF]:GETTYPE() == "M"
					NDEL++
				ELSE
					NAUX++
				ENDIF
				IF NAUX == NCOLPOS
					NCOLPOS+=NDEL
					EXIT
				ENDIF
			ELSE
				EXIT
			ENDIF
		NEXT
	ENDIF
ENDIF

RETURN NCOLPOS












FUNCTION ___FWBROWSE____COLUMNSCONFIG(OCONFIG )
IF !(VALTYPE(OCONFIG) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OCONFIG"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OCONFIG)); ENDIF


	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0044",44),,{ |OPANELCONFIG| SELF:ADDCOLUMNCONFIG(OPANELCONFIG)        })
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0045",45),,{ |OPANELCONFIG| SELF:DELCOLUMNCONFIG(OPANELCONFIG)        })
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0046",46),,{ |OPANELCONFIG| SELF:RECUPARATECOLUMNCONFIG(OPANELCONFIG) })
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0047",47),,{ |OPANELCONFIG| SELF:ORDERCONFIG(OPANELCONFIG)            })
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0025",25),,{ |OPANELCONFIG| SELF:ALIGNCONFIG(OPANELCONFIG)            })




	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0024",24),,{ |OPANELCONFIG| SELF:PICTURECOLUMNCONFIG(OPANELCONFIG)    })
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0026",26),,{ |OPANELCONFIG| SELF:WIDTHCOLUMNCONFIG(OPANELCONFIG)      })
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0048",48),,{ |OPANELCONFIG| SELF:COMMENTCOLUMNCONFIG(OPANELCONFIG)    })
	IF (SELF:DATATABLE() .AND.  RDDNAME() == "TOPCONN" .AND.  !SELF:LSETFILTER) .OR.  SELF:DATAARRAY()
		OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0049",49),,{ |OPANELCONFIG| SELF:CLASSIFYCOLUMNCONFIG(OPANELCONFIG)   })
	ENDIF
	OCONFIG:ADDTREEITEM(FWI18NLANG("FWBRWSTR","STR0050",50),,{ |OPANELCONFIG| SELF:TOTALCOLUMNCONFIG(OPANELCONFIG)      })

RETURN











FUNCTION ___FWBROWSE____COLUMNORDER(AORDER,NORDER,LUP )
LOCAL NNEWORDER := 0
LOCAL NOLDORDER := 0
LOCAL COLDTITLE := ""
LOCAL LCHGORDER := .T. 




IF !LUP .AND.  AORDER[NORDER][1] == LEN(AORDER)
	LCHGORDER := .F. 
ELSEIF LUP .AND.  AORDER[NORDER][1] == 1
	LCHGORDER := .F. 
ENDIF

IF LCHGORDER
	IF LUP
		NNEWORDER := AORDER[NORDER][1]-1
		IF EMPTY(AORDER[NNEWORDER][4])
			NNEWORDER := NNEWORDER - 1
		ENDIF
	ELSE
		NNEWORDER := AORDER[NORDER][1]+1
		IF EMPTY(AORDER[NNEWORDER][4])
			NNEWORDER := NNEWORDER + 1
		ENDIF
	ENDIF



	NOLDORDER := AORDER[NORDER][2]
	AORDER[NORDER][2] := AORDER[NNEWORDER][2]
	AORDER[NNEWORDER][2] := NOLDORDER




	COLDTITLE := AORDER[NORDER][4]:CCAPTION
	AORDER[NORDER][4]:CCAPTION := AORDER[NNEWORDER][4]:CCAPTION
	AORDER[NNEWORDER][4]:CCAPTION := COLDTITLE



	AORDER[NNEWORDER][4]:REFRESH()
	AORDER[NORDER][4]:REFRESH()
ENDIF

RETURN LCHGORDER












FUNCTION ___FWBROWSE____COMMENTCOLUMNCONFIG(OPCENTER )
LOCAL OPANEL
LOCAL OSAY
LOCAL OSELF     := SELF
LOCAL NI        := 0
LOCAL NLIN      := 5
LOCAL NCOLSAY   := 5
LOCAL NLINIMAGE := 13
LOCAL NCOLIMAGE := 250
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL CTITLE    := ""
LOCAL ACOMMENT  := {}

IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		NSIZE+=10
	ENDIF
	AADD( ACOMMENT, SELF:ACOLUMNS[NI]:GETCOMMENT() )
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL



	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		IF SELF:ACOLUMNS[NI]:ISIMAGE()
			CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
		ELSE
			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
		ENDIF

		OSAY := TSAY():NEW(NLIN+1,NCOLSAY,&("{||'"+ CTITLE +"'}"), OPANEL,,,,,, .T. ,,,,,,,,,)
		OSAY:BLCLICKED := &("{ |O| OSELF:COMMENTCONFIG(O,ACOMMENT,"+STR(NI)+") }")

		TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE,13,13,"RPMCABEC","RPMCABEC",,,&("{ |O| OSELF:COMMENTCONFIG(O,ACOMMENT,"+STR(NI)+") }"), OPANEL, , , .T.  )
		NLIN+=10
		NLINIMAGE+=20
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETCOMMENTCOLUMNS(ACOMMENT) }

RETURN



















FUNCTION ___FWBROWSE____COMMENTCONFIG(OOBJECT,ACOMMENT,NCOLUMN,LREADONLY,NTOP,NLEFT )
LOCAL OBTN
LOCAL ODLG
LOCAL NLIN      := 1
LOCAL NCOL      := 1
LOCAL CCOMMENT  := SPACE(60)
LOCAL LCENTERED := .T. 

IF !(VALTYPE(OOBJECT) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OOBJECT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OOBJECT)); ENDIF
IF !(VALTYPE(ACOMMENT) $ SUBS("ARRAY",1,1) + SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACOMMENT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+","+SUBS("CHARACTER",1,1)+"->"+VALTYPE(ACOMMENT)); ENDIF
IF NCOLUMN <> NIL .AND.  !(VALTYPE(NCOLUMN) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NCOLUMN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NCOLUMN)); ENDIF
IF LREADONLY <> NIL .AND.  !(VALTYPE(LREADONLY) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"3"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LREADONLY"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LREADONLY)); ENDIF; LREADONLY := IF(LREADONLY == NIL, .F. ,LREADONLY)
IF NTOP <> NIL .AND.  !(VALTYPE(NTOP) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"4"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NTOP"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NTOP)); ENDIF; NTOP := IF(NTOP == NIL,0,NTOP)
IF NLEFT <> NIL .AND.  !(VALTYPE(NLEFT) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"5"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NLEFT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NLEFT)); ENDIF; NLEFT := IF(NLEFT == NIL,0,NLEFT)

IF VALTYPE(ACOMMENT) == "A"
	IF VALTYPE(ACOMMENT[NCOLUMN]) == "C"
		CCOMMENT := ACOMMENT[NCOLUMN]
	ENDIF
ELSE
	CCOMMENT := ACOMMENT
ENDIF

OOBJECT:OWND:COMMITCONTROLS()




IF NTOP == 0
	NTOP  := OOBJECT:OWND:NTOP
ENDIF
IF NLEFT == 0
	NLEFT := OOBJECT:OWND:NLEFT
ENDIF

IF FINDFUNCTION("_GETXCOORS")
	_GETXCOORS(OOBJECT,@NTOP)
	_GETYCOORS(OOBJECT,@NLEFT)
	LCENTERED := .F. 
ENDIF

ODLG = MSDIALOG():NEW( NTOP, NLEFT, NTOP+115, NLEFT+240,,,,.F.,,,,,,.T.,, ,.F. )

TMULTIGET():NEW(NLIN,NCOL,&("{ | U | IF( PCOUNT() == 0, CCOMMENT,CCOMMENT := U ) }"),ODLG,120,44,, .T. ,,,, .T. ,, .F. ,{||}, .F. , .F. ,LREADONLY,{||},{||}, .F. , .F. )

NLIN+= 45

 TBUTTON():NEW( NLIN, NCOL+85, FWI18NLANG("FWBRWSTR","STR0031",31), ODLG,{||  (IF(!LREADONLY,ACOMMENT[NCOLUMN]:=CCOMMENT,),ODLG:END())}, 35, 10,,,.F.,.T.,.F.,,.F.,,,.F. )

ODLG:ACTIVATE( ODLG:BLCLICKED, ODLG:BMOVED, ODLG:BPAINTED,.T.,,,, ODLG:BRCLICKED, )

RETURN












FUNCTION ___FWBROWSE____CONFIG(OOBJECT )
LOCAL NI
LOCAL OCONFIG
LOCAL AORDER  := {}
LOCAL AORDBRW := {}



IF __CBUILDAPPSERVER >= "7.00.090818P-20100119"
	FOR NI := 1 TO LEN(SELF:ACOLUMNS)
		IF !SELF:ACOLUMNS[NI]:DELETED()
			AADD( AORDER, { NI, SELF:ACOLUMNS[NI]:NORDERDEFAULT } )
		ENDIF
	 NEXT
	SELF:SETORDERCOLUMNS(AORDER)
ENDIF

IF __LISP12
	FWBRWCONFIG(SELF)
	RETURN
ENDIF




SELF:BCONFIGITEMCONFIRM := NIL



SELF:BAPPLYCONFIG := { ||	IF(VALTYPE(SELF:BCONFIGITEMCONFIRM)=="B",EVAL(SELF:BCONFIGITEMCONFIRM),), IF(VALTYPE(SELF:OFONTCONFIG)=="O",(SELF:SETFONTBROWSE(SELF:OFONTCONFIG),SELF:OFONTCONFIG := NIL),), SELF:UPDATEBROWSE( .F. )}

	OCONFIG := FWCONTROLPANEL():NEW(0,0,400,530,,FWI18NLANG("FWBRWSTR","STR0051",51),90,{ |OPANELCONFIG,LTITLE| EVAL(SELF:BAPPLYCONFIG),OCONFIG:OWND:END() },{ || OCONFIG:OWND:END() } )




	OCONFIG:ADDTREE(FWI18NLANG("FWBRWSTR","STR0052",52),"BMPTABLE",{ |OPANELCONFIG,LTITLE| IF(VALTYPE(SELF:BCONFIGITEMCONFIRM)=="B",(EVAL(SELF:BCONFIGITEMCONFIRM),SELF:BCONFIGITEMCONFIRM := NIL),),IF(!LTITLE,CAPTION(OPANELCONFIG,FWI18NLANG("FWBRWSTR","STR0052",52)),NIL) })
	SELF:BROWSECONFIG(OCONFIG)
	OCONFIG:ENDTREE()




	OCONFIG:ADDTREE(FWI18NLANG("FWBRWSTR","STR0053",53),"BMPCPO",{ |OPANELCONFIG,LTITLE| IF(VALTYPE(SELF:BCONFIGITEMCONFIRM)=="B",(EVAL(SELF:BCONFIGITEMCONFIRM),SELF:BCONFIGITEMCONFIRM := NIL),),IF(!LTITLE,CAPTION(OPANELCONFIG,FWI18NLANG("FWBRWSTR","STR0053",53)),NIL) })
	SELF:COLUMNSCONFIG(OCONFIG)
	OCONFIG:ENDTREE()





	IF SELF:BCONFIG <> NIL
		EVAL(SELF:BCONFIG,OCONFIG,SELF)
	ENDIF




	IF SELF:LSAVECONFIG



		OCONFIG:ADDTREE(FWI18NLANG("FWBRWSTR","STR0054",54),"SALVAR", { |OPANELCONFIG,LTITLE| SELF:SAVECONFIG(OPANELCONFIG,LTITLE,FWI18NLANG("FWBRWSTR","STR0054",54)), LSAVEDCONFIG := .T.  } )
		OCONFIG:ENDTREE()




		OCONFIG:ADDTREE(FWI18NLANG("FWBRWSTR","STR0055",55),"DEVOLNF", { |OPANELCONFIG,LTITLE| SELF:RECUPCONFIG(OPANELCONFIG,LTITLE,FWI18NLANG("FWBRWSTR","STR0055",55)) } )
		OCONFIG:ENDTREE()
	ENDIF

OCONFIG:ACTIVATE()
RETURN













FUNCTION ___FWBROWSE____CREATEBROWSE(LUPDATE,LFORCEUPDTB )

LOCAL AFILTER AS  ARRAY
LOCAL CBLINE AS  CHAR
LOCAL CFILTER AS  CHAR
LOCAL LOBLIGATEFILTER AS  LOGICAL
LOCAL NI AS  NUMERIC
LOCAL NPOS AS  NUMERIC
LOCAL NSIZE AS  NUMERIC
LOCAL NSIZE2 AS  NUMERIC
LOCAL NORDER AS  NUMERIC
LOCAL NDEL AS  NUMERIC
LOCAL NCOL AS  NUMERIC
LOCAL NCOLUMN AS  NUMERIC
LOCAL NADJUST AS  NUMERIC
LOCAL OSELF AS  OBJECT
LOCAL OFWFILTER AS  OBJECT

NDEL     := 0
OSELF    := SELF
CBLINE   := ""
CFILTER  := ""
LOBLIGATEFILTER := .F. 
AFILTER  := {}
NCOL := 1
NCOLUMN := 1
NADJUST	:= 0
OFWFILTER := SELF:FWFILTER()

IF LUPDATE <> NIL .AND.  !(VALTYPE(LUPDATE) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LUPDATE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LUPDATE)); ENDIF; LUPDATE := IF(LUPDATE == NIL, .F. ,LUPDATE)
IF LFORCEUPDTB <> NIL .AND.  !(VALTYPE(LFORCEUPDTB) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFORCEUPDTB"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFORCEUPDTB)); ENDIF; LFORCEUPDTB := IF(LFORCEUPDTB == NIL, .T. ,LFORCEUPDTB)




IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
	SELF:NAT := SELF:ODATA:FIRSTRECNO()
ELSE
	SELF:NAT := 1
ENDIF

IF FWISTOUCH()
	SELF:OBROWSE:NTOP += 20
ENDIF




IF SELF:LACCVISUAL
	SELF:OBROWSE:BGOTFOCUS := {|| AVSPEAK(AVGETSTRING(79), .T. ), AVGRIDLINECHANGE(SELF) }
ELSE
	IF !EMPTY(SELF:ALEGENDS) .AND.  ASCAN(SELF:ALEGENDS, {|X| X[3] == 1}) > 0
		NCOL := 2
		NCOLUMN := 2
	ENDIF

	FOR NI := NCOL TO LEN(SELF:ACOLUMNS)
		IF SELF:ACOLUMNS[NI]:LIMAGE
			NCOLUMN++
			EXIT
		ELSE
			EXIT
		ENDIF
	NEXT
	SELF:OBROWSE:BGOTFOCUS := IIF(EMPTY(SELF:BGOTFOCUS), {|| SELF:GOCOLUMN(NCOLUMN) }, SELF:BGOTFOCUS)
ENDIF




IF __CBUILDAPPSERVER >= "7.00.090818P-20100119"
	SELF:OBROWSE:SETSELECTIONMODE(SELF:NTYPEMOVE)
ENDIF




IF SELF:DATATABLE() .AND.  VALTYPE(SELF:BAPPLYPARAMS) == "B" .AND.  VALTYPE(OFWFILTER) == "O"
	SELF:OBROWSE:BRCLICKED := { |O,NCOL,NLIN| GETAPPLY(O,NCOL-20,NLIN-170,SELF:CALIAS, .T. , .T. , SELF:BAPPLYPARAMS) }
ENDIF



SELF:SETCOLOR()



SELF:SETLINEHEIGHT(SELF:NROWHEIGHT)



SELF:OBROWSE:BLDBLCLICK := { |OTGRID| IIF(SELF:LLDBLCLICK,SELF:DOUBLECLICK(OTGRID),) }



SELF:OBROWSE:LCANGOTFOCUS := SELF:LCANGOTFOCUS



SELF:OBROWSE:BKEYBLOCK  := { |OTGRID,NCHAR| IIF(SELF:LLDBLCLICK,SELF:DOUBLECLICK(OTGRID,NCHAR),) }



IF VALTYPE(SELF:NVISIBLEROWS) <> "N"
	SELF:UPDVISIBRW()
ENDIF



IF VALTYPE(SELF:ODATA) == "O"
	IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()



		SELF:APPLYLEFTJOIN()



		SELF:ODATA:SETALIAS(SELF:CALIAS)



		IF SELF:DATATABLE() .AND.  !SELF:LHASCHECKEDNATIVE
			SELF:ODATA:SETFILTERNATIVE((SELF:CALIAS)->(DBFILTER()))
			SELF:LHASCHECKEDNATIVE := .T. 
		ENDIF



		IF VALTYPE(OFWFILTER) == "O"
			IF ASCAN(OFWFILTER:AFILTER, { |X| X[5] == .T.  } ) > 0
				AFILTER := OFWFILTER:GETFILTER( .F. )
				IF SELF:LAPPLYFILTERONACTIVATE
					SELF:ODATA:EXECUTEFILTER(AFILTER,4)
				ENDIF
			ELSEIF !EMPTY(SELF:CFILTERDEFAULT)
				IF SELF:LAPPLYFILTERONACTIVATE
					SELF:ODATA:EXECUTEFILTER(SELF:CFILTERDEFAULT,4)
				ENDIF
			ELSEIF SELF:DATATABLE() .AND.  !EMPTY(SELF:ODATA:CFILTERNATIVE)
				IF SELF:LAPPLYFILTERONACTIVATE
					SELF:ODATA:EXECUTEFILTER(SELF:ODATA:CFILTERNATIVE,4,,,,,, .T. )
				ENDIF
			ENDIF
		ELSEIF !EMPTY(SELF:CFILTERDEFAULT)
			IF SELF:LAPPLYFILTERONACTIVATE
				SELF:ODATA:EXECUTEFILTER(SELF:CFILTERDEFAULT,4)
			ENDIF
		ELSEIF SELF:DATATABLE() .AND.  !EMPTY(SELF:ODATA:CFILTERNATIVE)
			IF SELF:LAPPLYFILTERONACTIVATE
				SELF:ODATA:EXECUTEFILTER(SELF:ODATA:CFILTERNATIVE,4)
			ENDIF
		ENDIF
	ENDIF



	SELF:ODATA:ACTIVATE(SELF:OBROWSE)
ENDIF



IF !EMPTY(SELF:ACOLUMNS)
	FOR NI := 1 TO LEN(SELF:ACOLUMNS)



		IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"



			IF VALTYPE(SELF:ADEFAULTCOLUMNS) == "A"
				IF (NPOS := ASCAN(SELF:ADEFAULTCOLUMNS,{ |X| X:GETTITLE() == SELF:ACOLUMNS[NI]:GETTITLE() })) > 0



					IF SELF:DATATEXT()
						IF EMPTY(SELF:ACOLUMNS[NI]:GETDATA())
							SELF:ACOLUMNS[NI]:SETDATA(SELF:ODATA:GETDATA(SELF,NPOS))
						ENDIF
					ENDIF
				ENDIF
			ENDIF



			IF SELF:LCHANGEFONT
				SELF:LCHANGEFONT := .F. 
				SELF:AFONTEWIDTH := GETFONTPIXWIDTHS(SELF:CFONTBODY,SELF:NFONTBODY,SELF:LFONTBOLD,SELF:LFONTITALIC,SELF:LFONTUNDERLINE )
			ENDIF




			IF SELF:ACOLUMNS[NI]:GETAUTOSIZE()



				NSIZE  := SELF:GETFONTWIDTH(SELF:ACOLUMNS[NI]:GETSIZE()+SELF:ACOLUMNS[NI]:GETDECIMAL())+15
				NSIZE2 := SELF:GETFONTWIDTH(LEN(SELF:ACOLUMNS[NI]:GETTITLE()))+15
				IF NSIZE < NSIZE2
					NSIZE := NSIZE2
				ENDIF



				IF NSIZE > 500
					NSIZE := 500
				ENDIF
			ELSE
				IF SELF:ACOLUMNS[NI]:GETWIDTH() == 0
					NSIZE := SELF:ACOLUMNS[NI]:GETSIZE()
				ELSE
					NSIZE := SELF:ACOLUMNS[NI]:GETWIDTH()
				ENDIF
			ENDIF

			SELF:ACOLUMNS[NI]:SETGRIDID(NI)



			SELF:OBROWSE:ADDCOLUMN(NI,SELF:ACOLUMNS[NI]:GETTITLE(),NSIZE,SELF:ACOLUMNS[NI]:GETALIGN())

			CBLINE += "GETCOLUMNDATA(OSELF,"+LTRIM(STR(SELF:ACOLUMNS[NI]:GETORDERDEFAULT()))+"),"



			IF __CBUILDAPPSERVER >= "7.00.090818P-20100119"
				IF !SELF:DATATEXT() .AND.  !SELF:DATAQUERY() .AND.  VALTYPE(SELF:ACOLUMNS[NI]:GETHEADERCLICK()) <> "B" .AND.  !SELF:ACOLUMNS[NI]:ISIMAGE()
					IF SELF:LORDERCOL .AND.  (SELF:DATAARRAY() .OR.  (!EMPTY(SELF:ACOLUMNS[NI]:READVAR()) .AND.  HASORD(SELF:CALIAS,SELF:ACOLUMNS[NI]:READVAR())))
						SELF:ACOLUMNS[NI]:SETHEADERIMAGE("VCRIGHT")
						SELF:ACOLUMNS[NI]:SETHEADERCLICK( { || SELF:ORDERCOLUMN() } )
					ENDIF
				ENDIF
				SELF:SETHEADERIMAGE(NI-NDEL,SELF:ACOLUMNS[NI]:GETHEADERIMAGE())
			ENDIF
		ELSE
			NDEL++
		ENDIF
	NEXT

	CBLINE := SUBSTR(CBLINE,1,LEN(CBLINE)-1)



	SELF:BLINE := CRIABLOCK( SELF, CBLINE )



	SELF:OBROWSE:BCURSORMOVE:= {|O,NMVTYPE,NCURPOS,NOFFSET,NVISROWS| EVAL(SELF:BONMOVE,O,NMVTYPE,NCURPOS,NOFFSET,NVISROWS) }



	IF (SELF:LEXECCHGCOLUMN .OR.  VALTYPE(SELF:ATOTAL) == "A") .AND.  __CBUILDAPPSERVER >= "7.00.090818P-20100119"
		SELF:OBROWSE:BCOLUMNCHANGED := { |O,NMVTYPE,NCURPOS| SELF:ONCOLUMNCHANGED() }
	ENDIF



	IF LUPDATE
		SELF:GOTOP( .T. ,LFORCEUPDTB)
	ELSE



		IF SELF:OBLIGATEFILTER()
			IF OFWFILTER <>NIL
				LOBLIGATEFILTER := OFWFILTER:FILTERBAR(OFWFILTER:OBUTTON,,!SELF:LCANCANCELFILTER)
			ENDIF
		ENDIF



		IF !LOBLIGATEFILTER



			IF VALTYPE(OFWFILTER) == "O"
				IF SELF:LAPPLYFILTERONACTIVATE
					SELF:EXECUTEFILTER()
				ENDIF



				SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN
			ELSE



				SELF:UPDATETOPBOT()



				SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN



				SELF:GOTOP( .T. )
			ENDIF
		ENDIF
	ENDIF



	IF SELF:LINSERT
		IF SELF:BADD == NIL
			SELF:BADD := {|| SELF:ADDLINE() }
		ENDIF
	ENDIF



	IF __CBUILDAPPSERVER >= "7.00.090818P-20100119"
		SELF:OBROWSE:SETHEADERCLICK({ || SELF:VIEWCOMMENT(), IIF(SELF:LHEADERCLICK,SELF:HEADERCLICK(),) })
	ENDIF
ENDIF




IF __CBUILDAPPSERVER >= "7.00.090818P-20100119"



		SELF:OBROWSE:BKEYBLOCK := { |OGRID,CKEY| SELF:KEYBLOCK(OGRID,CKEY) }




		SELF:OBROWSE:SETKEYVALUE( 46, 1 )
		SELF:OBROWSE:SETKEYVALUE( 114, 1 )



		SELF:OBROWSE:SETKEYVALUE( 500, 1 )
ENDIF

IF FWISTOUCH()
	IF SELF:OFONT == NIL
		SELF:OFONT := TFONT():NEW("ARIAL",,-15,)
	ENDIF
	IF SELF:OFONT <> NIL
		IF SELF:LFONTBOLD
			SELF:OFONT:BOLD := .T. 
		ELSE
			SELF:OFONT:BOLD := .F. 
		ENDIF
		IF SELF:LFONTITALIC
			SELF:OFONT:ITALIC := .T. 
		ELSE
			SELF:OFONT:ITALIC := .F. 
		ENDIF
		IF SELF:LFONTUNDERLINE
			SELF:OFONT:UNDERLINE := .T. 
		ELSE
			SELF:OFONT:UNDERLINE := .F. 
		ENDIF
	ENDIF
ENDIF
SELF:SETFONTBROWSE(SELF:OFONT)

SELF:OBROWSEUI:SETBTOTALRECALC({ |O| AEVAL(SELF:ATOTAL, { |X| IIF(VALTYPE(X)=="O",(X:SETVALUE(0),X:SETNEEDREFRESH()),)}),SELF:SETTOTALCOLUMNS() })




IF VALTYPE(SELF:ATOTAL) == "A"
	SELF:SETTOTALCOLUMNS()
ENDIF




SELF:NLEN := SELF:LOGICLEN()




IF SELF:LCANGOTFOCUS .AND.  SELF:LFOCUSONACTIVATE
	SELF:OBROWSE:SETFOCUS( .T. )
ENDIF

RETURN











FUNCTION ___FWBROWSE____DATA( )

RETURN SELF:ODATA











FUNCTION ___FWBROWSE____DATAARRAY( )

RETURN SELF:LDATAARRAY











FUNCTION ___FWBROWSE____DATAQUERY( )

RETURN SELF:LDATAQUERY











FUNCTION ___FWBROWSE____DATATABLE( )

RETURN SELF:LDATATABLE











FUNCTION ___FWBROWSE____DATATEXT( )

RETURN SELF:LDATATEXT












FUNCTION ___FWBROWSE____DBFFILTER( )

RETURN SELF:LDBFFILTER











FUNCTION ___FWBROWSE____DEACTIVATE(LFREECHILDREN )
LOCAL CFILTERNATIVE AS  CHARACTER
IF LFREECHILDREN <> NIL .AND.  !(VALTYPE(LFREECHILDREN) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFREECHILDREN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFREECHILDREN)); ENDIF; LFREECHILDREN := IF(LFREECHILDREN == NIL, .F. ,LFREECHILDREN)
IF SELF:LACTIVATE

	SELF:LACTIVATE := .F. 




	IF SELF:DATATABLE()
		IF SELECT(SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN") > 0
			SELF:RESTOREAREA()
		ENDIF
		IF SELECT(SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN") > 0
			(SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN")->(DBCLOSEAREA())
		ENDIF
		DBSELECTAREA(SELF:CREALALIAS)
	ENDIF





	IF SELF:DATATABLE()
		CFILTERNATIVE := SELF:ODATA:CFILTERNATIVE
		SELF:ODATA:SETFILTERNATIVE("")
		SELF:ODATA:SETFILTERDEFAULT("")
	ENDIF

	IF !SELF:LDATAQUERY
		SELF:ODATA:DEACTIVATE()
	ENDIF




	SELF:OBROWSEUI:DEACTIVATE()

	IF LFREECHILDREN .AND.  VALTYPE(SELF:OOWNER) == "O"
		SELF:OOWNER:FREECHILDREN()
	ENDIF

	IF SELF:LDATAQUERY

		SELF:ODATA:DEACTIVATE()
	ENDIF

	IF SELF:DATATABLE() .AND.  !EMPTY(CFILTERNATIVE)
		(SELF:CALIAS)->(DBSETFILTER({|| &CFILTERNATIVE } , CFILTERNATIVE))
	ENDIF

	SELF:CIDALIAS  := ""




ENDIF
RETURN










FUNCTION ___FWBROWSE____DESTROY( )
LOCAL NX := 0

IF SELF:DODESTROY()
	SELF:DEACTIVATE( .T. )

	IF SELF:OFWFILTER <> NIL
		SELF:OFWFILTER:DESTROY()
		SELF:OFWFILTER := NIL
	ENDIF

	IF SELF:OBROWSEUI  <> NIL
		SELF:OBROWSEUI:DESTROY()
		SELF:OBROWSEUI := NIL
	ENDIF

	IF SELF:OCONFIG	 <> NIL
		SELF:OCONFIG:DESTROY()
		SELF:OCONFIG := NIL
	ENDIF


	IF SELF:ACOLUMNS <> NIL
		FOR NX := 1 TO LEN( SELF:ACOLUMNS )
			IF SELF:ACOLUMNS[NX] <> NIL
				SELF:ACOLUMNS[NX]:DESTROY()
				SELF:ACOLUMNS[NX] := NIL
			ENDIF
		NEXT
	ENDIF


	IF SELF:ADEFAULTCOLUMNS <> NIL
		FOR NX := 1 TO LEN( SELF:ADEFAULTCOLUMNS )
			IF SELF:ADEFAULTCOLUMNS[NX] <> NIL
				SELF:ADEFAULTCOLUMNS[NX]:DESTROY()
				SELF:ADEFAULTCOLUMNS[NX] := NIL
			ENDIF
		NEXT
	ENDIF

	FWFREEARRAY( SELF:ACOLUMNS )
	FWFREEARRAY( SELF:ADEFAULTCOLUMNS )
	FWFREEARRAY( SELF:ABREAKREPORT )
	FWFREEARRAY( SELF:ABRWRELATION )
	FWFREEARRAY( SELF:ACLASSIFY )
	FWFREEARRAY( SELF:ACUSTOMCONFIG )
	FWFREEARRAY( SELF:ACUSTOMCOLOR )
	FWFREEARRAY( SELF:ADEFORDERSEEK )
	FWFREEARRAY( SELF:AEMPTYMESSAGE )
	FWFREEARRAY( SELF:AFILTERDEFAULT )
	FWFREEARRAY( SELF:AFONTEWIDTH )
	FWFREEARRAY( SELF:AGROUP )
	FWFREEARRAY( SELF:AITEMHEADERCLICK )
	FWFREEARRAY( SELF:AITEMDOUBLECLICK )
	FWFREEARRAY( SELF:ALEFTJOIN )
	FWFREEARRAY( SELF:ALEGENDS )
	FWFREEARRAY( SELF:AMAPFIELD )
	FWFREEARRAY( SELF:ATOTAL )
	FWFREEARRAY( SELF:ATOTALDEFAULT )
	FWFREEARRAY( SELF:ABKPBRWORDER )
	FWFREEARRAY( SELF:ABKPSIZECOL )
	FWFREEARRAY( SELF:ABKPPROFILE )
	FWFREEARRAY( SELF:ARECBRWRELA )
	FWFREEARRAY( SELF:AVISIBLEREG )
	FWFREEARRAY( SELF:AUNIQUEKEY )
	FWFREEARRAY( SELF:ASORDER )





	IF SELF:OOWNER 	<> NIL
		SELF:OOWNER:FREECHILDREN()
		SELF:OOWNER 	:= NIL
	ENDIF
	SELF:OBACKPANEL	:= NIL
	SELF:OBROWSE	:= NIL
	SELF:OFONT		:= NIL
	SELF:OFONTCONFIG	:= NIL
	SELF:OFWFORMGRID	:= NIL
	SELF:OMARK			:= NIL
	SELF:OPANELEMPTY	:= NIL

ENDIF
RETURN











FUNCTION ___FWBROWSE____DEFAULT( )
RETURN












FUNCTION ___FWBROWSE____DELETEFILTER(CID )
LOCAL OFWFILTER
IF CID <> NIL .AND.  !(VALTYPE(CID) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CID"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CID)); ENDIF; CID := IF(CID == NIL,"",CID)
OFWFILTER := SELF:FWFILTER()
IF VALTYPE(OFWFILTER) == "O" .AND.  OFWFILTER:FILTEREXISTS(CID)
	OFWFILTER:DELETEFILTER(CID)



	SELF:REFRESH( .T. ,, .F. )
ENDIF

RETURN











FUNCTION ___FWBROWSE____DELCOLUMN(NCOLUMN )

SELF:ACOLUMNS[NCOLUMN]:SETDELETE()

RETURN












FUNCTION ___FWBROWSE____DELCOLUMNCONFIG(OPCENTER )
LOCAL OPANEL
LOCAL CTITLE    := ""
LOCAL NI        := 0
LOCAL NLIN      := 5
LOCAL NCOL      := 5
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL ACHECKS   := ARRAY(NTOTAL)




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		NSIZE+=10
	ENDIF
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED()
		IF SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
			IF SELF:ACOLUMNS[NI]:ISIMAGE()
				CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
			ELSE
				CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
			ENDIF
			ACHECKS[NI] := .F. 
			TCHECKBOX():NEW(NLIN,NCOL,CTITLE,&("{ | U | IF( PCOUNT() == 0, ACHECKS[" + STR(NI) + "], ACHECKS[" + STR(NI) + "] := U ) }"),OPANEL,100,10,, {|| },,,,, .F. , .T. ,, .F. , )
			NLIN+=10
		ELSE
			ACHECKS[NI] := .F. 
		ENDIF
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETDELCOLUMN(ACHECKS) }

RETURN










FUNCTION ___FWBROWSE____DELLINE( )

IF SELF:DATATABLE() .OR.  SELF:DATAARRAY()
	IF VALTYPE(SELF:BDELETE) == "B" .AND.  SELF:DELOK()
		EVAL(SELF:BDELETE,SELF)

	ENDIF
ENDIF

RETURN











FUNCTION ___FWBROWSE____DELOK( )
LOCAL LRET := .T. 

IF VALTYPE(SELF:BDELOK) == "B"
	LRET := EVAL(SELF:BDELOK,SELF)
ENDIF

RETURN LRET










FUNCTION ___FWBROWSE____DISABLE( )

SELF:OOWNER:DISABLE()

RETURN










FUNCTION ___FWBROWSE____DISABLECONFIG( )

SELF:LOPTIONCONFIG := .F. 
SELF:OBROWSEUI:SETUSECONFIG( .F. )
RETURN










FUNCTION ___FWBROWSE____DISABLEFILTER( )

SELF:LFILTER := .F. 
SELF:OBROWSEUI:SETUSEFILTER( .F. )

RETURN










FUNCTION ___FWBROWSE____DISABLELOCATE( )

SELF:LLOCATE := .F. 
SELF:OBROWSEUI:SETUSELOCATE( .F. )

RETURN










FUNCTION ___FWBROWSE____DISABLEREPORT( )

SELF:LOPTIONREPORT := .F. 
SELF:OBROWSEUI:SETUSEPRINT( .F. )
RETURN










FUNCTION ___FWBROWSE____DISABLESAVECONFIG( )

SELF:LSAVECONFIG := .F. 
RETURN










FUNCTION ___FWBROWSE____DISABLESEEK( )

SELF:LSEEK := .F. 
SELF:OBROWSEUI:SETUSESEEK( .F. )

RETURN














FUNCTION ___FWBROWSE____DOUBLECLICK(OTGRID,NCHAR )
LOCAL BLDBLCLICK
LOCAL NCOLUMN  := SELF:COLPOS()
LOCAL LREFRESH := .T. 


IF VALTYPE(SELF:BCUSTOMLDBLCLICK) == "B" .AND.  SELF:ACOLUMNS[NCOLUMN]:BLDBLCLICK == NIL



	EVAL(SELF:BCUSTOMLDBLCLICK,SELF,NCHAR)
ELSE
	IF ( SELF:ACOLUMNS[NCOLUMN]:BLDBLCLICK <> NIL  )



		BLDBLCLICK := SELF:ACOLUMNS[NCOLUMN]:BLDBLCLICK
	ELSE



		IF SELF:LEDITCELL .AND.  (SELF:DATATABLE() .OR.  SELF:DATAARRAY()) .AND.  SELF:ACOLUMNS[NCOLUMN]:GETEDIT()
			BLDBLCLICK := { || SELF:EDITCELL(NCOLUMN,NCHAR) }
		ENDIF
	ENDIF



	IF VALTYPE(BLDBLCLICK) <> "B"
		BLDBLCLICK := SELF:BLDBLCLICK
	ENDIF



	IF VALTYPE(BLDBLCLICK) == "B"
		EVAL(BLDBLCLICK,SELF)
	ENDIF
ENDIF




SELF:UPDATETOPBOT( .F. )




IF (SELF:DATATABLE() .OR.  SELF:DATAQUERY() )
    IF ( ! SELECT(SELF:CALIAS) > 0 ) .OR.  (SELF:CALIAS)->(EOF())
		LREFRESH := .F. 
	ENDIF
ELSEIF SELF:LMODELDATA
	LREFRESH := SELF:ODATA:LOGICLEN() > 0
ENDIF




IF LREFRESH
	SELF:LINEREFRESH()
ENDIF

RETURN












FUNCTION ___FWBROWSE____EDITCELL(NCOLUMN,NCHAR )
LOCAL ODLG AS  OBJECT
LOCAL OGET AS  OBJECT
LOCAL OBTN AS  OBJECT
LOCAL ADIM AS  ARRAY
LOCAL CMACRO AS  CHARACTER
LOCAL LCONTINUA AS  LOGICAL
LOCAL CCHARINSERT AS  CHARACTER
LOCAL CCOLUMNTYPE AS  CHARACTER
LOCAL OCOLUMN AS  OBJECT
LOCAL XF3
LOCAL OLOOKUP AS  OBJECT
LOCAL LMVCINUSE AS  LOGICAL
LOCAL LRUNF3 AS  LOGICAL
LOCAL AOPTIONS AS  ARRAY
LOCAL LCOMBOBOX AS  LOGICAL

LOCAL ___OBTN
LOCAL LSHOWDLG  := .T. 
LOCAL LONLYVIEW := IIF(LMVCINUSE,(SELF:OFWFORMGRID:NOPERATION == 1 .OR.  SELF:OFWFORMGRID:NOPERATION == 5), .F. )
LOCAL BF3

ADIM := {}
CMACRO :=SPACE(30)
LCONTINUA := .T. 
LMVCINUSE := SELF:OFWFORMGRID <> NIL
LRUNF3	:= .F. 
AOPTIONS  := {}
LCOMBOBOX := .F. 

IF !(VALTYPE(NCOLUMN) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NCOLUMN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NCOLUMN)); ENDIF
LRUNF3 := NCHAR == -(114)


IF SELF:LEDITLINE
	SELF:SHOWEDITLINE()
ELSE
	LCONTINUA :=  __CBUILDAPPSERVER >= "7.00.090818P-20100119" .AND.  (SELF:DATATABLE() .OR.  SELF:DATAARRAY())
	IF LCONTINUA

		SELF:OBROWSE:GETCELLRECT(ADIM)
		OCOLUMN := SELF:ACOLUMNS[NCOLUMN]
		CMACRO  := OCOLUMN:READVAR()

		IF (SELF:BPREEDITCELL <> NIL)
			LCONTINUA := EVAL(SELF:BPREEDITCELL,SELF,NCOLUMN,NCHAR)
		ENDIF

  		IF LCONTINUA .OR.  LONLYVIEW
			IF !EMPTY(CMACRO)
				__READVAR 	:= CMACRO
				&CMACRO  	:= EVAL(OCOLUMN:BDATA, SELF)
				CCOLUMNTYPE := OCOLUMN:GETTYPE()
				XF3		 	:= OCOLUMN:GETF3()
				AOPTIONS	:= OCOLUMN:GETOPTIONS()
				LCOMBOBOX 	:= !EMPTY(AOPTIONS)
				IF !EMPTY(XF3) .AND.  LCOMBOBOX
					IF TYPE("__MVCOMBOBOX") == "L"
						IF __MVCOMBOBOX
							XF3 := NIL
						ELSE
							LCOMBOBOX := .F. 
						ENDIF
					ELSE
						IF SELECT("SX6") == 0
							XF3 := NIL
						ELSE
							IF GETNEWPAR("MV_BOX","N") == "S"
								XF3 := NIL
							ELSE
								LCOMBOBOX := .F. 
							ENDIF
						ENDIF
					ENDIF
				ENDIF
				IF ! LONLYVIEW .AND.  !LCOMBOBOX .AND.  OCOLUMN:NSIZE == 1 .AND.  NCHAR <> NIL .AND.  (NCHAR <> 32 .AND.  NCHAR <> -114) .AND.  (OCOLUMN:CTYPE == "C" .OR.  OCOLUMN:CTYPE == "N")




					__READVAR := CMACRO

					IF OCOLUMN:CTYPE == "C"
						&(__READVAR ) := CHR(NCHAR)
					ELSE
						&(__READVAR ) := VAL(CHR(NCHAR))
					ENDIF

					LSHOWDLG := !SELF:VALIDEDIT( .F. ,,, .F. )
				ELSEIF LCOMBOBOX .AND.  NCHAR <> NIL .AND.  ((NCHAR >= 48 .AND.  NCHAR <= 57) .OR.  (NCHAR >= 65 .AND.  NCHAR <= 90) .OR.  (NCHAR >= 97 .AND.  NCHAR <= 122))
					__READVAR := CMACRO
					&(__READVAR ) := AVALCBVALUE(SELF:ACOLUMNS[NCOLUMN]:AOPTIONS, CHR(NCHAR), CMACRO)
					 SELF:VALIDEDIT( .F. )
					 LSHOWDLG := .F. 
				ENDIF

				IF LSHOWDLG .AND.  ! LONLYVIEW
					ODLG = MSDIALOG():NEW( 0, 0, 0, 0,,,,.F., NOR(268435456,2147483648),,,,,.T.,, ,.F. )
						IF !LCOMBOBOX
							IF VALTYPE(XF3) == "C" .AND.  !LMVCINUSE
								 OGET := TGET():NEW( 0, 0, { | U | IF( PCOUNT() == 0,&(CMACRO),&(CMACRO) := U ) },ODLG, 0, 0, SELF:ACOLUMNS[NCOLUMN]:GETPICTURE(),,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,XF3,(CMACRO),,,,.T. )


							ELSEIF "@*" == ALLTRIM(SELF:ACOLUMNS[NCOLUMN]:GETPICTURE())
								 OGET := TGET():NEW( 0, 0, { | U | IF( PCOUNT() == 0,&(CMACRO),&(CMACRO) := U ) },ODLG, 0, 0, SELF:ACOLUMNS[NCOLUMN]:GETPICTURE(),,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.T. ,,(CMACRO),,,,.T. )

							ELSE
								 OGET := TGET():NEW( 0, 0, { | U | IF( PCOUNT() == 0,&(CMACRO),&(CMACRO) := U ) },ODLG, 0, 0, SELF:ACOLUMNS[NCOLUMN]:GETPICTURE(),,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F. ,,(CMACRO),,,,.T. )
							ENDIF
						ELSE
							 OGET := TCOMBOBOX():NEW( 0, 0, { | U | IF( PCOUNT() == 0,&(CMACRO),&(CMACRO) := U ) }, AOPTIONS, 0, 0, ODLG,,,,,,.T.,,,.F.,,.F.,,, ,(CMACRO) )
						ENDIF
						OGET:CREADVAR := CMACRO

						OGET:BGOTFOCUS := {|| __READVAR := CMACRO }

						 ___OBTN := TBUTTON():NEW( 0, 0, "", ODLG,, 0, 0,,,.F.,.F.,.F.,,.F.,,,.F. )

						___OBTN:BGOTFOCUS := {|| ODLG:NLASTKEY := 13, ODLG:END(0)}
						___OBTN:CREADVAR := CMACRO

						IF NCHAR <> NIL .AND.  !LRUNF3 .AND.  !LCOMBOBOX
							CCHARINSERT := CHR(NCHAR)
							OGET:INSERT(CCHARINSERT)
						ENDIF
						IF LMVCINUSE .AND.  !EMPTY(XF3)

							OLOOKUP := __FWLOOKUP(XF3,SELF:OFWFORMGRID:GETFIELDSELECTED())
							OLOOKUP:SETMODEL(SELF:OFWFORMGRID:GETMODEL())






							OGET:BF3 :=   {|A,B,C| IIF(OLOOKUP:ACTIVATE(&(CMACRO)), IIF (OLOOKUP:EXECUTERETURN(SELF:OFWFORMGRID), ODLG:NLASTKEY := 13, (OGET:BVALID := {|| .F. }, SELF:OFWFORMGRID:SETINLOOKUP( .F. ))), NIL), OLOOKUP:DEACTIVATE(), ODLG:END(0)}
						ELSEIF VALTYPE(XF3) == "B"
							OGET:BF3 :=  XF3


						ENDIF
						 OBTN := TBUTTON():NEW( 10, 0, "", ODLG,, 0, 0,,,.F.,.F.,.F.,,.F.,,,.F. )
						OBTN:BGOTFOCUS := {|| ODLG:NLASTKEY := 13, ODLG:END(0)}
						OBTN:CREADVAR := CMACRO


					IF XF3 <> NIL .OR.  CCOLUMNTYPE  $ "ND"
						OGET:MOVE(-2,-2,ADIM[4]-ADIM[2]-20,ADIM[3]-ADIM[1]+4)
					ELSE
						OGET:MOVE(-2,-2,ADIM[4]-ADIM[2]+4,ADIM[3]-ADIM[1]+4)
					ENDIF

					ODLG:MOVE(ADIM[1]+2,ADIM[2]+2,ADIM[4]-ADIM[2],ADIM[3]-ADIM[1])
					ODLG:ACTIVATE( ODLG:BLCLICKED, ODLG:BMOVED, ODLG:BPAINTED,,{|SELF|EVAL({||SELF:VALIDEDIT(ODLG:NLASTKEY<>13,ODLG,OGET,,SELF:ACOLUMNS[NCOLUMN]:GETVALID())})},,{|SELF|(IIF(!LCOMBOBOX .AND. OGET:BF3<>NIL .AND. LRUNF3,EVAL(OGET:BF3),))}, ODLG:BRCLICKED, )
				ELSE
					IF LMVCINUSE .AND.  !EMPTY(XF3)
						OLOOKUP := __FWLOOKUP(XF3,SELF:OFWFORMGRID:GETFIELDSELECTED())
						OLOOKUP:SETMODEL(SELF:OFWFORMGRID:GETMODEL())




						BF3 :=   {|A,B,C| IIF(OLOOKUP:ACTIVATE(&(CMACRO)),( OLOOKUP:EXECUTERETURN(SELF:OFWFORMGRID), SELF:OFWFORMGRID:SETINLOOKUP( .F. )), NIL), OLOOKUP:DEACTIVATE()}
						IF LRUNF3
							EVAL( BF3)
						END
					END
				ENDIF
			ENDIF
		ENDIF
	ENDIF

ENDIF

SETFOCUS(SELF:OBROWSE:HWND)
RETURN


STATIC FUNCTION AVALCBVALUE(ACOMBO, CVALUE, CMACRO)

LOCAL CRET := ""
LOCAL CITEMSELECTED := ""
LOCAL NPOSOLD := 0
LOCAL NPOS










NPOSOLD := ASCAN(ACOMBO, {|X| (AT(&(CMACRO) , X) == 1) } )
IF NPOSOLD > 0
	CITEMSELECTED := ACOMBO[NPOSOLD]
ENDIF


NPOS := ASCAN(ACOMBO, {|X| (AT(CVALUE , X) == 1) .AND.  X <> CITEMSELECTED} )


IF NPOS == 0
	IF AT(CVALUE , CITEMSELECTED) == 1
		NPOS := NPOSOLD
	ENDIF
ENDIF

IF NPOS > 0
	CRET := SUBSTR(ACOMBO[NPOS], 1 ,AT("=" , ACOMBO[NPOS])-1)
ELSE
	CRET := CVALUE
ENDIF


RETURN CRET










FUNCTION ___FWBROWSE____CLEANFILTER( )




SELF:ODATA:CLEANFILTER()



SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN



SELF:AGROUP := {}



IF SELF:LACTIVATE
	SELF:GOTOP( .T. )
ENDIF



SELF:LFILTRATE := .F. 




IF SELF:LACTIVATE
	SELF:CHECKEMPTY()
ENDIF

RETURN










FUNCTION ___FWBROWSE____ENABLE( )

SELF:OOWNER:ENABLE()

RETURN













FUNCTION ___FWBROWSE____EXECUTEFILTER(LBRWUPDATE,LFILTERASK )
LOCAL AFILTER AS  ARRAY
LOCAL AFILTERRELATION AS  ARRAY
LOCAL ARELATION AS  ARRAY
LOCAL LFILTRATE AS  LOGICAL
LOCAL NOLDNAT AS  NUMERIC
LOCAL LSAVEAREA AS  LOGICAL
LOCAL OFWFILTER AS  OBJECT

AFILTER         := {}
AFILTERRELATION := {}
ARELATION       := {}
LFILTRATE       := .F. 
NOLDNAT         := SELF:NAT
LSAVEAREA       := SELF:LSAVEAREA
OFWFILTER		  := SELF:FWFILTER()

IF LBRWUPDATE <> NIL .AND.  !(VALTYPE(LBRWUPDATE) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LBRWUPDATE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LBRWUPDATE)); ENDIF; LBRWUPDATE := IF(LBRWUPDATE == NIL, .T. ,LBRWUPDATE)
IF LFILTERASK <> NIL .AND.  !(VALTYPE(LFILTERASK) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFILTERASK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFILTERASK)); ENDIF; LFILTERASK := IF(LFILTERASK == NIL,LBRWUPDATE,LFILTERASK)

IF VALTYPE(OFWFILTER) == "O"




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF
	AFILTER         	:= OFWFILTER:GETFILTER(LFILTERASK)
	AFILTERRELATION 	:= OFWFILTER:GETFILTERRELATION()
	ARELATION       	:= OFWFILTER:GETRELATION()




	IF SELF:DATATABLE()
		IF SELF:LAPPLYFILTERONACTIVATE .AND.  EMPTY(SELF:ODATA:CFILTERNATIVE)
			SELF:ODATA:EXECUTEFILTER(AFILTER,,SELF,,AFILTERRELATION,ARELATION, .F. )
		ENDIF
	ELSEIF SELF:LAPPLYFILTERONACTIVATE
		SELF:ODATA:EXECUTEFILTER(AFILTER,,SELF,,AFILTERRELATION,ARELATION, .F. )
	ENDIF



	SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN



	SELF:AGROUP := {}



	AEVAL(AFILTER, { |X| IF(X[6],LFILTRATE := .T. ,) })
	IF !LFILTRATE
		AEVAL(AFILTERRELATION, { |X| IF(X[6],LFILTRATE := .T. ,) })
	ENDIF
	SELF:LFILTRATE := LFILTRATE



	IF LFILTRATE .AND.  VALTYPE(SELF:NVISIBLEROWS) == "N"
		SELF:NVISIBLEROWS := SELF:NVISIBLEROWS - 1
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF



	IF LBRWUPDATE
		SELF:GOTOP( .T. )



		IF NOLDNAT <> SELF:NAT
			SELF:ONCHANGE()
		ENDIF
	ENDIF
	SELF:CHECKFILTRATE()
	SELF:CHECKEMPTY()
ENDIF

RETURN











FUNCTION ___FWBROWSE____EXECUTEGROUP( )
LOCAL NPOS
LOCAL NSKIP
LOCAL NAT := SELF:NAT
LOCAL NLOGICLEN := SELF:LOGICLEN()

IF SELF:NAT < NLOGICLEN
	IF (NPOS := ASCAN(SELF:AGROUP,{ |X| X[1] == SELF:NAT } )) > 0
		SELF:AGROUP[NPOS,2] := !SELF:AGROUP[NPOS,2]

		NSKIP := SELF:SHOWDATA(SELF:NVISIBLEROWS-SELF:NCURSORPOS)



		SELF:GOTO(NAT, .F. )




		IF (SELF:NVISIBLEROWS-SELF:NCURSORPOS-1) <> NSKIP
			SELF:REFRESH()
		ENDIF
		SELF:SELECTROW(SELF:NCURSORPOS)
	ENDIF
ENDIF

RETURN












FUNCTION ___FWBROWSE____FILTERCONFIG(OPANEL )
LOCAL NCOL      := 5
LOCAL NLIN      := 5
LOCAL OFWFILTER := SELF:FWFILTER()
LOCAL LACTIVE   := OFWFILTER:VISIBLE()
LOCAL LOBLIGATE := SELF:OBLIGATEFILTER()

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()

TCHECKBOX():NEW(NLIN,NCOL,FWI18NLANG("FWBRWSTR","STR0057",57),&("{ | U | IF( PCOUNT() == 0, LACTIVE, LACTIVE := U ) }"),OPANEL,100,10,, {|| },,,,, .F. , .T. ,, .F. , )

NLIN+=10
TCHECKBOX():NEW(NLIN,NCOL,FWI18NLANG("FWBRWSTR","STR0074",74),&("{ | U | IF( PCOUNT() == 0, LOBLIGATE, LOBLIGATE := U ) }"),OPANEL,150,10,, {|| },,,,, .F. , .T. ,, .F. , )




SELF:BCONFIGITEMCONFIRM := { || IIF(LACTIVE,SELF:OBROWSEUI:SHOWFILTER(),SELF:OBROWSEUI:HIDEFILTER()), SELF:SETOBLIGATEFILTER(LOBLIGATE) }

RETURN











FUNCTION ___FWBROWSE____FILTRATE( )

RETURN SELF:LFILTRATE












FUNCTION ___FWBROWSE____FONTCOLUMNCONFIG(OPANEL )
LOCAL OPOPUP
LOCAL OSELF     := SELF
LOCAL NI        := 0
LOCAL NLIN      := 5
LOCAL NCOLSAY   := 5
LOCAL NLINIMAGE := 10
LOCAL NCOLIMAGE := 100
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL CTITLE    := ""
LOCAL AFONT     := ARRAY(NTOTAL)

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED()
		NSIZE+=10
	ENDIF
NEXT
NSIZE+=20

OPOPUP := FWPANELPOPUP():NEW(0,0,NSIZE,90,OPANEL)

 OPANEL := TPANEL():NEW( 00, 00,,OPOPUP,,.F.,.F.,,, 0, 0,.F.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL



	IF !SELF:ACOLUMNS[NI]:DELETED()
		IF SELF:ACOLUMNS[NI]:ISIMAGE()
			CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
		ELSE
			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
		ENDIF
		TSAY():NEW(NLIN+1,NCOLSAY,&("{||'"+ CTITLE +"'}"), OPANEL,,,,,, .T. ,,,,,,,,,)
		TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE,10,10,"FW_ARROW_RIGHT","FW_ARROW_RIGHT",,,&("{ || AFONT["+STR(NI)+"] := OSELF:FONTCONFIG(OPANEL) }"), OPANEL, , , .T.  )
		NLIN+=10
		NLINIMAGE+=20
	ENDIF
NEXT


 TBUTTON():NEW( NLIN+2, NCOLSAY+15, FWI18NLANG("FWBRWSTR","STR0031",31), OPANEL,{||  (SELF:SETFONTCOLUMNS(AFONT),OPOPUP:HIDE(),SELF:UPDATEBROWSE())}, 35, 10,,,.F.,.T.,.F.,,.F.,,,.F. )

OPOPUP:ACTIVATE(,,OPANEL)

RETURN












FUNCTION ___FWBROWSE____FONTCONFIG(OPANEL )
LOCAL OFONTBODY
LOCAL OSAYFONT
LOCAL NLIN       := 5
LOCAL NCOL       := 10
LOCAL NFONTBODY  := SELF:NFONTBODY
LOCAL CFONTE     := "-- AABBCCYYZZ --"
LOCAL CFONTBODY  := SELF:CFONTBODY
LOCAL CFONTSIZE  := RTRIM(STR(SELF:NFONTBODY))
LOCAL AFONT      := &("GETFONTLIST()")
LOCAL AFONTSIZE  := {"6","7","8","9","10","11","12","13","14","16"}
LOCAL LBOLD      := SELF:LFONTBOLD
LOCAL LITALIC    := SELF:LFONTITALIC
LOCAL LUNDERLINE := SELF:LFONTUNDERLINE
LOCAL OCBXFONTBODY
LOCAL OCBXFONTSIZE

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()


 OCBXFONTBODY := TCOMBOBOX():NEW( NLIN, NCOL, { | U | IF( PCOUNT() == 0, CFONTBODY, CFONTBODY := U ) }, AFONT, 70, 10, OPANEL,,{|SELF|(OFONTBODY:=TFONT():NEW(CFONTBODY,0,(NFONTBODY+2)*(-1),,LBOLD,,,,,LUNDERLINE,LITALIC),OSAYFONT:OFONT:=OFONTBODY,OSAYFONT:REFRESH())},,,,.T.,,,.F.,,.F.,,, ,"CFONTBODY" )


 OCBXFONTSIZE := TCOMBOBOX():NEW( NLIN, NCOL+70, { | U | IF( PCOUNT() == 0, CFONTSIZE, CFONTSIZE := U ) }, AFONTSIZE, 20, 10, OPANEL,,{|SELF|(NFONTBODY:=VAL(CFONTSIZE),OFONTBODY:=TFONT():NEW(CFONTBODY,0,(NFONTBODY+2)*(-1),,LBOLD,,,,,LUNDERLINE,LITALIC),OSAYFONT:OFONT:=OFONTBODY,OSAYFONT:REFRESH())},,,,.T.,,,.F.,,.F.,,, ,"CFONTSIZE" )

OFONTBODY := TFONT():NEW(CFONTBODY,0,(NFONTBODY+2)*(-1),,LBOLD,,,,,LUNDERLINE,LITALIC)
IF FWISTOUCH()
	IF FWCHKBUILD("7.00.120420A-20120529")
		OCBXFONTBODY:SETHEIGHT(35)
		OCBXFONTSIZE:SETHEIGHT(35)
		NLIN += 15
	ENDIF
ENDIF
NLIN+=10

 TCHECKBOX():NEW( NLIN, NCOL, FWI18NLANG("FWBRWSTR","STR0058",58),{ | U | IF( PCOUNT() == 0, LBOLD, LBOLD := U ) }, OPANEL, 40, 10,,{|| (OFONTBODY:=TFONT():NEW(CFONTBODY,0,(NFONTBODY+2)*(-1),,LBOLD,,,,,LUNDERLINE,LITALIC),OSAYFONT:OFONT:=OFONTBODY,OSAYFONT:REFRESH())},,,,,.F.,.T.,,.F., )

NLIN+=10

 TCHECKBOX():NEW( NLIN, NCOL, FWI18NLANG("FWBRWSTR","STR0059",59),{ | U | IF( PCOUNT() == 0, LITALIC, LITALIC := U ) }, OPANEL, 40, 10,,{|| (OFONTBODY:=TFONT():NEW(CFONTBODY,0,(NFONTBODY+2)*(-1),,LBOLD,,,,,LUNDERLINE,LITALIC),OSAYFONT:OFONT:=OFONTBODY,OSAYFONT:REFRESH())},,,,,.F.,.T.,,.F., )

NLIN+=10

 TCHECKBOX():NEW( NLIN, NCOL, FWI18NLANG("FWBRWSTR","STR0060",60),{ | U | IF( PCOUNT() == 0, LUNDERLINE, LUNDERLINE := U ) }, OPANEL, 45, 10,,{|| (OFONTBODY:=TFONT():NEW(CFONTBODY,0,(NFONTBODY+2)*(-1),,LBOLD,,,,,LUNDERLINE,LITALIC),OSAYFONT:OFONT:=OFONTBODY,OSAYFONT:REFRESH())},,,,,.F.,.T.,,.F., )

NLIN+=15
 OSAYFONT := TSAY():NEW( NLIN, 10,{||  CFONTE},OPANEL,, OFONTBODY,.F.,.F.,.F.,.T.,,, 120, 11,.F.,.F.,.F.,.F.,.F.,.F. )




SELF:BCONFIGITEMCONFIRM := { || SELF:CFONTBODY := CFONTBODY,SELF:NFONTBODY := NFONTBODY,SELF:LFONTUNDERLINE := LUNDERLINE,SELF:LFONTITALIC := LITALIC,SELF:LFONTBOLD := LBOLD,SELF:LCHANGEFONT := .T. , SELF:OFONTCONFIG := OFONTBODY}

RETURN











FUNCTION ___FWBROWSE____FWFILTER( )

RETURN SELF:OBROWSEUI:GETFILTER()











FUNCTION ___FWBROWSE____GETBACKCOLOR( )

RETURN SELF:NBACKCOLOR












FUNCTION ___FWBROWSE____GETBREAKREPORT( )

RETURN SELF:ABREAKREPORT











FUNCTION ___FWBROWSE____GETCLRALTERROW( )

RETURN SELF:NCLRALTERROW












FUNCTION ___FWBROWSE____GETCOLUMN(NCOL )

LOCAL ACOLSRET

NCOL := IF( NCOL == NIL, SELF:COLPOS(), NCOL ) ;

IF NCOL <= LEN(SELF:ACOLUMNS)
	ACOLSRET := SELF:ACOLUMNS[NCOL]
ENDIF

RETURN ACOLSRET








































FUNCTION ___FWBROWSE____GETCOLUMNCONFIG(CTITLE,CDATA,CTYPE,CPICTURE,CALIGN,NWIDTH,CEDIT,CVALID,CIMAGE,CREADVAR,CID )
LOCAL OSELF := SELF
LOCAL NPOS
LOCAL NPOS2
LOCAL BDATA
LOCAL BVALID
LOCAL CFUNCTION := ""
LOCAL ACOLUMN   := {}

CDATA  := ALLTRIM(CDATA)
CVALID := ALLTRIM(CVALID)




IF !EMPTY(CDATA)
	IF CTYPE == "C"
		CDATA := "'"+ALLTRIM(CDATA)+"'"
	ELSEIF CTYPE == "N"
		CDATA := RTRIM(STR(VAL(CDATA)))
	ELSEIF CTYPE == "F"
		CFUNCTION := CDATA



		NPOS := AT("(",CDATA)
		IF NPOS > 0
			CFUNCTION := SUBSTR(CDATA,1,NPOS-1)
		ENDIF
		IF FINDFUNCTION(CFUNCTION)



			NPOS2 := RAT(")",CDATA)
			IF NPOS2-2 < NPOS
				CDATA := CFUNCTION+"(OSELF:OBROWSE)"
			ENDIF
		ELSE
			ALERT(FWI18NLANG("FWBRWSTR","STR0061",61)+CFUNCTION+FWI18NLANG("FWBRWSTR","STR0061",61))
			CDATA := ""
		ENDIF
	ENDIF
	IF !EMPTY(CDATA)
		BDATA := &("{ |O| " + CDATA + " }")
	ENDIF
ENDIF




IF !EMPTY(CVALID)
	NPOS := AT("(",CVALID)
	IF NPOS > 0
		CVALID := SUBSTR(CVALID,1,NPOS-1)
	ENDIF
	IF FINDFUNCTION(CVALID)
		CVALID := CVALID+"(CDATA,LCANCEL,OBROWSE)"
	ELSE
		ALERT(FWI18NLANG("FWBRWSTR","STR0061",61)+CVALID+FWI18NLANG("FWBRWSTR","STR0061",61))
		CVALID := ""
	ENDIF
	BVALID := &("{ |CDATA,LCANCEL,OBROWSE| " + CVALID + "}")
ENDIF

ACOLUMN := { ALLTRIM(CTITLE), BDATA, CTYPE, ALLTRIM(CPICTURE), VAL(CALIGN), NWIDTH, 0, IIF(CEDIT=="1", .T. , .F. ), BVALID, IIF(CIMAGE=="1", .T. , .F. ),,ALLTRIM(CREADVAR),,,,,CID}

RETURN ACOLUMN













FUNCTION ___FWBROWSE____GETCOLUMNDATA(NIDCOLUMN )
RETURN GETCOLUMNDATA(SELF,NIDCOLUMN)













STATIC FUNCTION GETCOLUMNDATA(OSELF,NIDCOLUMN)
LOCAL XPICTURE
LOCAL XDATA
LOCAL COPTION AS  CHARACTER
LOCAL NCOLUMN AS  NUMERIC
LOCAL NPOS AS  NUMERIC
LOCAL AOPTIONS AS  ARRAY
LOCAL XTYPE
LOCAL NLEN AS  NUMERIC
LOCAL LCOMBO AS  LOGICAL
LOCAL NATS AS  NUMERIC
LOCAL NLASTN AS  NUMERIC
LCOMBO := .F. 
NLASTN := 0




IF OSELF:LDATATABLE .OR.  OSELF:LDATAQUERY
	DBSELECTAREA(OSELF:CALIAS)
ENDIF
NCOLUMN := ASCAN(OSELF:ACOLUMNS, { |X| X:NORDERDEFAULT == NIDCOLUMN })

IF NCOLUMN > 0
	XDATA := EVAL(OSELF:ACOLUMNS[NCOLUMN]:BDATA,OSELF)
	XTYPE := VALTYPE(XDATA)
	IF XTYPE <> "U"




		IF OSELF:ACOLUMNS[NCOLUMN]:LIMAGE
			IF XTYPE  == "C"
				XDATA := "RPO_IMAGE="+XDATA
			ELSE
				XDATA := ""
			ENDIF
		ELSE



			IF !EMPTY(OSELF:ACOLUMNS[NCOLUMN]:AOPTIONS)
				AOPTIONS := OSELF:ACOLUMNS[NCOLUMN]:AOPTIONS
				COPTION:= IF(XTYPE == "N",LTRIM(STR(XDATA)),XDATA)+"="
				NLEN := LEN(COPTION)
				NPOS := ASCAN(AOPTIONS, { |X| COPTION == LEFT(X,NLEN) } )
				IF NPOS > 0
					XDATA := SUBSTR(AOPTIONS[NPOS],AT("=",AOPTIONS[NPOS])+1)
				ENDIF
				LCOMBO := .T. 
			ENDIF



			XPICTURE := OSELF:ACOLUMNS[NCOLUMN]:XPICTURE
			IF VALTYPE(XPICTURE) == "B"
				XPICTURE := EVAL(XPICTURE,OSELF)
				IF VALTYPE(XPICTURE) <> "C"
					XPICTURE := ""
				ENDIF
			ENDIF



			IF XTYPE == "D"
				XDATA = DTOC(XDATA)



			ELSEIF !LCOMBO .AND.  (!EMPTY(XPICTURE) .OR.  XTYPE == "N")

				IF (NATS := AT("S",XPICTURE)) > 0
					WHILE NATS+NLASTN+1 <= LEN(XPICTURE)
						IF ISDIGIT(SUBSTR(XPICTURE,NATS+NLASTN+1,1))
							NLASTN++
						ELSE
							EXIT
						ENDIF
					ENDDO
					XPICTURE := STRTRAN(XPICTURE,SUBSTR(XPICTURE,NATS,1+NLASTN))

				ELSEIF "@*" == ALLTRIM(XPICTURE)
					XDATA := REPLICATE("*",LEN(XDATA))
				ENDIF
				XDATA = TRANSFORM(XDATA,XPICTURE)
			ENDIF



			IF XTYPE == "U"
				XDATA := ""
			ENDIF
		ENDIF
	ELSE
		XDATA := ""
	ENDIF
ENDIF

RETURN XDATA











FUNCTION ___FWBROWSE____GETDESCRIPTION( )

RETURN SELF:CDESCRIPTION











FUNCTION ___FWBROWSE____GETFORECOLOR( )

RETURN SELF:NFORECOLOR













FUNCTION ___FWBROWSE____GETFONTWIDTH(NSIZE )
LOCAL NI
LOCAL NWIDHT := 0
LOCAL CTEXT := REPLICATE("W",NSIZE)

FOR NI := 1 TO NSIZE
	NWIDHT += SELF:AFONTEWIDTH[ASC(SUBSTR(CTEXT,NI,1))]-2.5
NEXT

RETURN NWIDHT













FUNCTION ___FWBROWSE____GETOBJMARK( )

RETURN SELF:OMARK













FUNCTION ___FWBROWSE____GETOFFSET( )

RETURN SELF:NOFFSET













FUNCTION ___FWBROWSE____GETMOVETYPE( )

RETURN SELF:NMOVETYPE












FUNCTION ___FWBROWSE____GETPOSICIONE(CIDCOLUMN,BPOSICIONE )
LOCAL NI
LOCAL NPOS       := 0
LOCAL LRET       := .F. 
LOCAL APOSICIONE := {}
LOCAL AKEY       := {}
LOCAL ALEFTKEY   := {}
LOCAL NLEFTORDER := 0
LOCAL CLEFTALIAS := ""
LOCAL CFIELD     := ""
LOCAL CCONDITION := ""
LOCAL CKEY       := ""
LOCAL CPOSICIONE := GETCBSOURCE(BPOSICIONE)
LOCAL CTAG       := ""

IF !EMPTY(__CTOPBUILD)
	CTAG := GETNEXTALIAS()



	IF .F. 



		IF !EMPTY(CPOSICIONE) .AND.  SELF:DATATABLE() .AND.  SELF:ODATA:TOPCONN() .AND.  !SELF:ODATA:ISAS400()



			CPOSICIONE := STRTRAN(CPOSICIONE,"{","")
			CPOSICIONE := STRTRAN(CPOSICIONE,"}","")
			CPOSICIONE := STRTRAN(CPOSICIONE,"|","")
			CPOSICIONE := STRTRAN(CPOSICIONE," ","")



			IF LEFT(UPPER(CPOSICIONE),10) == "POSICIONE(" .AND.  !"SUBSTR"$UPPER(CPOSICIONE) .AND.  !"LEFT"$UPPER(CPOSICIONE) .AND.  !"RIGHT"$UPPER(CPOSICIONE)
				CPOSICIONE := AJINIBRW(CPOSICIONE,SELF:ALIAS())
				APOSICIONE := STRTOKARR(CPOSICIONE,",")
				CLEFTALIAS := STRTRAN(ALLTRIM(SUBSTR(APOSICIONE[1],AT("(",APOSICIONE[1])+1)),'"',"")
				CLEFTALIAS := STRTRAN(CLEFTALIAS,"'","")
				CFILE      := RETSQLNAME(CLEFTALIAS)




				IF !EMPTY(CFILE)
					NLEFTORDER := VAL(APOSICIONE[2])
					AKEY       := STRTOKARR(APOSICIONE[3],"+")
					CFIELD     := STRTRAN(ALLTRIM(SUBSTR(APOSICIONE[4],1,RAT(")",APOSICIONE[4])-1)),'"',"")
					CFIELD     := STRTRAN(CFIELD,"'","")
					ALEFTKEY   := STRTOKARR((CLEFTALIAS)->(INDEXKEY(NLEFTORDER)),"+")
					CPREFIXO   := PREFIXOCPO(SELF:CALIAS)



					IF PREFIXOCPO(CLEFTALIAS) == SUBSTR(CFIELD,1,AT("_",CFIELD)-1)
						LRET := .T. 



						FOR NI := 1 TO LEN(AKEY)
							CKEY := AKEY[NI]



							IF (NPOS := AT("->",CKEY)) > 0
								CKEY := SUBSTR(CKEY,NPOS+2)
							ENDIF
							IF NI <= LEN(ALEFTKEY)



								IF !EMPTY(CCONDITION)
									CCONDITION += " AND "
								ENDIF



								IF "_FILIAL" $ ALEFTKEY[NI] .AND.  !("_FILIAL" $ CKEY)
									CKEY := "'" + &(CKEY) + "'"
								ELSE



									IF CPREFIXO <> SUBSTR(CKEY,1,AT("_",CKEY)-1)
										LRET := .F. 
										EXIT
									ENDIF
									ARET := STRTOKARR(CFIELD,"+")
									IF LEN(ARET)>1
										LRET := .F. 
										EXIT
									ENDIF
								ENDIF
								IF __CTOPBUILD >= "20100113"
									IF "_FILIAL" $ ALEFTKEY[NI] .AND.  ("_FILIAL" $ CKEY)
										CCONDITION += FWAJUSFILIAL(SELF:CALIAS,CLEFTALIAS,CTAG,ALEFTKEY[NI],CKEY)
									ELSE
										CCONDITION += CTAG+"."+ALEFTKEY[NI] + " = " + CKEY
									ENDIF
								ELSE
									CCONDITION += ALEFTKEY[NI] + " = " + CKEY
								ENDIF
							ENDIF
						NEXT
					ENDIF



					IF LRET
						IF ASCAN( SELF:ALEFTJOIN, { |X| X[2] == CFIELD } ) == 0
							IF __CTOPBUILD >= "20100113"
								AADD( SELF:ALEFTJOIN, { RETSQLNAME(CLEFTALIAS)+"|"+CTAG, CFIELD, CCONDITION , CIDCOLUMN } )
							ELSE
								AADD( SELF:ALEFTJOIN, { RETSQLNAME(CLEFTALIAS), CFIELD, CCONDITION , CIDCOLUMN } )
							ENDIF
							BPOSICIONE := &("{ || " + CFIELD + " }")
						ENDIF
					ENDIF
				ENDIF
			ENDIF



			IF MPISUSRINDB() .AND.  (LEFT(UPPER(CPOSICIONE),12) == "USRFULLNAME(" .OR.  LEFT(UPPER(CPOSICIONE),14) == "FWGETUSERNAME(")
				CPOSICIONE := STRTRAN(UPPER(CPOSICIONE),"USRFULLNAME(","")
				CPOSICIONE := STRTRAN(UPPER(CPOSICIONE),"FWGETUSERNAME(","")
				CPOSICIONE := SUBSTR(CPOSICIONE,1,LEN(CPOSICIONE)-1)
				CPOSICIONE  := STRTRAN(CPOSICIONE,"'","")
				CPOSICIONE  := STRTRAN(CPOSICIONE,'"',"")
				NPOS        := AT("->",CPOSICIONE)
				IF ( NPOS > 0 )
					CPOSICIONE := SUBS(CPOSICIONE,NPOS+2)
				ENDIF

				CFIELD := "USR_NOME"
				CCONDITION := "USR_ID = "+CPOSICIONE

				IF ASCAN( SELF:ALEFTJOIN, { |X| X[2] == CFIELD } ) == 0
					IF __CTOPBUILD >= "20100113"
						AADD( SELF:ALEFTJOIN, { MPSYSSQLNAME("MPUSR_USR")+"|"+CTAG, CFIELD, CCONDITION , CIDCOLUMN } )
					ELSE
						AADD( SELF:ALEFTJOIN, { MPSYSSQLNAME("MPUSR_USR"), CFIELD, CCONDITION , CIDCOLUMN } )
					ENDIF
					BPOSICIONE := &("{ || " + CFIELD + " }")
				ENDIF
			ENDIF
		ENDIF
	ENDIF
ENDIF

RETURN BPOSICIONE












FUNCTION ___FWBROWSE____GOBOTTOM(LCALLREFRESH )
LOCAL NI
LOCAL NLOGICLEN := 0
LOCAL LSKIP     := .F. 
LOCAL CGROUP    := ""
LOCAL LSAVEAREA := SELF:LSAVEAREA

IF LCALLREFRESH <> NIL .AND.  !(VALTYPE(LCALLREFRESH) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LCALLREFRESH"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LCALLREFRESH)); ENDIF; LCALLREFRESH := IF(LCALLREFRESH == NIL, .F. ,LCALLREFRESH)

IF !SELF:ODATA:ISLAST(SELF:NAT)




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF



	IF LCALLREFRESH .OR.  SELF:LINEOK()



		SELF:NAT := SELF:ODATA:LASTRECNO()



		NLOGICLEN := SELF:LOGICLEN()
		IF SELF:NAT > NLOGICLEN
			SELF:NAT:= NLOGICLEN
		ENDIF

		IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
			DBSELECTAREA(SELF:ALIAS())
			SELF:ODATA:GOTO(SELF:NAT)
		ELSEIF SELF:NAT <= 0
            SELF:NAT:= 1
		ENDIF



		IF SELF:DATAARRAY() .AND.  SELF:NVISIBLEROWS > NLOGICLEN
			SELF:NVISIBLEROWS := NLOGICLEN
		ENDIF



		IF !EMPTY(SELF:AGROUP)



			IF SELF:NAT == NLOGICLEN
				IF (NPOS := ASCAN(SELF:AGROUP, { |X| X[3] == SELF:NAT .AND.  !X[2] } )) > 0
					SELF:GOTO(SELF:AGROUP[NPOS,1], .F. )
				ENDIF
			ENDIF



			FOR NI := SELF:NVISIBLEROWS-1 TO 1 STEP -1
				LSKIP := .T. 



				IF ASCAN(SELF:AGROUP, { |X| X[1] == SELF:NAT }) == 0
					CGROUP := SELF:BDATAGROUP()



					IF EMPTY(CGROUP) .AND.  (NPOS:= ASCAN( SELF:AGROUP, { |X| X[1] < SELF:NAT .AND.  X[3] == 0 .AND.  !X[2] .AND.  !SELF:LOPENGROUP })) > 0
						IF SELF:AGROUP[LEN(SELF:AGROUP),1] < SELF:NAT .AND.  !SELF:AGROUP[LEN(SELF:AGROUP),2]
							LSKIP := .F. 
						ENDIF
					ENDIF
				ENDIF



				SELF:GROUPLINEREFRESH( .T. )



				IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
					SELF:ODATA:SKIP(-1)
					IF (SELF:CALIAS)->(BOF())
						SELF:ODATA:GOTO(SELF:ODATA:FIRSTRECNO())
					ENDIF
					SELF:NAT := (SELF:CALIAS)->(RECNO())
				ELSE
					SELF:NAT --
					IF SELF:NAT <= 0
						SELF:NAT:= 1
						EXIT
					ENDIF
				ENDIF



				IF !LSKIP
					NI++
				ENDIF
			NEXT
		ELSE



			IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
				SELF:ODATA:SKIP(-(SELF:NVISIBLEROWS-1))
				IF (SELF:CALIAS)->(BOF())
					SELF:ODATA:GOTO(SELF:ODATA:FIRSTRECNO())
				ENDIF
				SELF:NAT := (SELF:CALIAS)->(RECNO())
			ELSE
				SELF:NAT -= (SELF:NVISIBLEROWS-1)
				IF SELF:NAT <= 0
					SELF:NAT:= 1
				ENDIF
			ENDIF
		ENDIF



		IF !EMPTY(SELF:ACUSTOMCOLOR)
			SELF:ACUSTOMCOLOR := {}
			SELF:OBROWSE:SETROWCOLOR()
		ENDIF



		SELF:OBROWSE:CLEARROWS()
		SELF:NCURSORPOS := 0
		SELF:NCURSORPOS := SELF:SHOWDATA(SELF:NVISIBLEROWS)
	ENDIF
	SELF:SELECTROW(SELF:NCURSORPOS)




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ELSE
	SELF:SELECTROW(SELF:NCURSORPOS)
ENDIF

RETURN











FUNCTION ___FWBROWSE____GOCOLUMN(NCOLUMN )
IF !(VALTYPE(NCOLUMN) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NCOLUMN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NCOLUMN)); ENDIF

IF __CBUILDAPPSERVER >= "7.00.090818P-20100119"
	SELF:OBROWSE:GOCOLUMN(NCOLUMN)
ENDIF

RETURN











FUNCTION ___FWBROWSE____GORIGHT( )
LOCAL NCOLATUAL := SELF:COLPOS()
IF LEN(SELF:ACOLUMNS)>= NCOLATUAL +1
	SELF:OBROWSE:GOCOLUMN(NCOLATUAL+1)
ENDIF
RETURN











FUNCTION ___FWBROWSE____GODOWN(NOFFSET,LREPORT )
LOCAL NI AS  NUMERIC
LOCAL NLOGICLEN AS  NUMERIC
LOCAL LADJUST AS  LOGICAL
LOCAL LINSERT AS  LOGICAL
LOCAL LLINEREFRESH AS  LOGICAL
LOCAL LSAVEAREA AS  LOGICAL
LOCAL NLASTGROUP AS  NUMERIC

LADJUST      := .F. 
LINSERT      := SELF:LINSERT
LLINEREFRESH := .T. 
LSAVEAREA    := SELF:LSAVEAREA
NLASTGROUP   := 0

IF NOFFSET <> NIL .AND.  !(VALTYPE(NOFFSET) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NOFFSET"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NOFFSET)); ENDIF; NOFFSET := IF(NOFFSET == NIL,1,NOFFSET)
IF LREPORT <> NIL .AND.  !(VALTYPE(LREPORT) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LREPORT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LREPORT)); ENDIF; LREPORT := IF(LREPORT == NIL, .F. ,LREPORT)

IF NOFFSET > 0




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF



	NLOGICLEN := SELF:LOGICLEN()



	IF LINSERT
		LINSERT := !(SELF:LFILTRATE .AND.  (SELF:LDATAARRAY .AND.  !SELF:LMODELDATA)) .AND.  !SELF:ISWHEELMOVE()
	ENDIF



	IF ( !SELF:ODATA:ISLAST(SELF:NAT) .AND.  ( NLOGICLEN > SELF:NAT .OR.  SELF:LDATATABLE .OR.  SELF:LDATAQUERY) ) .OR.  LINSERT



		IF SELF:LINEOK( .T. )



			IF !EMPTY(SELF:AGROUP)
				FOR NI := 1 TO NOFFSET



					IF ( SELF:LDATATABLE .OR.  SELF:LDATAQUERY )
						IF ( SELF:AGROUP[ LEN(SELF:AGROUP ) ][1] ) == SELF:NAT



							IF ! ( SELF:AGROUP[ LEN(SELF:AGROUP) ][2] )
				   				DBSELECTAREA( SELF:ALIAS() )
				   				NLASTGROUP := ( SELF:CALIAS )->( RECNO() )
				   			ENDIF
		              	ENDIF
					ENDIF



					SELF:GROUPLINEREFRESH()



					IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
						DBSELECTAREA(SELF:ALIAS())
						SELF:ODATA:SKIP()
						SELF:NAT := (SELF:CALIAS)->(RECNO())
					ELSE
						SELF:NAT ++
					ENDIF
				NEXT




				IF NLOGICLEN < SELF:NAT .AND.  !LINSERT



					IF ( SELF:AGROUP[ LEN(SELF:AGROUP) ][2] )
						SELF:NAT := SELF:AGROUP[ LEN(SELF:AGROUP) ][3]
					ELSE



						SELF:NAT := SELF:AGROUP[ LEN(SELF:AGROUP) ][1]



						IF ( SELF:DATATABLE() .OR.  SELF:DATAQUERY() )
							DBSELECTAREA( SELF:ALIAS() )
							SELF:ODATA:GOTO( NLASTGROUP )
						ENDIF
					ENDIF



					LLINEREFRESH := .F. 
				ENDIF
			ELSE



				IF SELF:LDATATABLE .OR.  SELF:LDATAQUERY
					DBSELECTAREA(SELF:ALIAS())
					SELF:ODATA:SKIP(NOFFSET)



					IF (SELF:CALIAS)->(EOF())
						SELF:ODATA:SKIP(-1)
						LLINEREFRESH := .F. 
					ENDIF
					SELF:NAT := (SELF:CALIAS)->(RECNO())
				ELSE
					SELF:NAT += NOFFSET
				ENDIF
			ENDIF

			IF VALTYPE(SELF:OBROWSE) == "O" .AND.  LLINEREFRESH .AND.  !LREPORT



				IF NLOGICLEN < SELF:NAT .AND.  LINSERT
					IF SELF:BCANADD == NIL
						EVAL(SELF:BADD)
						AADD( SELF:AVISIBLEREG, SELF:NAT)
					ELSE
						IF EVAL(SELF:BCANADD)
							EVAL(SELF:BADD)
							AADD( SELF:AVISIBLEREG, SELF:NAT)
						ELSE
							SELF:NAT := SELF:NAT -1
							NOFFSET := 0
						ENDIF
					ENDIF
				ENDIF

				IF SELF:NCURSORPOS == SELF:NVISIBLEROWS-1
					SELF:OBROWSE:SCROLLLINE(1)



					IF LEN(SELF:AVISIBLEREG) > 0
						ADEL( SELF:AVISIBLEREG , 1)
						SELF:AVISIBLEREG[LEN(SELF:AVISIBLEREG)] := SELF:NAT
					ELSE
						AADD( SELF:AVISIBLEREG , SELF:NAT )
					ENDIF
					LADJUST:= .T. 
				ELSE
					SELF:NCURSORPOS += NOFFSET
				ENDIF



				IF LADJUST .AND.  LEN(SELF:ACUSTOMCOLOR) > 0
					FOR NI := 1 TO LEN(SELF:ACUSTOMCOLOR)
						SELF:ACUSTOMCOLOR[NI,1]-=1
					NEXT
					SELF:REFRESHCUSTOMCOLOR()
				ENDIF
				IF LADJUST



					SELF:LINEREFRESH()
					SELF:NCURSORPOS := SELF:NVISIBLEROWS-1
				ELSE



					IF ( SELF:LFORCEREFRESH .OR.  (SELF:OFWFORMGRID <> NIL .AND.  SELF:OFWFORMGRID:CCLASSNAME == "FWFORMGRID"))
						SELF:LINEREFRESH()
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ENDIF

IF VALTYPE(SELF:OBROWSE) == "O"
	SELF:SELECTROW(SELF:NCURSORPOS)
ENDIF

RETURN










FUNCTION ___FWBROWSE____GOPGDOWN( )
LOCAL NI
LOCAL NPOS
LOCAL NVISIBLEROWS := 0
LOCAL NLASTVISROW  := 0
LOCAL NLOGICLEN    := SELF:LOGICLEN()
LOCAL LSAVEAREA    := SELF:LSAVEAREA

IF !SELF:ODATA:ISLAST(SELF:NAT)




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF



	IF SELF:LINEOK()



		IF !EMPTY(SELF:ACUSTOMCOLOR)
			SELF:ACUSTOMCOLOR := {}
			SELF:OBROWSE:SETROWCOLOR()
		ENDIF
		SELF:OBROWSE:CLEARROWS()



		IF SELF:DATAARRAY() .AND.  SELF:NVISIBLEROWS > NLOGICLEN
			SELF:NVISIBLEROWS := NLOGICLEN
		ENDIF



		IF !EMPTY(SELF:AGROUP)
			FOR NI := 1 TO SELF:NVISIBLEROWS-SELF:NCURSORPOS
				SELF:GROUPLINEREFRESH()



				IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
					DBSELECTAREA(SELF:ALIAS())
					SELF:ODATA:SKIP()



					IF (SELF:CALIAS)->(EOF())
						SELF:ODATA:SKIP(-1)
					ENDIF
					SELF:NAT := (SELF:CALIAS)->(RECNO())
				ELSE
					SELF:NAT ++



					IF SELF:NAT > NLOGICLEN
						SELF:NAT := NLOGICLEN
						EXIT
					ENDIF
				ENDIF
			NEXT
		ELSE



			NLASTVISROW := SELF:NVISIBLEROWS-1
			IF NLASTVISROW <> SELF:NCURSORPOS



				IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
					DBSELECTAREA(SELF:ALIAS())
					SELF:ODATA:SKIP(NLASTVISROW-SELF:NCURSORPOS+1)



					IF (SELF:CALIAS)->(EOF())
						SELF:ODATA:GOBOTTOM()
						SELF:ODATA:SKIP(-(NLASTVISROW-1))
						IF (SELF:CALIAS)->(BOF())
							SELF:ODATA:GOTO(SELF:ODATA:FIRSTRECNO())
						ENDIF
					ENDIF
					SELF:NAT := (SELF:CALIAS)->(RECNO())
				ELSE
					SELF:NAT += NLASTVISROW-SELF:NCURSORPOS+1
					IF SELF:NAT > NLOGICLEN
						SELF:NAT := NLOGICLEN
					ENDIF
				ENDIF
			ELSE
				IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
					SELF:ODATA:SKIP()
					SELF:NAT := (SELF:CALIAS)->(RECNO())
				ELSE
					SELF:NAT ++



					IF SELF:NAT > NLOGICLEN
						SELF:NAT := NLOGICLEN
					ENDIF
				ENDIF
			ENDIF
		ENDIF

		NVISIBLEROWS := SELF:NVISIBLEROWS



		IF !EMPTY(SELF:AGROUP) .AND.  SELF:NAT == NLOGICLEN
			IF (NPOS := ASCAN(SELF:AGROUP, { |X| X[3] == SELF:NAT .AND.  !X[2] } )) > 0
				NVISIBLEROWS := 1
				SELF:GOTO(SELF:AGROUP[NPOS,1], .F. )
			ENDIF
		ENDIF



		SELF:NCURSORPOS := 0
		SELF:NCURSORPOS := SELF:SHOWDATA(NVISIBLEROWS)
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ENDIF

SELF:SELECTROW(SELF:NCURSORPOS)

RETURN










FUNCTION ___FWBROWSE____GOPGUP( )
LOCAL NI
LOCAL LSAVEAREA := SELF:LSAVEAREA

IF !SELF:ODATA:ISFIRST(SELF:NAT)




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF



	IF SELF:LINEOK()



		IF !EMPTY(SELF:AGROUP)
			FOR NI := SELF:NVISIBLEROWS+SELF:NCURSORPOS TO 1 STEP -1



				IF ASCAN(SELF:AGROUP, { |X| X[1] == SELF:NAT }) == 0
					SELF:BDATAGROUP()
				ENDIF
				SELF:GROUPLINEREFRESH( .T. )



				IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
					DBSELECTAREA(SELF:ALIAS())
					SELF:ODATA:SKIP(-1)
					IF (SELF:CALIAS)->(BOF())
						SELF:ODATA:GOTO(SELF:ODATA:FIRSTRECNO())
					ENDIF
					SELF:NAT := (SELF:CALIAS)->(RECNO())
				ELSE
					SELF:NAT --
					IF SELF:NAT <= 0
						SELF:NAT:= 1
						EXIT
					ENDIF
				ENDIF
			NEXT
		ELSE



			IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
				DBSELECTAREA(SELF:ALIAS())
				IF SELF:NAT == 1
					SELF:ODATA:GOTOP()
				ELSE
					SELF:ODATA:SKIP(-(SELF:NVISIBLEROWS+SELF:NCURSORPOS))
				ENDIF
				SELF:NAT := (SELF:CALIAS)->(RECNO())
			ELSE



				IF SELF:NCURSORPOS <> 0
					SELF:NAT -= SELF:NCURSORPOS
				ENDIF



				SELF:NAT -= SELF:NVISIBLEROWS
				IF SELF:NAT <= 0
					SELF:NAT:= 1
				ENDIF
			ENDIF
		ENDIF



		SELF:REFRESH()
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ENDIF

SELF:SELECTROW(SELF:NCURSORPOS)

RETURN












FUNCTION ___FWBROWSE____GOTOP(LFORCE,LFORCEUPDTB )

LOCAL LSAVEAREA AS  LOGICAL
LOCAL NRECNO AS  NUMERIC

NRECNO := 0
LSAVEAREA := SELF:LSAVEAREA

IF LFORCE <> NIL .AND.  !(VALTYPE(LFORCE) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFORCE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFORCE)); ENDIF; LFORCE := IF(LFORCE == NIL, .F. ,LFORCE)
IF LFORCEUPDTB <> NIL .AND.  !(VALTYPE(LFORCEUPDTB) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFORCEUPDTB"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFORCEUPDTB)); ENDIF; LFORCEUPDTB := IF(LFORCEUPDTB == NIL, .T. ,LFORCEUPDTB)

IF LFORCE .OR.  !SELF:ODATA:ISFIRST(SELF:NAT)




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF



	IF LFORCE .OR.  SELF:LINEOK()



		IF !SELF:DATAARRAY() .AND.  (!SELF:ODATA:ISFIRST(SELF:NAT) .OR.  LFORCE)




			IF SELF:DATATABLE()
				IF SELF:LACTIVATE
					SELF:ODATA:UPDATETOPBOT(LFORCEUPDTB)
				ENDIF
			ELSE
				SELF:ODATA:GOTOP()
			ENDIF
		ENDIF



		IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
			DBSELECTAREA(SELF:ALIAS())
			NRECNO := (SELF:CALIAS)->(RECNO())
			SELF:NAT  := NRECNO
		ENDIF

		IF SELF:OBROWSE <> NIL



			IF !EMPTY(SELF:ACUSTOMCOLOR)
				SELF:ACUSTOMCOLOR := {}
                SELF:OBROWSE:SETROWCOLOR()
			ENDIF




			SELF:OBROWSE:CLEARROWS()
			IF !(SELF:DATATABLE() .OR.  SELF:DATAQUERY())
				SELF:NAT := 1
			ENDIF
			SELF:NCURSORPOS := 0
			SELF:SHOWDATA(SELF:NVISIBLEROWS)
		ENDIF

		SELF:NAT        := 1
		SELF:NCURSORPOS := 0



		IF !SELF:DATAARRAY()
			IF !SELF:DATATEXT()
				SELF:ODATA:GOTO(NRECNO)
				SELF:NAT := NRECNO
			ELSE
				SELF:ODATA:GOTOP()
			ENDIF
		ENDIF
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ENDIF

IF SELF:OBROWSE <> NIL
	SELF:SELECTROW(SELF:NCURSORPOS)
ENDIF



SELF:NLEN := SELF:LOGICLEN()
RETURN











FUNCTION ___FWBROWSE____GOUP(NOFFSET )
LOCAL NI
LOCAL NRECNO
LOCAL LADJUST := .F. 
LOCAL LLINEREFRESH := .T. 
LOCAL LSAVEAREA    := SELF:LSAVEAREA

IF NOFFSET <> NIL .AND.  !(VALTYPE(NOFFSET) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NOFFSET"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NOFFSET)); ENDIF; NOFFSET := IF(NOFFSET == NIL,1,NOFFSET)

IF NOFFSET > 0 .AND.  !SELF:ODATA:ISFIRST(SELF:NAT)




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF




	IF SELF:LINEOK() .AND.  !SELF:ODATA:ISFIRST(SELF:NAT)



		IF !EMPTY(SELF:AGROUP)
			FOR NI := 1 TO NOFFSET
				SELF:GROUPLINEREFRESH( .T. )



				IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
					DBSELECTAREA(SELF:ALIAS())
					NRECNO := (SELF:CALIAS)->(RECNO())
					SELF:ODATA:SKIP(-1)
					SELF:NAT := (SELF:CALIAS)->(RECNO())
					IF NRECNO == SELF:NAT
						LLINEREFRESH := .F. 
					ENDIF
                ELSE
					SELF:NAT --
				ENDIF
			NEXT
		ELSE



			IF SELF:LDATATABLE .OR.  SELF:LDATAQUERY
				DBSELECTAREA(SELF:ALIAS())
				NRECNO := (SELF:CALIAS)->(RECNO())
				SELF:ODATA:SKIP(-NOFFSET)
				SELF:NAT := (SELF:CALIAS)->(RECNO())
				IF NRECNO == SELF:NAT
					LLINEREFRESH := .F. 
				ENDIF
			ELSE
				SELF:NAT -= NOFFSET
			ENDIF
		ENDIF

		IF VALTYPE(SELF:OBROWSE) == "O" .AND.  LLINEREFRESH
			IF SELF:NCURSORPOS == 0
				SELF:OBROWSE:SCROLLLINE(-1)



				IF LEN(SELF:AVISIBLEREG) = 0
					AADD( SELF:AVISIBLEREG , SELF:NAT)
				ELSE
					AINS( SELF:AVISIBLEREG , 1)
					SELF:AVISIBLEREG[1] := SELF:NAT
				ENDIF

				LADJUST := .T. 
			ELSE
				SELF:NCURSORPOS -= NOFFSET
			ENDIF
			IF LADJUST
				SELF:NCURSORPOS := 0



				IF LEN(SELF:ACUSTOMCOLOR) > 0
					FOR NI := 1 TO LEN(SELF:ACUSTOMCOLOR)
						SELF:ACUSTOMCOLOR[NI,1]+=1
					NEXT
					SELF:REFRESHCUSTOMCOLOR()
				ENDIF



				SELF:LINEREFRESH()
			ELSE



				IF ( SELF:LFORCEREFRESH .OR.  (SELF:OFWFORMGRID <> NIL .AND.  SELF:OFWFORMGRID:CCLASSNAME == "FWFORMGRID"))
					SELF:LINEREFRESH()
				ENDIF
			ENDIF

		ENDIF
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ENDIF

IF VALTYPE(SELF:OBROWSE) == "O"
	SELF:SELECTROW(SELF:NCURSORPOS)
ENDIF

RETURN














FUNCTION ___FWBROWSE____GOTO(NGOTO,LREFRESH,LEVAL )
LOCAL NLOGICLEN := 0
LOCAL LSAVEAREA := SELF:LSAVEAREA

IF !(VALTYPE(NGOTO) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NGOTO"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NGOTO)); ENDIF
IF LREFRESH <> NIL .AND.  !(VALTYPE(LREFRESH) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LREFRESH"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LREFRESH)); ENDIF; LREFRESH := IF(LREFRESH == NIL, .T. ,LREFRESH)
IF LEVAL <> NIL .AND.  !(VALTYPE(LEVAL) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LEVAL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LEVAL)); ENDIF; LEVAL := IF(LEVAL == NIL, .F. ,LEVAL)





IF LSAVEAREA
	SELF:RESTOREAREA()
ENDIF

IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
	DBSELECTAREA(SELF:ALIAS())
	IF NGOTO <> (SELF:CALIAS)->(RECNO())
		SELF:ODATA:GOTO( NGOTO, LEVAL )
	ENDIF
	SELF:NAT := (SELF:CALIAS)->(RECNO())
ELSE
	IF NGOTO <> SELF:NAT



		NLOGICLEN := SELF:LOGICLEN()
		IF NGOTO > NLOGICLEN
			NGOTO := NLOGICLEN
		ENDIF
		SELF:NAT := NGOTO
		IF SELF:NAT <= 0
            SELF:NAT := 1
		ENDIF
	ENDIF
ENDIF



IF LREFRESH
	SELF:REFRESH()
ENDIF





IF LSAVEAREA
	SELF:SAVEAREA()
ENDIF

RETURN












FUNCTION ___FWBROWSE____GROUPLINEREFRESH(LUP )
LOCAL NPOS
LOCAL LGROUP    := (VALTYPE(SELF:BGROUP) == "B")
LOCAL LLOOP     := .T. 
LOCAL NLOGICLEN := 0

IF LUP <> NIL .AND.  !(VALTYPE(LUP) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LUP"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LUP)); ENDIF; LUP := IF(LUP == NIL, .F. ,LUP)

IF LUP
	IF (NPOS:= ASCAN(SELF:AGROUP, { |X| X[1] == SELF:NAT } )) > 0
		NPOS--
		IF NPOS > 0 .AND.  LEN(SELF:AGROUP) >= NPOS .AND.  !SELF:AGROUP[NPOS,2]



			IF SELF:AGROUP[NPOS,4] == 0
				WHILE LLOOP



					IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
						SELF:ODATA:SKIP(-1)
						SELF:NAT := (SELF:CALIAS)->(RECNO())
						IF (SELF:CALIAS)->(BOF())
							SELF:NAT := SELF:ODATA:GOTO(SELF:ODATA:FIRSTRECNO())
							LLOOP := .F. 
						ELSEIF ( LGROUP .AND.  EVAL(SELF:BGROUP,SELF) )
							SELF:ODATA:SKIP()
							SELF:NAT := (SELF:CALIAS)->(RECNO())
							LLOOP := .F. 
						ENDIF
					ELSE
						SELF:NAT --
						IF SELF:NAT < 1 .OR.  ( LGROUP .AND.  EVAL(SELF:BGROUP,SELF) )
							SELF:NAT ++
							LLOOP := .F. 
						ENDIF
					ENDIF
				ENDDO



				IF SELF:AGROUP[NPOS,3] > 0
					SELF:AGROUP[NPOS,4] := SELF:NAT
				ENDIF
			ELSE



				SELF:GOTO(SELF:AGROUP[NPOS,4], .F. )
			ENDIF
		ENDIF
	ENDIF
ELSE
	IF (NPOS:= ASCAN(SELF:AGROUP, { |X| X[1] == SELF:NAT } )) > 0 .AND.  !SELF:AGROUP[NPOS,2]



		IF SELF:AGROUP[NPOS,3] == 0
			NLOGICLEN := SELF:LOGICLEN()
			WHILE LLOOP



				IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
					SELF:ODATA:SKIP()
					SELF:NAT := (SELF:CALIAS)->(RECNO())
					IF (SELF:CALIAS)->(EOF()) .OR.  ( LGROUP .AND.  EVAL(SELF:BGROUP,SELF) )
						SELF:ODATA:SKIP(-1)
						SELF:NAT := (SELF:CALIAS)->(RECNO())
						LLOOP := .F. 
					ENDIF
				ELSE
					SELF:NAT ++
					IF NLOGICLEN < SELF:NAT .OR.  ( LGROUP .AND.  EVAL(SELF:BGROUP,SELF) )
						SELF:NAT --
						LLOOP := .F. 
					ENDIF
				ENDIF
			ENDDO
			SELF:AGROUP[NPOS,3] := SELF:NAT
		ELSE



			SELF:GOTO( SELF:AGROUP[NPOS][3], .F.  )
		ENDIF
	ENDIF
ENDIF

RETURN










FUNCTION ___FWBROWSE____HIDE( )

SELF:OOWNER:HIDE()

RETURN











FUNCTION ___FWBROWSE____HEADERCLICK( )
LOCAL BHEADERCLICK
LOCAL NCOLUMN := SELF:COLPOS()

IF VALTYPE(SELF:BCUSTOMHEADERCLICK) == "B"



	EVAL(SELF:BCUSTOMHEADERCLICK,SELF)
ELSE



	BHEADERCLICK := SELF:ACOLUMNS[NCOLUMN]:BHEADERCLICK
	IF VALTYPE(BHEADERCLICK) <> "B"
		BHEADERCLICK := SELF:BHEADERCLICK
	ENDIF



	IF VALTYPE(BHEADERCLICK) == "B"
		EVAL(BHEADERCLICK,SELF)
	ENDIF
ENDIF

RETURN













FUNCTION ___FWBROWSE____GETPROFILEID( )

RETURN SELF:CPROFILEID











FUNCTION ___FWBROWSE____KEYBLOCK(OGRID,NCHAR )

IF NCHAR == 46



	IF SELF:LDELETE
		SELF:DELLINE()
	ENDIF
ELSEIF NCHAR == 500



	IF SELF:LDELETE
		SELF:SUPERDEL()
	ENDIF
ENDIF

RETURN












FUNCTION ___FWBROWSE____LINEHEIGHTCONFIG(OPANEL )
LOCAL NHEIGHT   := SELF:NROWHEIGHT
LOCAL NLIN      := 5
LOCAL NCOLSAY   := 5
LOCAL NCOLGET   := 95
LOCAL OTGET
IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()

TSAY():NEW(NLIN+1,NCOLSAY,{|| FWI18NLANG("FWBRWSTR","STR0063",63) }, OPANEL,,,,,, .T. ,,,,,,,,,)
OTGET := TGET():NEW(NLIN,NCOLGET,&("{ | U | IF( PCOUNT() == 0, NHEIGHT,NHEIGHT := U ) }"),OPANEL,20,08,"999",,,,, .F. ,, .T. ,, .F. ,, .F. , .F. ,{|| }, .F. , .F. ,,,,,, .T. )
NLIN+=11
IF FWISTOUCH()
	OTGET:NHEIGHT +=12
	IF FWCHKBUILD("7.00.120420A-20120529")
		OTGET:LTABLET := .F. 
	ENDIF
ENDIF



SELF:BCONFIGITEMCONFIRM := { ||  SELF:SETLINEHEIGHT(NHEIGHT) }

RETURN










FUNCTION ___FWBROWSE____LINEOK(LINSERT )
LOCAL LRET := .T. 
LINSERT := IF( LINSERT == NIL, .F. , LINSERT ) ;
IF VALTYPE(SELF:BLINEOK) == "B"
	IF !EVAL(SELF:BLINEOK,SELF,LINSERT)
		LRET := .F. 
	ENDIF
ENDIF

RETURN LRET











FUNCTION ___FWBROWSE____LINEREFRESH(NAT )
LOCAL NFORECOLOR := 0
LOCAL NBACKCOLOR := 0

IF NAT <> NIL .AND.  !(VALTYPE(NAT) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NAT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NAT)); ENDIF; NAT := IF(NAT == NIL,SELF:NCURSORPOS,NAT)

IF SELF:LCUSTOMCOLOR
	IF VALTYPE(SELF:BBLKCOLOR) == "B"



		NFORECOLOR := EVAL(SELF:BBLKCOLOR,NAT)
	ENDIF
	IF VALTYPE(SELF:BBLKBACKCOLOR) == "B"



		NBACKCOLOR := EVAL(SELF:BBLKBACKCOLOR,NAT)
	ENDIF
	IF VALTYPE(NFORECOLOR) == "N" .AND.  VALTYPE(NBACKCOLOR) == "N"



		SELF:OBROWSE:SETROWCOLOR(NAT,NBACKCOLOR,NFORECOLOR)
		IF ASCAN(SELF:ACUSTOMCOLOR,{|X| X[1] == NAT}) == 0
			AADD( SELF:ACUSTOMCOLOR, { NAT,NBACKCOLOR,NFORECOLOR } )
		ENDIF
	ENDIF
ENDIF

SELF:OBROWSE:SETROWDATA(NAT,SELF:BLINE)

RETURN











FUNCTION ___FWBROWSE____LOCATEACTION( )

LOCAL NOLDNAT := SELF:NAT
LOCAL OFWLOCATE := SELF:OBROWSEUI:GETLOCATE()

IF VALTYPE(OFWLOCATE) == "O" .AND.  SELF:LOGICLEN() > 0
	IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
		DBSELECTAREA(SELF:ALIAS())
	ENDIF



	OFWLOCATE:SETAT(SELF:NAT)
	SELF:REFRESH()



	SELF:NAT := EVAL(SELF:ODATA:GETLOCATEACTION(),OFWLOCATE,SELF)



	IF (NPOS := ASCAN(SELF:AGROUP, { |X| X[1] < SELF:NAT .AND.  X[3] >= SELF:NAT .AND.  !X[2] } )) > 0
		SELF:GOTO(SELF:AGROUP[NPOS,1], .F. )
	ENDIF



	SELF:REFRESH()



	IF NOLDNAT <> SELF:NAT
		SELF:ONCHANGE()
	ENDIF
ENDIF

RETURN












FUNCTION ___FWBROWSE____LOCATECONFIG(OPANEL )
LOCAL NCOL    := 5
LOCAL NLIN    := 5
LOCAL OFWLOCATE := SELF:OBROWSEUI:GETLOCATE()
LOCAL LACTIVE := OFWLOCATE:VISIBLE()

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()

TCHECKBOX():NEW(NLIN,NCOL,FWI18NLANG("FWBRWSTR","STR0057",57),&("{ | U | IF( PCOUNT() == 0, LACTIVE, LACTIVE := U ) }"),OPANEL,100,10,, {|| },,,,, .F. , .T. ,, .F. , )




SELF:BCONFIGITEMCONFIRM := { || IIF(LACTIVE,SELF:OBROWSEUI:SHOWLOCATE(),SELF:OBROWSEUI:HIDELOCATE()) }

RETURN













FUNCTION ___FWBROWSE____LOADCONFIG( )
LOCAL NI
LOCAL NJ
LOCAL NPOS
LOCAL NCOLUNA	  := 0
LOCAL XPICTURE
LOCAL AALIGN      := {}
LOCAL ACOLUMN     := {}
LOCAL ACOMMENT    := {}
LOCAL ADEL        := {}
LOCAL APICTURE    := {}
LOCAL APROFILE    := {}
LOCAL ASIZE       := {}
LOCAL AUSERCOLUMN := {}
LOCAL OSELF 	  := SELF
LOCAL LCFGCSCOLS  := .T. 
LOCAL OFWSEEK
LOCAL OPROFILE

__FWPROFILE := IF( __FWPROFILE == NIL, FINDFUNCTION("__FWPROFILE"), __FWPROFILE ) ;




IF SELF:LSAVECONFIG .AND.  __FWPROFILE



	OPROFILE:= FWPROFILE():NEW()
	OPROFILE:SETTASK("PROTHEUS")
	OPROFILE:SETTYPE(IF(SUBSTR(SELF:GETPROFILEID(),1,4)=="FWLK","BRW","BROWSE")+SELF:GETPROFILEID())
	OPROFILE:LOAD(SELF:ISCFGEMPFIL())
	APROFILE := OPROFILE:GETPROFILE()
	IF __LISP12
		SELF:OCONFIG:LOADFROMPROFILE(APROFILE)
		SELF:OCONFIG:GETDEFAULTS(SELF)
		SELF:OCONFIG:APPLYCONFIG(SELF)
	ELSE
		FOR NI := 1 TO LEN(APROFILE)
			IF NI == 1
				SELF:NHEADERCLICK := APROFILE[NI,1]
				SELF:NDOUBLECLICK := APROFILE[NI,2]



			ELSEIF NI == 2
				SELF:CFONTBODY      := APROFILE[NI,1]
				SELF:NFONTBODY      := APROFILE[NI,2]
				SELF:LFONTBOLD      := APROFILE[NI,3]
				SELF:LFONTITALIC    := APROFILE[NI,4]
				SELF:LFONTUNDERLINE := APROFILE[NI,5]
				SELF:OFONT :=TFONT():NEW(SELF:CFONTBODY,0,(SELF:NFONTBODY+2)*(-1),,SELF:LFONTBOLD,,,,,SELF:LFONTUNDERLINE,SELF:LFONTITALIC)
			ELSEIF NI == 3
				SELF:SETCLRALTERROW(APROFILE[NI,1])
				SELF:LCLRALTERROW := APROFILE[NI,2]
			ELSEIF NI == 4
				SELF:SETBACKCOLOR(APROFILE[NI,1])
				SELF:SETFORECOLOR(APROFILE[NI,2])
			ELSEIF NI == 5
				SELF:NROWHEIGHT := APROFILE[NI]


			ELSEIF NI == 6
				OFWSEEK := SELF:GETSEEK()
				IF VALTYPE(APROFILE[NI]) == "A"
					IF !APROFILE[NI,1] .AND.  VALTYPE(OFWSEEK) == "O"
						SELF:OBROWSEUI:HIDESEEK()
					ENDIF



					IF VALTYPE(APROFILE[NI,2]) == "A" .AND.  VALTYPE(OFWSEEK) == "O"
						FOR NJ := 1 TO LEN(APROFILE[NI,2])
							IF (NPOS := ASCAN( OFWSEEK:ADEFAULTORDER, { |X| X[1] == APROFILE[NI,2,NJ,1] } )) > 0
								OFWSEEK:ADEFAULTORDER[NPOS,4] := .F. 
							ENDIF
						NEXT
						OFWSEEK:SETORDER(OFWSEEK:ADEFAULTORDER)
					ENDIF
				ELSEIF !APROFILE[NI] .AND.  VALTYPE(SELF:OFWSEEK) == "O"
					OFWSEEK:HIDE()
				ENDIF

			ELSEIF NI == 7
				IF !APROFILE[NI]
					SELF:OBROWSEUI:HIDELOCATE()
				ENDIF
			ELSEIF NI == 8
				IF !APROFILE[NI,1]
					SELF:OBROWSEUI:HIDEFILTER()
				ENDIF

				SELF:SETOBLIGATEFILTER(APROFILE[NI,2])




			ELSEIF NI == 9 .OR.  NI == 10 .OR.  NI == 11
				IF LCFGCSCOLS

					AUSERCOLUMN	:= APROFILE[9]
					FOR NJ := 1 TO LEN(AUSERCOLUMN)
						ACOLUMN := {}
						AADD( ACOLUMN, AUSERCOLUMN[NJ,1])
						AADD( ACOLUMN, IIF(VALTYPE(AUSERCOLUMN[NJ,2])=="C",&(AUSERCOLUMN[NJ,2]),AUSERCOLUMN[NJ,2]))
						AADD( ACOLUMN, AUSERCOLUMN[NJ,3])
						AADD( ACOLUMN, AUSERCOLUMN[NJ,4])
						AADD( ACOLUMN, AUSERCOLUMN[NJ,5])
						AADD( ACOLUMN, AUSERCOLUMN[NJ,6])
						AADD( ACOLUMN, AUSERCOLUMN[NJ,7])
						AADD( ACOLUMN, AUSERCOLUMN[NJ,8])
						AADD( ACOLUMN, IIF(VALTYPE(AUSERCOLUMN[NJ,9])=="C",&(AUSERCOLUMN[NJ,9]),AUSERCOLUMN[NJ,9]))
						AADD( ACOLUMN, AUSERCOLUMN[NJ,10])
						AADD( ACOLUMN, IIF(VALTYPE(AUSERCOLUMN[NJ,11])=="C",&(AUSERCOLUMN[NJ,11]),AUSERCOLUMN[NJ,11]))
						AADD( ACOLUMN, AUSERCOLUMN[NJ,12])
						AADD( ACOLUMN, IIF(VALTYPE(AUSERCOLUMN[NJ,13])=="C",&(AUSERCOLUMN[NJ,13]),AUSERCOLUMN[NJ,13]))
						IF LEN(AUSERCOLUMN[NJ]) > 13
							ASIZE(ACOLUMN, 16)
							AADD(ACOLUMN, AUSERCOLUMN[NJ,14])
						ENDIF
						SELF:ADDUSERCOLUMN(ACOLUMN, .F. )
					NEXT

					ADEL := APROFILE[11]
					FOR NJ := 1 TO LEN(ADEL)



						IF ( VALTYPE( ADEL[NJ] ) == "A" )
					 		IF ! ( EMPTY( ADEL[NJ][1] ) )
								NCOLUNA := ASCAN( SELF:ACOLUMNS, {|OCOLUNA| ALLTRIM( OCOLUNA:READVAR() ) == ALLTRIM( ADEL[NJ][1] ) } )
							ELSE
								NCOLUNA	:= ADEL[NJ][2]
							ENDIF
							IF ! ( NCOLUNA == 0)
								SELF:ACOLUMNS[NCOLUNA]:SETDELETE()
							ENDIF
						ELSE



							IF ADEL[NJ] <= LEN(SELF:ACOLUMNS)
								SELF:ACOLUMNS[ADEL[NJ]]:SETDELETE()
							ENDIF
						ENDIF
					NEXT

					SELF:SETORDERCOLUMNS(APROFILE[10])
					LCFGCSCOLS := .F. 
				ENDIF
			ELSEIF NI == 12
				AALIGN := APROFILE[NI]
				FOR NJ := 1 TO LEN(AALIGN)



					IF ( VALTYPE( AALIGN[NJ] ) == "A" )
						IF ! ( EMPTY( AALIGN[NJ][1] ) )
							NCOLUNA := ASCAN( SELF:ACOLUMNS, {|OCOLUNA| ALLTRIM( OCOLUNA:READVAR() ) == ALLTRIM( AALIGN[NJ][1] ) } )
						ELSE
							NCOLUNA	:= NJ
						ENDIF

						IF ! ( NCOLUNA == 0) .AND.  ( NJ <= LEN(SELF:ACOLUMNS))
							SELF:ACOLUMNS[NCOLUNA]:SETALIGN( AALIGN[NJ][2] )
						ENDIF
					ELSE



				 		IF NJ <= LEN(SELF:ACOLUMNS)
							SELF:ACOLUMNS[NJ]:SETALIGN( AALIGN[NJ] )
						ENDIF
					ENDIF
				NEXT
			ELSEIF NI == 13
				APICTURE := APROFILE[NI]
				FOR NJ := 1 TO LEN(APICTURE)



	  				IF ( VALTYPE( APICTURE[NJ] ) == "A" )
						IF ! ( EMPTY( APICTURE[NJ][1] ) )
							NCOLUNA := ASCAN( SELF:ACOLUMNS, {|OCOLUNA| ALLTRIM( OCOLUNA:READVAR() ) == ALLTRIM( APICTURE[NJ][1] ) } )
						ELSE
							NCOLUNA	:= NJ
						ENDIF



						IF AT( "{", APICTURE[NJ][2] ) > 0
							XPICTURE := &( APICTURE[NJ][2] )
							IF VALTYPE(XPICTURE) <> "B"
								XPICTURE := ""
							ENDIF
						ELSE
							XPICTURE := APICTURE[NJ][2]
						ENDIF

				 		IF ! ( NCOLUNA == 0 ) .AND.  ( NJ <= LEN(SELF:ACOLUMNS))
							SELF:ACOLUMNS[NCOLUNA]:SETPICTURE( XPICTURE )
						ENDIF
					ELSE



						IF NJ <= LEN(SELF:ACOLUMNS)



							IF AT("{",APICTURE[NJ]) > 0
								XPICTURE := &(APICTURE[NJ])
								IF VALTYPE(XPICTURE) <> "B"
									XPICTURE := ""
								ENDIF
							ELSE
								XPICTURE := APICTURE[NJ]
							ENDIF

							SELF:ACOLUMNS[NJ]:SETPICTURE(XPICTURE)
						ENDIF
					ENDIF
				NEXT
			ELSEIF NI == 14
				ASIZE := APROFILE[NI]
				FOR NJ := 1 TO LEN( ASIZE )



					IF ( VALTYPE( ASIZE[NJ] ) == "A" )
				 		IF ! ( EMPTY( ASIZE[NJ][1] ) )
							NCOLUNA := ASCAN( SELF:ACOLUMNS, {|OCOLUNA| ALLTRIM( OCOLUNA:READVAR() ) == ALLTRIM( ASIZE[NJ][1] ) } )
						ELSE
							NCOLUNA	:= NJ
						ENDIF

				 		IF ! ( NCOLUNA == 0 ) .AND.  ( NJ <= LEN(SELF:ACOLUMNS))
							SELF:ACOLUMNS[NCOLUNA]:SETSIZE( ASIZE[NJ][2] )
						ENDIF
					ELSE



				 		IF NJ <= LEN(SELF:ACOLUMNS)
							SELF:ACOLUMNS[NJ]:SETSIZE( ASIZE[NJ] )
						ENDIF
					ENDIF
				NEXT
			ELSEIF NI == 15
				ACOMMENT := APROFILE[NI]
				FOR NJ := 1 TO LEN(ACOMMENT)



					IF ( VALTYPE( ACOMMENT[NJ] ) == "A" )

				 		IF ! ( EMPTY( ACOMMENT[NJ][1] ) )
							NCOLUNA := ASCAN( SELF:ACOLUMNS, {|OCOLUNA| ALLTRIM( OCOLUNA:READVAR() ) == ALLTRIM( ACOMMENT[NJ][1] ) } )
						ELSE
							NCOLUNA	:= NJ
						ENDIF

				 		IF ! ( NCOLUNA == 0 )
				 			IF VALTYPE( ACOMMENT[NJ][2] ) == "C"
								SELF:ACOLUMNS[NCOLUNA]:SETCOMMENT( ACOMMENT[NJ][2] )
							ENDIF
						ENDIF
					ELSE



				 		IF NJ <= LEN(SELF:ACOLUMNS)
				 			IF VALTYPE( ACOMMENT[NJ] ) == "C"
								SELF:ACOLUMNS[NJ]:SETCOMMENT( ACOMMENT[NJ] )
							ENDIF
						ENDIF
					ENDIF
				NEXT
			ELSEIF NI == 16
				SELF:ATOTAL := IIF(VALTYPE(APROFILE[NI]) == "A", LOADTOTALS(APROFILE[NI]) , APROFILE[NI] )

			ELSEIF NI == 17
				SELF:ACLASSIFY := APROFILE[NI]
			ENDIF
		NEXT
	ENDIF
	SELF:ABKPPROFILE := ACLONE(APROFILE)
ENDIF

RETURN











FUNCTION ___FWBROWSE____LOGICLEN( )
LOCAL NLOGICLEN := 0

IF VALTYPE(SELF:BLOGICLEN) == "B"
	NLOGICLEN := EVAL(SELF:BLOGICLEN)
ELSEIF VALTYPE(SELF:ODATA:BLOGICLEN) == "B"
	NLOGICLEN := EVAL(SELF:ODATA:BLOGICLEN)
ENDIF

RETURN NLOGICLEN












FUNCTION ___FWBROWSE____MAPFIELD( )

RETURN SELF:AMAPFIELD










FUNCTION ___FWBROWSE____OBLIGATEFILTER( )

RETURN SELF:LOBLIGATEFILTER











FUNCTION ___FWBROWSE____ONCHANGE( )

IF VALTYPE(SELF:BCHANGE) == "B"
	EVAL(SELF:BCHANGE,SELF)
ENDIF




IF SELF:LACCVISUAL
	AVGRIDLINECHANGE(SELF)
ENDIF

RETURN
















FUNCTION ___FWBROWSE____ONMOVE(OBROWSE,NMVTYPE,NCURPOS,NOFFSET,NVISROWS )
LOCAL NAT AS  NUMERIC

NAT := SELF:NAT

SELF:NCURSORPOS := NCURPOS
SELF:NMOVETYPE  := NMVTYPE
SELF:NOFFSET    := NOFFSET
NVISROWS	 := SELF:OBROWSE:GETVISIBLEROWS()



IF SELF:NPOSSIBLEROWS == 0 .OR.  NVISROWS < SELF:NPOSSIBLEROWS .OR.  NVISROWS <> SELF:NVISIBLEROWS
	SELF:NVISIBLEROWS := NVISROWS
ELSEIF NVISROWS == SELF:NVISIBLEROWS



	SELF:NVISIBLEROWS := SELF:OBROWSE:GETVISIBLEROWS()
ENDIF

IF SELF:NMOVETYPE == 0 .OR.  SELF:NMOVETYPE == 10
	SELF:GOUP(NOFFSET)
ELSEIF SELF:NMOVETYPE == 1 .OR.  SELF:NMOVETYPE == 11
	SELF:GODOWN(NOFFSET)
ELSEIF SELF:NMOVETYPE == 2
	SELF:GOTOP()
ELSEIF SELF:NMOVETYPE == 3
	SELF:GOBOTTOM()
ELSEIF SELF:NMOVETYPE == 4
	SELF:GOPGUP()
ELSEIF SELF:NMOVETYPE == 5
	SELF:GOPGDOWN()
ENDIF

IF SELF:NMOVETYPE <> 0 .AND.  SELF:NMOVETYPE <> 1 .AND.  SELF:NMOVETYPE <> 10 .AND.  SELF:NMOVETYPE <> 11
	SELF:GOCOLUMN( SELF:OBROWSE:COLPOS() )
ENDIF




IF SELF:NAT <> NAT
	SELF:ONCHANGE()
ENDIF

RETURN











FUNCTION ___FWBROWSE____ONCOLUMNCHANGED( )

SELF:TOTALCHANGE()

RETURN











FUNCTION ___FWBROWSE____OPTIONCONFIG( )

RETURN SELF:LOPTIONCONFIG











FUNCTION ___FWBROWSE____OPTIONREPORT( )

RETURN SELF:LOPTIONREPORT











FUNCTION ___FWBROWSE____OPTIONPRINT( )

RETURN SELF:LOPTIONREPORT












FUNCTION ___FWBROWSE____ORDERCONFIG(OPCENTER )
LOCAL OPANEL
LOCAL OSELF     := SELF
LOCAL NI        := 0
LOCAL NITEM     := 0
LOCAL NLIN      := 5
LOCAL NLINIMAGE := 13
LOCAL NCOLIMAGE := 10
LOCAL NCOLSAY   := 25
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL CTITLE    := ""
LOCAL AORDER    := {}

IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED()
		NSIZE+=10
	ENDIF
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL



	IF !SELF:ACOLUMNS[NI]:DELETED()
		IF SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
			NITEM++
			IF SELF:ACOLUMNS[NI]:ISIMAGE()
				CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
			ELSE
				CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
			ENDIF

			TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE   ,10,10,"FW_MENU_SCROLL_UP"  ,"FW_MENU_SCROLL_UP"  ,,,&("{ || OSELF:COLUMNORDER(AORDER,"+STR(NITEM)+",.T.) }"), OPANEL, , , .T.  )
			TBTNBMP2():NEW(NLINIMAGE,NCOLIMAGE+20,10,10,"FW_MENU_SCROLL_DOWN","FW_MENU_SCROLL_DOWN",,,&("{ || OSELF:COLUMNORDER(AORDER,"+STR(NITEM)+",.F.) }"), OPANEL, , , .T.  )
			AADD( AORDER, { NITEM, SELF:ACOLUMNS[NI]:NORDERDEFAULT, SELF:ACOLUMNS[NI]:CREADVAR, TSAY():NEW(NLIN,NCOLSAY,&("{||'" + CTITLE + "'}"), OPANEL,,,,,, .T. ,,,,,,,,,) })

			NLIN+=10
			NLINIMAGE+=20
		ELSE
			NITEM++
				AADD( AORDER, { NITEM, NITEM, SELF:ACOLUMNS[NI]:CREADVAR, NIL } )
		ENDIF
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETORDERCOLUMNS(AORDER) }

RETURN











FUNCTION ___FWBROWSE____ORDERCOLUMN( )
LOCAL NI
LOCAL NDIF    := 0
LOCAL NDEL    := 0
LOCAL NCOLPOS := SELF:COLPOS()
LOCAL NPOSATU := SELF:COLPOS( .F. )
LOCAL LDESC   := .F. 
LOCAL LTYPE	  := .F. 

IF SELF:LORDERCOL



	IF SELF:DATAARRAY()
		IF SELF:ACOLUMNS[NCOLPOS]:GETHEADERIMAGE() == "VCDOWN"
			LDESC := .T. 
		ENDIF
	ENDIF

	FOR NI := 1 TO LEN(SELF:ACOLUMNS)
		IF SELF:ACOLUMNS[NI]:DELETED()
			NDEL++
		ENDIF
		IF SELF:ACOLUMNS[NI]:GETHEADERIMAGE() $ "VCDOWN|VCUP"
			SELF:ACOLUMNS[NI]:SETHEADERIMAGE("VCRIGHT")
			SELF:SETHEADERIMAGE(NI-NDEL,"VCRIGHT")
		ENDIF
	NEXT
	IF !LDESC
		SELF:ACOLUMNS[NCOLPOS]:SETHEADERIMAGE("VCDOWN")
		SELF:SETHEADERIMAGE(NPOSATU,"VCDOWN")
	ELSE
		SELF:ACOLUMNS[NCOLPOS]:SETHEADERIMAGE("VCUP")
		SELF:SETHEADERIMAGE(NPOSATU,"VCUP")
	ENDIF

	IF SELF:DATAARRAY()
		IF !EMPTY(SELF:ODATA:AARRAY)
			IF VALTYPE(SELF:ODATA:AARRAY[1]) == "A"



				IF LEN(SELF:ACOLUMNS) > LEN(SELF:ODATA:AARRAY[1])
					NDIF := LEN(SELF:ACOLUMNS)-LEN(SELF:ODATA:AARRAY[1])
				ENDIF
				IF SELF:ACOLUMNS[NCOLPOS]:GETTYPE() == "C"
					IF !LDESC
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| UPPER(X[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF]) < UPPER(Y[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF]) })
					ELSE
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| UPPER(X[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF]) > UPPER(Y[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF]) })
					ENDIF
				ELSE
					IF !LDESC
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| X[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF] < Y[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF] })
					ELSE
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| X[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF] > Y[SELF:ACOLUMNS[NCOLPOS]:GETORDERDEFAULT()-NDIF] })
					ENDIF
				ENDIF
			ELSE
				IF SELF:ACOLUMNS[NCOLPOS]:GETTYPE() == "C"
					IF !LDESC
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| UPPER(X) < UPPER(Y) })
					ELSE
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| UPPER(X) > UPPER(Y) })
					ENDIF
				ELSE
					IF !LDESC
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| X < Y })
					ELSE
						ASORT(SELF:ODATA:AARRAY,,,{|X,Y| X > Y })
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ELSEIF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
		IF HASORD(SELF:CALIAS,SELF:ACOLUMNS[NCOLPOS]:READVAR(), .T. ,SELF:GETSEEK())
			SELF:UPDATETOPBOT( .F. )
		ENDIF
	ENDIF

	SELF:REFRESH( .F. )

ENDIF
RETURN












FUNCTION ___FWBROWSE____PICTURECOLUMNCONFIG(OPCENTER )
LOCAL OPANEL
LOCAL NI        := 0
LOCAL NLIN      := 5
LOCAL NCOLSAY   := 5
LOCAL NCOLGET   := 95
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL XPICTURE  := ""
LOCAL CTITLE    := ""
LOCAL APICTURE  := ARRAY(NTOTAL)
LOCAL OGET
IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()




FOR NI := 1 TO NTOTAL

	XPICTURE := SELF:ACOLUMNS[NI]:GETPICTURE()
	IF VALTYPE(XPICTURE) == "U"
		XPICTURE := SPACE(60)
	ELSEIF VALTYPE(XPICTURE) == "B"
		XPICTURE := PADR(GETCBSOURCE(XPICTURE)+SPACE(60),60)
	ELSE
		XPICTURE := PADR(SELF:ACOLUMNS[NI]:GETPICTURE()+SPACE(60),60)
	ENDIF
	APICTURE[NI] := XPICTURE
	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		NSIZE+=11
	ENDIF
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL



	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		IF SELF:ACOLUMNS[NI]:ISIMAGE()
			CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
		ELSE
			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
		ENDIF
		TSAY():NEW(NLIN+1,NCOLSAY,&("{||'" + CTITLE + "'}"), OPANEL,,,,,, .T. ,,,,,,,,,)
		OGET := TGET():NEW(NLIN,NCOLGET,&("{ | U | IF( PCOUNT() == 0, APICTURE["+STR(NI)+"],APICTURE["+STR(NI)+"] := U ) }"),OPANEL,50,08,,,,,, .F. ,, .T. ,, .F. ,, .F. , .F. ,{|| }, .F. , .F. ,,,,,, .T. )
		IF FWISTOUCH()
			OGET:NHEIGHT += 12
			IF FWCHKBUILD("7.00.120420A-20120529")
				OGET:LTABLET := .F. 
			ENDIF
			NLIN += 9
		ENDIF
		NLIN+=11
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETPICTURECOLUMNS(APICTURE) }

RETURN












FUNCTION ___FWBROWSE____RECOVERYCOLUMN(NCOLUMN )

SELF:ACOLUMNS[NCOLUMN]:SETDELETE( .F. )

RETURN












FUNCTION ___FWBROWSE____RECUPARATECOLUMNCONFIG(OPCENTER )
LOCAL OPANEL
LOCAL CTITLE    := ""
LOCAL NI        := 0
LOCAL NLIN      := 5
LOCAL NCOL      := 5
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL ACHECKS   := ARRAY(NTOTAL)


IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()




FOR NI := 1 TO NTOTAL
	IF SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		NSIZE+=10
	ENDIF
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL
	IF SELF:ACOLUMNS[NI]:DELETED()
		IF SELF:ACOLUMNS[NI]:ISIMAGE()
			CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
		ELSE
			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
		ENDIF
		ACHECKS[NI] := .F. 
		TCHECKBOX():NEW(NLIN,NCOL,CTITLE,&("{ | U | IF( PCOUNT() == 0, ACHECKS[" + STR(NI) + "], ACHECKS[" + STR(NI) + "] := U ) }"),OPANEL,100,10,, {|| },,,,, .F. , .T. ,, .F. , )
		NLIN+=10
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETRECUPARATECOLUMN(ACHECKS) }

RETURN












FUNCTION ___FWBROWSE____RECUPCONFIG(OPANEL,LTITLE,CCAPTION )
LOCAL OPANEL1

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF
IF ISPLUGIN()
	OPANEL:READCLIENTCOORS()
ENDIF

OPANEL1 := TPANEL():NEW(20,0,,OPANEL,, .T. ,,,,OPANEL:NWIDTH,OPANEL:NHEIGHT, .F. , .F. )
OPANEL1:ALIGN := 5

IF !(LTITLE)
	CAPTION(OPANEL,CCAPTION)
ENDIF


 TSAY():NEW( 03, 05,{||  FWI18NLANG("FWBRWSTR","STR0064",64)},OPANEL1,,,.F.,.F.,.F.,.T.,,, 110, 20,.F.,.F.,.F.,.F.,.F.,.F. )

 TBUTTON():NEW( 18, 045, FWI18NLANG("FWBRWSTR","STR0065",65), OPANEL1,{||  (SELF:CLEANPROFILE(),OPANEL1:HIDE())}, 15, 10,,,.F.,.T.,.F.,,.F.,,,.F. )
 TBUTTON():NEW( 18, 065, FWI18NLANG("FWBRWSTR","STR0066",66), OPANEL1,{||  OPANEL1:HIDE()}, 15, 10,,,.F.,.T.,.F.,,.F.,,,.F. )

 TSAY():NEW( 35, 05,{||  FWI18NLANG("FWBRWSTR","STR0067",67)},OPANEL1,,,.F.,.F.,.F.,.T., 128, 128, 110, 30,.F.,.F.,.F.,.F.,.F.,.F. )

RETURN











FUNCTION ___FWBROWSE____REFRESH(LGOTOP,LSEEKACTION,LFILTERASK )
LOCAL NAT AS  NUMERIC
LOCAL LSAVEAREA AS  LOGICAL
LOCAL ADATAKEY AS  ARRAY

IF LGOTOP <> NIL .AND.  !(VALTYPE(LGOTOP) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LGOTOP"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LGOTOP)); ENDIF; LGOTOP := IF(LGOTOP == NIL, .F. ,LGOTOP)
IF LSEEKACTION <> NIL .AND.  !(VALTYPE(LSEEKACTION) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LSEEKACTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LSEEKACTION)); ENDIF; LSEEKACTION := IF(LSEEKACTION == NIL, .F. ,LSEEKACTION)

NAT := SELF:NAT
LSAVEAREA := SELF:LSAVEAREA
ADATAKEY := {}


IF VALTYPE(SELF:OBROWSE) == "O"




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF



	IF SELF:DATATABLE()
		DBSELECTAREA(SELF:ALIAS())
	ENDIF



	IF VALTYPE(SELF:NAT) <> "N" .OR.  LGOTOP
		SELF:NAT := 1



		IF VALTYPE(SELF:FWFILTER()) == "O"
			SELF:EXECUTEFILTER(,LFILTERASK)



			SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN
		ELSE




			IF !SELF:DATATABLE()
				SELF:UPDATETOPBOT()
			ENDIF



			SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN



			SELF:GOTOP( .T. )
		ENDIF
		NAT := SELF:NAT
	ELSE




		IF !SELF:DATATABLE()
			SELF:UPDATETOPBOT( .F. )




		ELSEIF LSEEKACTION .AND.  SELF:GETSEEK() <> NIL
			SELF:UPDATETOPBOT( .F. )

		ENDIF



		SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN
	ENDIF



	IF SELF:DATAARRAY() .AND.  SELF:NAT > SELF:ODATA:LASTRECNO()
		SELF:GOBOTTOM( .T. )
	ELSE



		IF !EMPTY(SELF:ACUSTOMCOLOR)
			SELF:ACUSTOMCOLOR := {}
			SELF:OBROWSE:SETROWCOLOR()
		ENDIF



		SELF:UPDATERELATION()
		SELF:OBROWSE:CLEARROWS()
		SELF:NCURSORPOS := 0



		IF SELF:DATAQUERY() .AND.  !LSEEKACTION

			ADATAKEY := SELF:GETUNIQUEDATAKEY()

			SELF:ODATA:DEACTIVATE()
			SELF:ODATA:ACTIVATE()


			SELF:GOTODATAKEY( ADATAKEY )


			NAT := SELF:NAT
		ENDIF

		SELF:SHOWDATA(SELF:NVISIBLEROWS)


		SELF:NCURSORPOS := IIF( LEN(ADATAKEY) > 0, SELF:NCURSORPOS, 0)
		SELF:SELECTROW(SELF:NCURSORPOS)




		SELF:GOTO(NAT, .F. , .T. )
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ENDIF




SELF:NLEN := SELF:LOGICLEN()

SELF:CHECKEMPTY()

RETURN











FUNCTION ___FWBROWSE____REFRESHCUSTOMCOLOR( )
LOCAL NI

IF !EMPTY(SELF:ACUSTOMCOLOR)



	FOR NI := 1 TO LEN(SELF:ACUSTOMCOLOR)
		IF NI > LEN(SELF:ACUSTOMCOLOR)
			EXIT
		ENDIF

		IF SELF:ACUSTOMCOLOR[NI,1] < 0 .OR.  SELF:ACUSTOMCOLOR[NI,1] > SELF:NVISIBLEROWS
			ADEL(SELF:ACUSTOMCOLOR,NI)
			ASIZE(SELF:ACUSTOMCOLOR,LEN(SELF:ACUSTOMCOLOR)-1)
			NI--
		ENDIF

	NEXT



	SELF:OBROWSE:SETROWCOLOR()
	FOR NI := 1 TO LEN(SELF:ACUSTOMCOLOR)
		SELF:OBROWSE:SETROWCOLOR(SELF:ACUSTOMCOLOR[NI,1],SELF:ACUSTOMCOLOR[NI,2],SELF:ACUSTOMCOLOR[NI,3])
	NEXT
ENDIF

RETURN












FUNCTION ___FWBROWSE____REPORT( )
LOCAL OREPORT := FWBRWREPORT():NEW(SELF)

OREPORT:ACTIVATE()

RETURN











FUNCTION ___FWBROWSE____RESET( )
RETURN











FUNCTION ___FWBROWSE____RESETLEN( )
RETURN











FUNCTION ___FWBROWSE____RESTOREAREA( )
LOCAL NORDER := 0
LOCAL NRECNO := 0
LOCAL AAREA  := {}
LOCAL ABRWRELATION := SELF:GETBRWRELATION()
LOCAL NX



FOR NX := 1 TO LEN(ABRWRELATION)
	IF ABRWRELATION[NX]:CLASSNAME() == "FWMARKBROWSE"
		IF !EMPTY(ABRWRELATION[NX]:OBROWSE:ALEFTJOIN)
			AAREA := GETAREA()
			ABRWRELATION[NX]:OBROWSE:RESTOREAREA()
			RESTAREA(AAREA)
		ENDIF
	ELSE
		IF !EMPTY(ABRWRELATION[NX]:ALEFTJOIN)
			AAREA := GETAREA()
			ABRWRELATION[NX]:RESTOREAREA()
			RESTAREA(AAREA)
		ENDIF
	ENDIF
NEXT





IF SELF:LSAVEAREA .AND.  SELF:LCANSAVEAREA
	SELF:LSAVEAREA := .F. 

	IF EMPTY(SELF:CSVALIAS)
		SELF:CSVALIAS := SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_BRW"+CVALTOCHAR(SECONDS())
	ENDIF
	SELF:NSVRECNO := (SELF:CREALALIAS)->(RECNO())
	SELF:NSVORDER := (SELF:CREALALIAS)->(INDEXORD())


	DBCHANGEALIAS(SELF:CREALALIAS,SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN")
	DBCHANGEALIAS(SELF:CSVALIAS,SELF:CREALALIAS)

	DBSELECTAREA(SELF:CALIAS)
	DBSETORDER(SELF:NSVORDER)
	DBGOTO(SELF:NSVRECNO)
ENDIF

RETURN











FUNCTION ___FWBROWSE____SAVEAREA( )
LOCAL NORDER := 0
LOCAL NRECNO := 0
LOCAL AAREA  := {}
LOCAL ABRWRELATION := SELF:GETBRWRELATION()
LOCAL NX



FOR NX := 1 TO LEN(ABRWRELATION)
	IF ABRWRELATION[NX]:CLASSNAME() == "FWMARKBROWSE"
		IF !EMPTY(ABRWRELATION[NX]:OBROWSE:ALEFTJOIN)
			AAREA := GETAREA()
			ABRWRELATION[NX]:OBROWSE:SAVEAREA()
			RESTAREA(AAREA)
		ENDIF
	ELSE
		IF !EMPTY(ABRWRELATION[NX]:ALEFTJOIN)
			AAREA := GETAREA()
			ABRWRELATION[NX]:SAVEAREA()
			RESTAREA(AAREA)
		ENDIF
	ENDIF
NEXT





IF !SELF:LSAVEAREA .AND.  SELF:LCANSAVEAREA
	SELF:LSAVEAREA := .T. 
	NORDER := (SELF:CALIAS)->(INDEXORD())
	NRECNO := (SELF:CALIAS)->(RECNO())

	IF EMPTY(SELF:CSVALIAS)
		SELF:CSVALIAS := SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_BRW"+CVALTOCHAR(SECONDS())
	ENDIF

	SELF:NSVRECNO := (SELF:CREALALIAS)->(RECNO())
	SELF:NSVORDER := (SELF:CREALALIAS)->(INDEXORD())

	DBCHANGEALIAS(SELF:CREALALIAS,SELF:CSVALIAS)
	IF SELECT(SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN")>0
		DBCHANGEALIAS(SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN",SELF:CREALALIAS)
	ELSE
		CHKFILE(SELF:CREALALIAS,,,,,,, , , .T.  )
	ENDIF
	DBSELECTAREA(SELF:CREALALIAS)
	DBSETORDER(NORDER)
	DBGOTO(NRECNO)
ENDIF

RETURN












FUNCTION ___FWBROWSE____SAVECONFIG(OPANEL,LTITLE,CCAPTION )
LOCAL OPANEL1

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
	SELF:BCONFIGITEMCONFIRM := NIL
ENDIF
IF ISPLUGIN()
	OPANEL:READCLIENTCOORS()
ENDIF

OPANEL1 := TPANEL():NEW(20,0,,OPANEL,, .T. ,,,,OPANEL:NWIDTH,OPANEL:NHEIGHT, .F. , .F. )
OPANEL1:ALIGN := 5

IF !(LTITLE)
	CAPTION(OPANEL,CCAPTION)
ENDIF


 TSAY():NEW( 03, 05,{||  FWI18NLANG("FWBRWSTR","STR0068",68)},OPANEL1,,,.F.,.F.,.F.,.T.,,, 200, 10,.F.,.F.,.F.,.F.,.F.,.F. )

 TBUTTON():NEW( 15, 045, FWI18NLANG("FWBRWSTR","STR0065",65), OPANEL1,{||  (SELF:SAVE(),OPANEL1:HIDE())}, 15, 10,,,.F.,.T.,.F.,,.F.,,,.F. )
 TBUTTON():NEW( 15, 065, FWI18NLANG("FWBRWSTR","STR0066",66), OPANEL1,{||  OPANEL1:HIDE()}, 15, 10,,,.F.,.T.,.F.,,.F.,,,.F. )

RETURN













FUNCTION ___FWBROWSE____SAVE( )
LOCAL BDATA
LOCAL BHEADERCLICK
LOCAL BLDBLCLICK
LOCAL BVALID
LOCAL CALIGN      := ""
LOCAL CCOMMENT    := ""
LOCAL XPICTURE    := ""
LOCAL CREADVAR    := ""
LOCAL CTITLE      := ""
LOCAL CTYPE       := ""
LOCAL NI          := 0
LOCAL NDECIMAL    := 0
LOCAL NSIZE       := 0
LOCAL LEDIT       := .F. 
LOCAL LIMAGE      := .F. 
LOCAL AALIGN      := {}
LOCAL ACOMMENT    := {}
LOCAL ADEL        := {}
LOCAL AORDER      := {}
LOCAL APICTURE    := {}
LOCAL APROFILE    := {}
LOCAL ASIZE       := {}
LOCAL ATOTAL      := ACLONE(SELF:ATOTAL)
LOCAL AUSERCOLUMN := {}
LOCAL AORDERCOL   := {}
LOCAL CID

LOCAL OFWSEEK := SELF:GETSEEK()
LOCAL OFWLOCATE := SELF:OBROWSEUI:GETLOCATE()
LOCAL OFWFILTER := SELF:FWFILTER()



IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF


























































__FWPROFILE := IF( __FWPROFILE == NIL, FINDFUNCTION("__FWPROFILE"), __FWPROFILE ) ;

IF __FWPROFILE
	IF __LISP12
		AADD( APROFILE, SELF:OCONFIG:SERIALIZE(, .F. ) )
	ELSE






		AADD( APROFILE, { SELF:NHEADERCLICK, SELF:NDOUBLECLICK } )



		AADD( APROFILE, { SELF:CFONTBODY, SELF:NFONTBODY, SELF:LFONTBOLD, SELF:LFONTITALIC, SELF:LFONTUNDERLINE } )



		AADD( APROFILE, { SELF:NCLRALTERROW, SELF:LCLRALTERROW } )



		AADD( APROFILE, { SELF:NBACKCOLOR, SELF:NFORECOLOR } )



		AADD( APROFILE, SELF:NROWHEIGHT )



		IF VALTYPE(OFWSEEK)=="O"
			FOR NI := 1 TO LEN(OFWSEEK:ADEFAULTORDER)
				IF LEN(OFWSEEK:ADEFAULTORDER[NI]) > 3 .AND.  !OFWSEEK:ADEFAULTORDER[NI,4]
					AADD( AORDER, {OFWSEEK:ADEFAULTORDER[NI,1], OFWSEEK:ADEFAULTORDER[NI,4] } )
				ENDIF
			NEXT
		ENDIF
		AADD( APROFILE, { IIF(VALTYPE(OFWSEEK)=="O",OFWSEEK:VISIBLE(), .T. ), ACLONE(AORDER) } )



		AADD( APROFILE, IIF(VALTYPE(OFWLOCATE)=="O",OFWLOCATE:VISIBLE(), .T. ) )



		AADD( APROFILE, { IIF(VALTYPE(OFWFILTER)=="O",OFWFILTER:VISIBLE(), .T. ), SELF:OBLIGATEFILTER() } )




		FOR NI := 1 TO LEN(SELF:ACOLUMNS)
			CTITLE       := SELF:ACOLUMNS[NI]:GETTITLE()
			BDATA        := SELF:ACOLUMNS[NI]:GETDATA()
			IF VALTYPE(BDATA) == "B"
				BDATA := GETCBSOURCE(BDATA)
			ENDIF
			CTYPE        := SELF:ACOLUMNS[NI]:GETTYPE()
			XPICTURE     := SELF:ACOLUMNS[NI]:GETPICTURE( .F. )
			IF VALTYPE(XPICTURE) == "B"
				XPICTURE := GETCBSOURCE(XPICTURE)
			ENDIF
			CALIGN       := SELF:ACOLUMNS[NI]:GETALIGN()
			NSIZE        := SELF:ACOLUMNS[NI]:GETSIZE()
			NDECIMAL     := SELF:ACOLUMNS[NI]:GETDECIMAL()
			LEDIT        := SELF:ACOLUMNS[NI]:GETEDIT()
			BVALID       := SELF:ACOLUMNS[NI]:GETVALID()
			IF VALTYPE(BVALID) == "B"
				BVALID := GETCBSOURCE(BVALID)
			ENDIF
			LIMAGE       := SELF:ACOLUMNS[NI]:ISIMAGE()
			BLDBLCLICK   := SELF:ACOLUMNS[NI]:GETDOUBLECLICK()
			IF VALTYPE(BLDBLCLICK) == "B"
				BLDBLCLICK := GETCBSOURCE(BLDBLCLICK)
			ENDIF
			CREADVAR     := SELF:ACOLUMNS[NI]:READVAR()
			CID     := SELF:ACOLUMNS[NI]:GETID()
			BHEADERCLICK := SELF:ACOLUMNS[NI]:GETHEADERCLICK()
			IF VALTYPE(BHEADERCLICK) == "B"
				BHEADERCLICK := GETCBSOURCE(BHEADERCLICK)
			ENDIF
			CCOMMENT     := SELF:ACOLUMNS[NI]:GETCOMMENT()




			IF SELF:ACOLUMNS[NI]:USERCOLUMN()
				AADD( AUSERCOLUMN, { CTITLE, BDATA, CTYPE, XPICTURE, CALIGN, NSIZE, NDECIMAL, LEDIT, BVALID, LIMAGE, BLDBLCLICK, CREADVAR, BHEADERCLICK, CID } )
			ENDIF



			IF SELF:ACOLUMNS[NI]:DELETED()
				AADD( ADEL, { CREADVAR, SELF:ACOLUMNS[NI]:GETORDERDEFAULT() } )
			ELSE



				AADD( AORDERCOL, { SELF:ACOLUMNS[NI]:GETORDER(), SELF:ACOLUMNS[NI]:GETORDERDEFAULT() , CREADVAR } )
			ENDIF



			AADD( AALIGN, { CREADVAR, CALIGN } )



			AADD( APICTURE, { CREADVAR, XPICTURE } )



			AADD( ASIZE, { CREADVAR, NSIZE } )



			AADD( ACOMMENT, { CREADVAR, CCOMMENT } )
		NEXT




		AADD( APROFILE, AUSERCOLUMN )



		AADD( APROFILE, AORDERCOL )



		AADD( APROFILE, ADEL )



		AADD( APROFILE, AALIGN )



		AADD( APROFILE, APICTURE )



		AADD( APROFILE, ASIZE )



		AADD( APROFILE, ACOMMENT )



		IF VALTYPE(ATOTAL) == "A"
			AEVAL(ATOTAL, { |X| IIF(VALTYPE(X)=="A",( X[3]:=0, X[4]:= .T. ),) })
		ENDIF
		AADD( APROFILE, IIF(VALTYPE(ATOTAL) == "A" , TOTALTOARR(ATOTAL) , ATOTAL ) )



		AADD( APROFILE, SELF:ACLASSIFY )




		SELF:ABKPPROFILE := ASIZE( SELF:ABKPPROFILE , 0 )
		SELF:ABKPPROFILE := ACLONE(APROFILE)
		SELF:OBROWSEUI:GETGRID():COLORDER(SELF:ABKPBRWORDER)
	ENDIF



	SELF:SAVEONPROFILE(APROFILE)



	FOR NI := 1 TO LEN(SELF:ACUSTOMCONFIG)
		EVAL(SELF:ACUSTOMCONFIG[NI,3],SELF)
	NEXT




	SELF:ABKPPROFILE := ACLONE(APROFILE)
	SELF:OBROWSEUI:GETGRID():COLORDER(SELF:ABKPBRWORDER)
ENDIF

RETURN











FUNCTION ___FWBROWSE____SEEKACTION( )
LOCAL NPOS
LOCAL NOLDNAT   := SELF:NAT
LOCAL LSAVEAREA := SELF:LSAVEAREA
LOCAL OFWSEEK := SELF:GETSEEK()
LOCAL LMVCINUSE := SELF:OFWFORMGRID <> NIL





IF VALTYPE(OFWSEEK) == "O" .AND.  (!LMVCINUSE .OR.  SELF:OFWFORMGRID:TGRIDLINEOK())



	SELF:ODATA:REMOVEFILSEEK(SELF)



	IF SELF:LOGICLEN() > 0




		IF LSAVEAREA
			SELF:RESTOREAREA()
		ENDIF
		IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
			DBSELECTAREA(SELF:ALIAS())
		ENDIF



		OFWSEEK:SETRECNO(SELF:NAT)



		SELF:NAT := EVAL(SELF:ODATA:GETSEEKACTION(),OFWSEEK,SELF)

		IF SELF:DATAARRAY()
			IF SELF:NAT > SELF:LOGICLEN()
				SELF:NAT := 1
			ENDIF
		ENDIF



		IF (NPOS := ASCAN(SELF:AGROUP, { |X| X[1] < SELF:NAT .AND.  X[3] >= SELF:NAT .AND.  !X[2] } )) > 0
			SELF:GOTO(SELF:AGROUP[NPOS,1], .F. )
		ENDIF



		SELF:REFRESH(, .T. )



		IF NOLDNAT <> SELF:NAT
			SELF:ONCHANGE()
		ENDIF




		IF LSAVEAREA
			SELF:SAVEAREA()
		ENDIF
	ENDIF
ENDIF

RETURN












FUNCTION ___FWBROWSE____SEEKCONFIG(OPANEL )
LOCAL OSCROLL
LOCAL NCOL    := 5
LOCAL NLIN    := 5
LOCAL NI      := 0
LOCAL OFWSEEK := SELF:GETSEEK()
LOCAL LACTIVE := OFWSEEK:VISIBLE()
LOCAL AORDER  := {}

IF !(VALTYPE(OPANEL) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPANEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPANEL)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPANEL:FREECHILDREN()

 OVISIBLE := TPANEL():NEW( NLIN, 00,,OPANEL,,.F.,.F.,,, 13, 13,.F.,.F. )
OVISIBLE:ALIGN := 3

TCHECKBOX():NEW(NLIN,NCOL,FWI18NLANG("FWBRWSTR","STR0057",57),&("{ | U | IF( PCOUNT() == 0, LACTIVE, LACTIVE := U ) }"),OPANEL,100,10,, {|| },,,,, .F. , .T. ,, .F. , )




IF LEN(OFWSEEK:ADEFAULTORDER) > 0 .AND.  LEN(OFWSEEK:ADEFAULTORDER[1]) > 3
	 TSAY():NEW( NLIN+12, NCOL,{||  FWI18NLANG("FWBRWSTR","STR0076",76)},OPANEL,,,.F.,.F.,.F.,.T.,,,,,.F.,.F.,.F.,.F.,.F.,.F. )
	 OSCROLL := TSCROLLBOX():NEW(OPANEL, NLIN+20, 05, 150, 130,.T.,.T.,.F. )



	FOR NI := 1 TO LEN(OFWSEEK:ADEFAULTORDER)
		AADD(AORDER,OFWSEEK:ADEFAULTORDER[NI,4])
		TCHECKBOX():NEW(NLIN,NCOL,OFWSEEK:ADEFAULTORDER[NI,1],&("{ | U | IF( PCOUNT() == 0, AORDER[" + STR(NI) + "], AORDER[" + STR(NI) + "] := U ) }"),OSCROLL,100,10,, {|| },,,,, .F. , .T. ,, .F. , )
		NLIN+=10
	NEXT
ENDIF



SELF:BCONFIGITEMCONFIRM := { || IIF(LACTIVE,SELF:OBROWSEUI:SHOWSEEK(),SELF:OBROWSEUI:HIDESEEK()), FWCHGSEEK(AORDER,OFWSEEK) }

RETURN












FUNCTION ___FWBROWSE____SELECTROW(NPOSCURSOR )
IF !(VALTYPE(NPOSCURSOR) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NPOSCURSOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NPOSCURSOR)); ENDIF




IF !SELF:ODATA:ISEMPTY()
	SELF:OBROWSE:SETSELECTEDROW(NPOSCURSOR)
ENDIF

RETURN











FUNCTION ___FWBROWSE____SETAFTERADDLINE(BAFTERADDLINE )
IF !(VALTYPE(BAFTERADDLINE) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BAFTERADDLINE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BAFTERADDLINE)); ENDIF

SELF:BAFTERADDLINE := BAFTERADDLINE

RETURN











FUNCTION ___FWBROWSE____SETALIAS(CALIAS )
IF !(VALTYPE(CALIAS) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CALIAS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CALIAS)); ENDIF

SELF:CALIAS     := CALIAS
SELF:CREALALIAS := CALIAS




IF SELF:DATAQUERY() .OR.  SELF:DATATABLE()
	SELF:ODATA:SETALIAS(SELF:CALIAS)
ENDIF

RETURN












FUNCTION ___FWBROWSE____SETALIGNCOLUMNS(AALIGNCOLUMNS )
LOCAL NI

IF !(VALTYPE(AALIGNCOLUMNS) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AALIGNCOLUMNS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AALIGNCOLUMNS)); ENDIF

FOR NI := 1 TO LEN(AALIGNCOLUMNS)
	SELF:ACOLUMNS[NI]:SETALIGN(VAL(AALIGNCOLUMNS[NI]))
NEXT

RETURN











FUNCTION ___FWBROWSE____SETALLOK(BALLOK )
IF !(VALTYPE(BALLOK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BALLOK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BALLOK)); ENDIF

SELF:BALLOK := BALLOK

RETURN












FUNCTION ___FWBROWSE____SETAPPLYPARAMS(BAPPLYPARAMS )
IF !(VALTYPE(BAPPLYPARAMS) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BAPPLYPARAMS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BAPPLYPARAMS)); ENDIF

SELF:BAPPLYPARAMS := BAPPLYPARAMS

RETURN











FUNCTION ___FWBROWSE____SETARRAY(AARRAY )
IF !(VALTYPE(AARRAY) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AARRAY"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AARRAY)); ENDIF

IF SELF:DATAARRAY()
	SELF:ODATA:SETARRAY(AARRAY)
	SELF:BLOGICLEN := SELF:ODATA:BLOGICLEN
ENDIF

RETURN












FUNCTION ___FWBROWSE____SETBACKCOLOR(NBACKCOLOR )
IF !(VALTYPE(NBACKCOLOR) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NBACKCOLOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NBACKCOLOR)); ENDIF

SELF:NBACKCOLOR := NBACKCOLOR

RETURN












FUNCTION ___FWBROWSE____SETBREAKREPORT(ABREAKREPORT )
IF ABREAKREPORT <> NIL .AND.  !(VALTYPE(ABREAKREPORT) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ABREAKREPORT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ABREAKREPORT)); ENDIF; ABREAKREPORT := IF(ABREAKREPORT == NIL,{},ABREAKREPORT)

SELF:ABREAKREPORT := ABREAKREPORT

RETURN











FUNCTION ___FWBROWSE____SETCHANGE(BCHANGE )
IF !(VALTYPE(BCHANGE) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BCHANGE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BCHANGE)); ENDIF

SELF:BCHANGE := BCHANGE

RETURN










FUNCTION ___FWBROWSE____SETADDLINE(BADD )
SELF:BADD := BADD
RETURN










FUNCTION ___FWBROWSE____SETCANADDLINE(BCAN )
SELF:BCANADD := BCAN
RETURN














FUNCTION ___FWBROWSE____SETCLASSIFYCOLUMN(ACLASSIFY,ABREAKPRINT )
LOCAL OSELF      := SELF
LOCAL NI         := 0
LOCAL NCOLUMN    := 0
LOCAL CASORT     := ""
LOCAL CFOR       := ".T."
LOCAL CMACRO     := ""
LOCAL CNEWFILTER := ""
LOCAL CORDER     := ""
LOCAL CTITLE     := ""
LOCAL CTYPE      := ""
LOCAL ABREAK     := {}
LOCAL OFWSEEK    := SELF:GETSEEK()

IF !(VALTYPE(ACLASSIFY) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACLASSIFY"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ACLASSIFY)); ENDIF
IF !(VALTYPE(ABREAKPRINT) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ABREAKPRINT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ABREAKPRINT)); ENDIF




SELF:ACLASSIFY := {}
FOR NI := 1 TO LEN(ACLASSIFY)
	IF VALTYPE(ACLASSIFY[NI]) <> "U" .AND.  !EMPTY(ACLASSIFY[NI])
		NCOLUMN := ASCAN(SELF:ACOLUMNS, { |X| X:GETORDERDEFAULT() == VAL(ACLASSIFY[NI]) })



		IF !EMPTY(SELF:ACOLUMNS[NCOLUMN]:READVAR())
			CORDER += SELF:ACOLUMNS[NCOLUMN]:READVAR()+","
			CTITLE += SELF:ACOLUMNS[NCOLUMN]:GETTITLE()+" + "
			IF ABREAKPRINT[NI]
				AADD( ABREAK, { SELF:ACOLUMNS[NCOLUMN]:READVAR(), SELF:ACOLUMNS[NCOLUMN]:GETTITLE() } )
			ENDIF
		ENDIF



		IF SELF:DATAARRAY()
			CTYPE := SELF:ACOLUMNS[NCOLUMN]:GETTYPE()
			IF EMPTY(CTYPE)
				CTYPE := VALTYPE(EVAL(SELF:ACOLUMNS[NCOLUMN]:GETDATA()))
			ENDIF
			IF CTYPE == "N"
				CASORT += "STRZERO(X["+LTRIM(STR(NCOLUMN))+"],"+STR(SELF:ACOLUMNS[NCOLUMN]:GETSIZE())+")+"
			ELSE
				CASORT += "X["+LTRIM(STR(NCOLUMN))+"]+"
			ENDIF
		ENDIF
		AADD(SELF:ACLASSIFY, { VAL(ACLASSIFY[NI]), ABREAKPRINT[NI] } )
	ENDIF
NEXT




IF SELF:DATATABLE()
	DBSELECTAREA(SELF:CALIAS)
	CORDER := STRTRAN(STRTRAN(CORDER,'"',""),"'","")
	CORDER := SUBSTR(CORDER,1,LEN(CORDER)-1)

	IF !EMPTY(SELF:ACLASSIFY)
		DBSETORDER(0)
		IF EMPTY(INDEXKEY())
			CNEWFILTER := DBFILTER()
			IF !EMPTY(CNEWFILTER)
				CFOR += " .AND. ("+CNEWFILTER+")"
			ENDIF
		ENDIF

		DBCLEARFILTER()
		CMACRO := CFOR+" .AND. ORDERBY("+CORDER+")"
		IF ( EMPTY(CMACRO) );    DBCLEARFILTER(); ELSE;    DBSETFILTER({|| &CMACRO},CMACRO ); END



		SELF:UPDATETOPBOT()



		SELF:GOTOP( .T. )
	ENDIF
ELSEIF SELF:DATAARRAY()
	IF !EMPTY(CASORT)
		CASORT := SUBSTR(CASORT,1,LEN(CASORT)-1)
		EVAL(&("{ || ASORT(OSELF:ODATA:GETARRAY(),,,{|X,Y|"+ CASORT + " < " + STRTRAN(CASORT,"X","Y") + " }) }"))
	ENDIF
ENDIF




IF SELF:OPTIONREPORT()
	SELF:SETBREAKREPORT(ABREAK)
ENDIF

IF VALTYPE(OFWSEEK) == "O"



	IF !EMPTY(CORDER)
		OFWSEEK:SETORDER({{ "* "+SUBSTR(CTITLE,1,LEN(CTITLE)-3),{},0, .T.  }})
	ELSE



		OFWSEEK:SETORDER(SELF:ADEFORDERSEEK)
	ENDIF
ENDIF

RETURN












FUNCTION ___FWBROWSE____SETCLRALTERROW(NCLRALTERROW )
IF !(VALTYPE(NCLRALTERROW) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NCLRALTERROW"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NCLRALTERROW)); ENDIF

SELF:NCLRALTERROW := NCLRALTERROW

RETURN












FUNCTION ___FWBROWSE____SETCOMMENTCOLUMNS(ACOMMENT )
LOCAL NI
LOCAL NCOLUNA

IF !(VALTYPE(ACOMMENT) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACOMMENT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ACOMMENT)); ENDIF

IF VALTYPE(ACOMMENT[1]) == "A"
	FOR NI := 1 TO LEN(ACOMMENT)
		IF ! ( EMPTY( ACOMMENT[NI][1] ) )
			NCOLUNA := ASCAN( SELF:ACOLUMNS, {|OCOLUNA| ALLTRIM( OCOLUNA:GETID() ) == ALLTRIM( ACOMMENT[NI][1] ) } )
		ELSE
			NCOLUNA	:= NI
		ENDIF

		IF ! ( NCOLUNA == 0 )
			IF VALTYPE( ACOMMENT[NI][2] ) == "C"
				SELF:ACOLUMNS[NCOLUNA]:SETCOMMENT( ACOMMENT[NI][2] )
			ENDIF
		ENDIF
	NEXT
ELSE
	FOR NI := 1 TO LEN(SELF:ACOLUMNS)
		IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  VALTYPE(ACOMMENT[NI]) == "C"
			SELF:ACOLUMNS[NI]:SETCOMMENT(ACOMMENT[NI])
		ENDIF
	NEXT
ENDIF

RETURN











FUNCTION ___FWBROWSE____SETCOLOR( )
LOCAL ARGB       := {}
LOCAL CALTERROW  := ""
LOCAL CBACKCOLOR := ""
LOCAL CFORECOLOR := ""
LOCAL CHEADERCOLOR
LOCAL CTXTHEADERCOLOR
LOCAL CCSS

IF EMPTY(SELF:CSTYLE)



	ARGB := RGB2COLOR(SELF:NCLRALTERROW)
	CALTERROW := "#"+DECTOHEX(ARGB[1],2)+DECTOHEX(ARGB[2],2)+DECTOHEX(ARGB[3],2)



	ARGB := RGB2COLOR(SELF:NBACKCOLOR)
	CBACKCOLOR := "#"+DECTOHEX(ARGB[1],2)+DECTOHEX(ARGB[2],2)+DECTOHEX(ARGB[3],2)



	ARGB := RGB2COLOR(SELF:NFORECOLOR)
	CFORECOLOR := "#"+DECTOHEX(ARGB[1],2)+DECTOHEX(ARGB[2],2)+DECTOHEX(ARGB[3],2)




	IF !EMPTY(SELF:NHEADERCOLOR)
		ARGB := RGB2COLOR(SELF:NHEADERCOLOR)
		CHEADERCOLOR := "#"+DECTOHEX(ARGB[1],2)+DECTOHEX(ARGB[2],2)+DECTOHEX(ARGB[3],2)
	ENDIF




	IF !EMPTY(SELF:NTXTHEADERCOLOR)
		ARGB := RGB2COLOR(SELF:NTXTHEADERCOLOR)
		CTXTHEADERCOLOR := "#"+DECTOHEX(ARGB[1],2)+DECTOHEX(ARGB[2],2)+DECTOHEX(ARGB[3],2)
	ENDIF

	CCSS := FWGETCSS( GETCLASSNAME(SELF:OBROWSE), 057, CALTERROW, CBACKCOLOR, CFORECOLOR , CHEADERCOLOR , CTXTHEADERCOLOR)
ELSE
	CCSS := SELF:CSTYLE
ENDIF



SELF:OBROWSE:SETCSS(CCSS)

RETURN












FUNCTION ___FWBROWSE____SETCOLORCOLUMNS(ACOLORS )
LOCAL NI

FOR NI := 1 TO LEN(ACOLORS)
	SELF:ACOLUMNS[NI]:SETBACKCOLOR(ACOLORS[NI,1])
	SELF:ACOLUMNS[NI]:SETFORECOLOR(ACOLORS[NI,2])
NEXT

RETURN





























FUNCTION ___FWBROWSE____SETCOLUMNS(ACOLUMNS )
LOCAL OFWCOLUMN
LOCAL NI

IF !(VALTYPE(ACOLUMNS) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ACOLUMNS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ACOLUMNS)); ENDIF

FOR NI := 1 TO LEN(ACOLUMNS)
	IF VALTYPE(ACOLUMNS[NI]) == "O"
		OFWCOLUMN := ACOLUMNS[NI]
		AADD( SELF:ACOLUMNS, OFWCOLUMN )
	ELSE
		AADD( SELF:ACOLUMNS, OFWCOLUMN:= FWBRWCOLUMN():NEW() )
		OFWCOLUMN:SETTITLE(ACOLUMNS[NI,1])




		IF SELF:DATATABLE() .AND.  SELF:ODATA:TOPCONN() .AND.  !SELF:ODATA:ISAS400() .AND.  ("POSICIONE(" $ UPPER(GETCBSOURCE(ACOLUMNS[NI,2])) .OR.  "USRFULLNAME(" $ UPPER(GETCBSOURCE(ACOLUMNS[NI,2])) .OR.  "FWGETUSERNAME(" $ UPPER(GETCBSOURCE(ACOLUMNS[NI,2])))
			IF LEN(ACOLUMNS[NI]) > 11
				OFWCOLUMN:SETDATA(SELF:GETPOSICIONE(ACOLUMNS[NI,12],ACOLUMNS[NI,2]))
			ELSE
				OFWCOLUMN:SETDATA(SELF:GETPOSICIONE("",ACOLUMNS[NI,2]))
			ENDIF
		ELSE



			IF VALTYPE(ACOLUMNS[NI,2]) <> "B"
				ACOLUMNS[NI,2] := { || }
			ENDIF
			OFWCOLUMN:SETDATA(ACOLUMNS[NI,2])
		ENDIF

		IF LEN(ACOLUMNS[NI]) > 2 .AND.  VALTYPE(ACOLUMNS[NI,3]) <> "U"
			OFWCOLUMN:SETTYPE(ACOLUMNS[NI,3])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 3 .AND.  VALTYPE(ACOLUMNS[NI,4]) <> "U"
			OFWCOLUMN:SETPICTURE(ACOLUMNS[NI,4])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 4 .AND.  VALTYPE(ACOLUMNS[NI,5]) <> "U"
			OFWCOLUMN:SETALIGN(ACOLUMNS[NI,5])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 5 .AND.  VALTYPE(ACOLUMNS[NI,6]) == "N"
			OFWCOLUMN:SETSIZE(ACOLUMNS[NI,6])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 6 .AND.  VALTYPE(ACOLUMNS[NI,7]) == "N"
			OFWCOLUMN:SETDECIMAL(ACOLUMNS[NI,7])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 7
			OFWCOLUMN:SETEDIT(ACOLUMNS[NI,8])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 8
			OFWCOLUMN:SETVALID(ACOLUMNS[NI,9])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 9
			OFWCOLUMN:SETIMAGE(ACOLUMNS[NI,10])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 10
			OFWCOLUMN:SETDOUBLECLICK(ACOLUMNS[NI,11])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 11
			OFWCOLUMN:SETREADVAR(ACOLUMNS[NI,12])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 12
			OFWCOLUMN:SETHEADERCLICK(ACOLUMNS[NI,13])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 13
			IF VALTYPE(ACOLUMNS[NI,14]) == "L"
				OFWCOLUMN:SETDELETE(ACOLUMNS[NI,14])
			ENDIF
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 14
			OFWCOLUMN:SETDETAILS(ACOLUMNS[NI,15])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 15
			OFWCOLUMN:SETOPTIONS(ACOLUMNS[NI,16])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 16
			OFWCOLUMN:SETID(ACOLUMNS[NI,17])
		ENDIF
		IF LEN(ACOLUMNS[NI]) > 17
			OFWCOLUMN:SETVIRTUAL(ACOLUMNS[NI,18])
		ENDIF
	ENDIF
	OFWCOLUMN:SETORDER(LEN(SELF:ACOLUMNS))
	OFWCOLUMN:SETORDERDEFAULT(LEN(SELF:ACOLUMNS))



	AADD( SELF:ADEFAULTCOLUMNS, OFWCOLUMN )
NEXT

RETURN












FUNCTION ___FWBROWSE____SETDBFFILTER(LDBFFILTER )
IF LDBFFILTER <> NIL .AND.  !(VALTYPE(LDBFFILTER) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LDBFFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LDBFFILTER)); ENDIF; LDBFFILTER := IF(LDBFFILTER == NIL, .T. ,LDBFFILTER)

SELF:LDBFFILTER := LDBFFILTER

RETURN











FUNCTION ___FWBROWSE____SETDESCRIPTION(CDESCRIPTION )
IF !(VALTYPE(CDESCRIPTION) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CDESCRIPTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CDESCRIPTION)); ENDIF

SELF:CDESCRIPTION := CDESCRIPTION
SELF:OBROWSEUI:CDESCRIPTION := CDESCRIPTION

RETURN











FUNCTION ___FWBROWSE____SETNUMBERLEGEND(LNUMBER )
IF LNUMBER <> NIL .AND.  !(VALTYPE(LNUMBER) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LNUMBER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LNUMBER)); ENDIF; LNUMBER := IF(LNUMBER == NIL, .T. ,LNUMBER)

SELF:LNUMBERLEGEND := LNUMBER

RETURN












FUNCTION ___FWBROWSE____SETOBLIGATEFILTER(LOBLIGATEFILTER,LCANCANCEL )
IF LOBLIGATEFILTER <> NIL .AND.  !(VALTYPE(LOBLIGATEFILTER) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LOBLIGATEFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LOBLIGATEFILTER)); ENDIF; LOBLIGATEFILTER := IF(LOBLIGATEFILTER == NIL, .T. ,LOBLIGATEFILTER)
IF LCANCANCEL <> NIL .AND.  !(VALTYPE(LCANCANCEL) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LCANCANCEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LCANCANCEL)); ENDIF; LCANCANCEL := IF(LCANCANCEL == NIL, .F. ,LCANCANCEL)

SELF:LOBLIGATEFILTER  := LOBLIGATEFILTER
SELF:LCANCANCELFILTER := LCANCANCEL

RETURN











FUNCTION ___FWBROWSE____SETOWNER(OOWNER )
LOCAL OSELF := SELF

IF OOWNER <> NIL .AND.  !(VALTYPE(OOWNER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OOWNER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OOWNER)); ENDIF

SELF:OOWNER := OOWNER



IF VALTYPE(SELF:OOWNER) == "O" .AND.  VALTYPE(SELF:OBACKPANEL) <> "O"
	 SELF:OBACKPANEL := TPANEL():NEW( -1000, -1000,,SELF:OOWNER,,.F.,.F.,,, 1, 1,.F.,.F. )
	SELF:OBACKPANEL:BEND := { || OSELF:DEACTIVATE(), OSELF:DESTROY() }
ENDIF

RETURN










FUNCTION ___FWBROWSE____SETDATAARRAY( )
SELF:LDATAARRAY := .T. 
SELF:ODATA := FWBRWARRAY():NEW()

RETURN









FUNCTION ___FWBROWSE____SETDATAMODEL( )
SELF:LMODELDATA := .T. 
SELF:LDATAARRAY := .T. 
SELF:ODATA := FWBRWMODELDATA():NEW()
RETURN











FUNCTION ___FWBROWSE____SETDATAQUERY( )

SELF:LDATATABLE := .F. 
SELF:LDATAQUERY := .T. 
SELF:ODATA := FWBRWQUERY():NEW()

RETURN










FUNCTION ___FWBROWSE____SETDATATABLE( )

SELF:LDATATABLE := .T. 
SELF:ODATA := FWBRWTABLE():NEW()

RETURN










FUNCTION ___FWBROWSE____SETDATATEXT( )

SELF:LDATATEXT := .T. 
SELF:ODATA := FWBRWTEXT():NEW()

RETURN











FUNCTION ___FWBROWSE____SETBLKCOLOR(BBLKCOLOR )
IF !(VALTYPE(BBLKCOLOR) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BBLKCOLOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BBLKCOLOR)); ENDIF

SELF:BBLKCOLOR    := BBLKCOLOR
SELF:LCUSTOMCOLOR := .T. 

RETURN











FUNCTION ___FWBROWSE____SETBLKBACKCOLOR(BBACKCOLOR )
IF !(VALTYPE(BBACKCOLOR) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BBACKCOLOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BBACKCOLOR)); ENDIF

SELF:BBLKBACKCOLOR := BBACKCOLOR
SELF:LCUSTOMCOLOR  := .T. 

RETURN












FUNCTION ___FWBROWSE____SETDELCOLUMN(ADELCOLUMNS )
LOCAL NI

IF !(VALTYPE(ADELCOLUMNS) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ADELCOLUMNS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ADELCOLUMNS)); ENDIF

FOR NI := 1 TO LEN(ADELCOLUMNS)
	IF ADELCOLUMNS[NI]
		SELF:DELCOLUMN(NI)
	ENDIF
NEXT


RETURN












FUNCTION ___FWBROWSE____SETDELETE(LDELETE,BDELETE )
IF LDELETE <> NIL .AND.  !(VALTYPE(LDELETE) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LDELETE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LDELETE)); ENDIF; LDELETE := IF(LDELETE == NIL, .T. ,LDELETE)
IF BDELETE <> NIL .AND.  !(VALTYPE(BDELETE) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BDELETE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BDELETE)); ENDIF

IF SELF:DATATABLE() .OR.  SELF:DATAARRAY()
	SELF:LDELETE := LDELETE
	SELF:BDELETE := BDELETE
ELSE
	SELF:LDELETE := .F. 
ENDIF

RETURN











FUNCTION ___FWBROWSE____SETDELOK(BDELOK )
IF !(VALTYPE(BDELOK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BDELOK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BDELOK)); ENDIF

SELF:BDELOK := BDELOK

RETURN











FUNCTION ___FWBROWSE____SETDOUBLECLICK(BLDBLCLICK )

SELF:BLDBLCLICK := BLDBLCLICK

RETURN












FUNCTION ___FWBROWSE____SETEDITCELL(LEDITCELL,BVALIDEDIT )
IF LEDITCELL <> NIL .AND.  !(VALTYPE(LEDITCELL) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LEDITCELL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LEDITCELL)); ENDIF; LEDITCELL := IF(LEDITCELL == NIL, .T. ,LEDITCELL)
IF BVALIDEDIT <> NIL .AND.  !(VALTYPE(BVALIDEDIT) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BVALIDEDIT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BVALIDEDIT)); ENDIF

IF SELF:DATATABLE() .OR.  SELF:DATAARRAY()
	SELF:LEDITCELL  := LEDITCELL
	SELF:BVALIDEDIT := BVALIDEDIT
ENDIF

RETURN

















FUNCTION ___FWBROWSE____SETFIELDFILTER(AFIELDS )
IF !(VALTYPE(AFIELDS) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AFIELDS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AFIELDS)); ENDIF

SELF:ODATA:SETFIELDFILTER(AFIELDS)

RETURN












FUNCTION ___FWBROWSE____SETFILE(CFILE,CCHARSEPARATOR )
IF !(VALTYPE(CFILE) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CFILE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CFILE)); ENDIF
IF CCHARSEPARATOR <> NIL .AND.  !(VALTYPE(CCHARSEPARATOR) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CCHARSEPARATOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CCHARSEPARATOR)); ENDIF; CCHARSEPARATOR := IF(CCHARSEPARATOR == NIL,";",CCHARSEPARATOR)

IF SELF:DATATEXT()
	SELF:ODATA:SETFILE(CFILE,CCHARSEPARATOR)
ENDIF

RETURN














FUNCTION ___FWBROWSE____SETFILTER(CCPOFIL,CTOPFUN,CBOTFUN,LDOFILTER )
LOCAL CFILTER := ""
LOCAL NPOS

IF !(VALTYPE(CCPOFIL) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CCPOFIL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CCPOFIL)); ENDIF
IF !(VALTYPE(CTOPFUN) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CTOPFUN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CTOPFUN)); ENDIF
IF !(VALTYPE(CBOTFUN) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CBOTFUN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CBOTFUN)); ENDIF
IF LDOFILTER <> NIL .AND.  !(VALTYPE(LDOFILTER) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"3"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LDOFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LDOFILTER)); ENDIF; LDOFILTER := IF(LDOFILTER == NIL, .T. ,LDOFILTER)

IF SELF:DATATABLE()
	SELF:ODATA:SETFILTER(CCPOFIL,CTOPFUN,CBOTFUN,LDOFILTER)
	IF LDOFILTER
		SELF:REFRESH( .T. )
		SELF:LSETFILTER := .T. 
		IF !SELF:ODATA:TOPCONN()
		SELF:ONCHANGE()
		ENDIF
	ENDIF
ELSE
	IF (NPOS := AT(">",CCPOFIL)) > 0
		CCPOFIL := SUBSTR(CCPOFIL,NPOS+1)
	ENDIF

	CFILTER := "( " + CCPOFIL + ' >= "' + CTOPFUN +'" .AND. ' + CCPOFIL + ' <= "'+ CBOTFUN + '" )'

	SELF:ODATA:EXECUTEFILTER(CFILTER,3)
ENDIF

RETURN















FUNCTION ___FWBROWSE____SETFILTERDEFAULT(CFILTERDEFAULT,LREPLACEORIGINALFILTER,LFILTERASK )
LOCAL NX := 0
LOCAL LSAVEAREA := SELF:LSAVEAREA
LOCAL OFWFILTER := SELF:FWFILTER()

IF CFILTERDEFAULT <> NIL .AND.  !(VALTYPE(CFILTERDEFAULT) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CFILTERDEFAULT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CFILTERDEFAULT)); ENDIF; CFILTERDEFAULT := IF(CFILTERDEFAULT == NIL," ",CFILTERDEFAULT)
IF LREPLACEORIGINALFILTER <> NIL .AND.  !(VALTYPE(LREPLACEORIGINALFILTER) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LREPLACEORIGINALFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LREPLACEORIGINALFILTER)); ENDIF; LREPLACEORIGINALFILTER := IF(LREPLACEORIGINALFILTER == NIL, .T. ,LREPLACEORIGINALFILTER)
IF LFILTERASK <> NIL .AND.  !(VALTYPE(LFILTERASK) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LFILTERASK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LFILTERASK)); ENDIF; LFILTERASK := IF(LFILTERASK == NIL, .T. ,LFILTERASK)

SELF:CFILTERDEFAULT 		:= CFILTERDEFAULT

IF( LREPLACEORIGINALFILTER )
	SELF:CORIGINALFILTER 	:= SELF:CFILTERDEFAULT
ENDIF




IF VALTYPE(OFWFILTER) == "O"




	IF LSAVEAREA
		SELF:RESTOREAREA()
	ENDIF
	NX := ASCAN(OFWFILTER:AFILTER, { |X| X[1] == FWI18NLANG("FWBRWSTR","STR0010",10) } )
	IF NX == 0
		IF SELF:LACTIVATE
			OFWFILTER:ADDLEVEL(FWI18NLANG("FWBRWSTR","STR0010",10),SELF:CFILTERDEFAULT,"",, .T. ,, .T. )
		ENDIF
	ELSE
		OFWFILTER:AFILTER[NX][2] := SELF:CFILTERDEFAULT




		IF SELF:DATATABLE()
			SELF:ODATA:CFILTERDEFAULT := SELF:CFILTERDEFAULT
		ENDIF
	ENDIF
	SELF:ODATA:CLEANFILTER(4,, .T. )
	IF SELF:LACTIVATE
		SELF:ODATA:EXECUTEFILTER(SELF:CFILTERDEFAULT,4)
		SELF:EXECUTEFILTER(,LFILTERASK)
	ENDIF




	IF LSAVEAREA
		SELF:SAVEAREA()
	ENDIF
ENDIF

RETURN










FUNCTION ___FWBROWSE____GETFILTERDEFAULT( )
RETURN(SELF:CFILTERDEFAULT)










FUNCTION ___FWBROWSE____GETORIGINALFILTER( )
RETURN(SELF:CORIGINALFILTER)













FUNCTION ___FWBROWSE____SETCOLUMNORDER(NCOLUMN,NNEWORDER )
LOCAL NI         := 0
LOCAL NPOSCOL    := 0
LOCAL NPOSNEWCOL := 0

IF !(VALTYPE(NCOLUMN) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NCOLUMN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NCOLUMN)); ENDIF
IF !(VALTYPE(NNEWORDER) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NNEWORDER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NNEWORDER)); ENDIF

IF ( NPOSCOL := ASCAN(SELF:ACOLUMNS, { |X| X:GETORDERDEFAULT() == NCOLUMN } )) > 0
	IF ( NPOSNEWCOL := ASCAN(SELF:ACOLUMNS, { |X| X:GETORDER() == NNEWORDER } )) > 0
		SELF:ACOLUMNS[NPOSCOL]:SETORDER(NNEWORDER)
		SELF:ACOLUMNS[NPOSNEWCOL]:SETORDER(NNEWORDER+1)
		FOR NI := NPOSNEWCOL+1 TO LEN(SELF:ACOLUMNS)
			IF NI <> NPOSCOL
				SELF:ACOLUMNS[NI]:SETORDER(SELF:ACOLUMNS[NI]:GETORDER()+1)
			ENDIF
		NEXT



		ASORT(SELF:ACOLUMNS,,,{|X,Y| X:GETORDER() < Y:GETORDER() })
	ENDIF
ENDIF

RETURN










FUNCTION ___FWBROWSE____SETFOCUS( )
LOCAL NCOLUMN := 1
LOCAL NCOL := 1
LOCAL NI

IF VALTYPE(SELF:OBROWSE) == "O"
	SELF:OBROWSE:SETFOCUS( .T. )
	IF !EMPTY(SELF:ALEGENDS) .AND.  ASCAN(SELF:ALEGENDS, {|X| X[3] == 1}) > 0
		NCOL := 2
		NCOLUMN := 2
	ENDIF

	FOR NI := NCOL TO LEN(SELF:ACOLUMNS)
		IF SELF:ACOLUMNS[NI]:LIMAGE
			NCOLUMN++
			EXIT
		ELSE
			EXIT
		ENDIF
	NEXT
	SELF:GOCOLUMN(NCOLUMN)
ENDIF

RETURN











FUNCTION ___FWBROWSE____SETFONTBROWSE(OFONT )
IF OFONT <> NIL .AND.  !(VALTYPE(OFONT) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OFONT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OFONT)); ENDIF

SELF:OFONT := OFONT

IF VALTYPE(SELF:OBROWSE) == "O"
	SELF:OBROWSE:OFONT := OFONT
ENDIF

RETURN












FUNCTION ___FWBROWSE____SETFONTCOLUMNS(AFONT )
IF !(VALTYPE(AFONT) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AFONT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AFONT)); ENDIF

RETURN












FUNCTION ___FWBROWSE____SETFORECOLOR(NFORECOLOR )
IF !(VALTYPE(NFORECOLOR) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NFORECOLOR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NFORECOLOR)); ENDIF

SELF:NFORECOLOR := NFORECOLOR

RETURN












FUNCTION ___FWBROWSE____SETFWFORMGRID(OFWFORMGRID )
IF !(VALTYPE(OFWFORMGRID) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OFWFORMGRID"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OFWFORMGRID)); ENDIF
SELF:OFWFORMGRID := OFWFORMGRID
RETURN












FUNCTION ___FWBROWSE____SETGROUP(BGROUP,LOPEN )
LOCAL OFWCOLUMN
LOCAL BDATA      := { || SELF:BDATAGROUP() }
LOCAL BLDBLCLICK := { || SELF:EXECUTEGROUP() }

IF !(VALTYPE(BGROUP) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BGROUP"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BGROUP)); ENDIF
IF LOPEN <> NIL .AND.  !(VALTYPE(LOPEN) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LOPEN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LOPEN)); ENDIF; LOPEN := IF(LOPEN == NIL, .F. ,LOPEN)




SELF:BGROUP := BGROUP
SELF:LOPENGROUP := LOPEN




AADD( SELF:ACOLUMNS, OFWCOLUMN:= FWBRWCOLUMN():NEW() )
OFWCOLUMN:SETTITLE("")
OFWCOLUMN:SETDATA(BDATA)
OFWCOLUMN:SETTYPE("C")
OFWCOLUMN:SETDOUBLECLICK(BLDBLCLICK)
OFWCOLUMN:SETALIGN("CENTER")
OFWCOLUMN:SETSIZE(3)
OFWCOLUMN:SETDECIMAL(0)
OFWCOLUMN:SETIMAGE( .T. )
OFWCOLUMN:SETDETAILS( .F. )
OFWCOLUMN:SETORDER(LEN(SELF:ACOLUMNS))
OFWCOLUMN:SETORDERDEFAULT(LEN(SELF:ACOLUMNS))

RETURN












FUNCTION ___FWBROWSE____SETHEADERIMAGE(NCOLUMN,CRESOURCE )

SELF:OBROWSE:SETHEADERIMAGE(NCOLUMN,CRESOURCE)

RETURN











FUNCTION ___FWBROWSE____SETINSERT(LINSERT )
IF LINSERT <> NIL .AND.  !(VALTYPE(LINSERT) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LINSERT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LINSERT)); ENDIF; LINSERT := IF(LINSERT == NIL, .T. ,LINSERT)

IF SELF:DATATABLE() .OR.  SELF:DATAARRAY()
	SELF:LINSERT := LINSERT
ELSE
	SELF:LINSERT := .F. 
ENDIF

RETURN













FUNCTION ___FWBROWSE____SETITEMDOUBLECLICK(AITEMDOUBLECLICK )
LOCAL NI

IF !(VALTYPE(AITEMDOUBLECLICK) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AITEMDOUBLECLICK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AITEMDOUBLECLICK)); ENDIF

FOR NI := 1 TO LEN(AITEMDOUBLECLICK)
	SELF:ADDITEMDOUBLECLICK(AITEMDOUBLECLICK[NI])
NEXT

RETURN













FUNCTION ___FWBROWSE____SETITEMHEADERCLICK(AITEMHEADERCLICK )
LOCAL NI

IF !(VALTYPE(AITEMHEADERCLICK) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AITEMHEADERCLICK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AITEMHEADERCLICK)); ENDIF

FOR NI := 1 TO LEN(AITEMHEADERCLICK)
	SELF:ADDITEMHEADERCLICK(AITEMHEADERCLICK[NI])
NEXT

RETURN











FUNCTION ___FWBROWSE____SETLINEBEGIN(NLINEBEGIN )
IF !(VALTYPE(NLINEBEGIN) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NLINEBEGIN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NLINEBEGIN)); ENDIF

IF SELF:DATATEXT()
	SELF:ODATA:SETLINEBEGIN(NLINEBEGIN)
ENDIF

RETURN











FUNCTION ___FWBROWSE____SETLINEHEIGHT(NHEIGHT )
LOCAL NDECIMAL := 0
LOCAL OOWNER   := SELF:GETOWNER()
LOCAL NADJUST  := 0

IF NHEIGHT <> NIL .AND.  !(VALTYPE(NHEIGHT) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NHEIGHT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NHEIGHT)); ENDIF; NHEIGHT := IF(NHEIGHT == NIL,20,NHEIGHT)

IF SELF:NROWHEIGHT <> NHEIGHT

	IF SELF:LADJUST
		IF SELF:LHIDEBUTTONS
			NADJUST := 65
		ELSE
			NADJUST := SELF:OBROWSEUI:NHEIGHTHEADERTGRID / 2
		ENDIF
	ENDIF




	SELF:NVISIBLEROWS  := INT(( OOWNER:NHEIGHT-NADJUST)/SELF:NROWHEIGHT)
	NDECIMAL := (OOWNER:NHEIGHT-NADJUST)/SELF:NROWHEIGHT
	IF SELF:NVISIBLEROWS < 1
		SELF:NVISIBLEROWS := INT((OMAINWND:NHEIGHT-NADJUST)/SELF:NROWHEIGHT)
		NDECIMAL := (OMAINWND:NHEIGHT-NADJUST)/SELF:NROWHEIGHT
	ENDIF
	NDECIMAL := NDECIMAL - SELF:NVISIBLEROWS
	IF NDECIMAL > 0 .AND.  NDECIMAL < 0.5
		SELF:NVISIBLEROWS := SELF:NVISIBLEROWS - 1
	ENDIF
	SELF:NPOSSIBLEROWS := SELF:NVISIBLEROWS
	IF !("DIALOG" $ OOWNER:CLASSNAME() .OR.  "WINDOW" $ OOWNER:CLASSNAME())
		IF SELF:LADJUST
			NADJUST := SELF:OBROWSEUI:NHEIGHTHEADERTGRID / 2
		ENDIF
		SELF:NPOSSIBLEROWS := INT((OOWNER:OWND:NHEIGHT-NADJUST)/SELF:NROWHEIGHT)
	ENDIF
ENDIF

SELF:NROWHEIGHT := NHEIGHT



IF VALTYPE(SELF:OBROWSE) == "O"
	IF FWISTOUCH()
	 	NHEIGHT += 25
	ENDIF
	SELF:OBROWSE:SETROWHEIGHT(NHEIGHT)
ENDIF

RETURN











FUNCTION ___FWBROWSE____SETLINEOK(BLINEOK )
IF !(VALTYPE(BLINEOK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BLINEOK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BLINEOK)); ENDIF

SELF:BLINEOK := BLINEOK

RETURN











FUNCTION ___FWBROWSE____SETLOCATE(BACTION )
LOCAL BLOCATEACTION := { || SELF:LOCATEACTION() }

IF BACTION <> NIL .AND.  !(VALTYPE(BACTION) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BACTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BACTION)); ENDIF




SELF:ODATA:SETLOCATEACTION(BACTION)

SELF:OBROWSEUI:SETUSELOCATE( .T. )

RETURN












FUNCTION ___FWBROWSE____INITLOCATE(OFWLOCATE )
LOCAL BLOCATEACTION := { || SELF:LOCATEACTION() }

IF OFWLOCATE <> NIL
	OFWLOCATE:SETACTION(BLOCATEACTION)
	OFWLOCATE:SETFINISH({ || SELF:SETFOCUS() })
ENDIF

RETURN












FUNCTION ___FWBROWSE____SETMAPFIELD(AMAPFIELD )
IF AMAPFIELD <> NIL .AND.  !(VALTYPE(AMAPFIELD) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AMAPFIELD"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AMAPFIELD)); ENDIF; AMAPFIELD := IF(AMAPFIELD == NIL,{},AMAPFIELD)

SELF:AMAPFIELD := AMAPFIELD

RETURN













FUNCTION ___FWBROWSE____SETOBJMARK(OOBJMARK )
IF !(VALTYPE(OOBJMARK) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OOBJMARK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OOBJMARK)); ENDIF

SELF:OMARK := OOBJMARK

RETURN
















FUNCTION ___FWBROWSE____SETORDERCOLUMNS(AORDER )
LOCAL NI
LOCAL NY
LOCAL NITEM := 0
LOCAL NPOS	:= 0

IF AORDER <> NIL .AND.  !(VALTYPE(AORDER) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AORDER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AORDER)); ENDIF; AORDER := IF(AORDER == NIL,{},AORDER)






IF !EMPTY(AORDER) .AND.  LEN(AORDER[1]) > 2 .AND.  VALTYPE(AORDER[1][3])=="C"

	FOR NI := 1 TO LEN (SELF:ACOLUMNS)

		IF ASCAN(AORDER, {|X| SELF:ACOLUMNS[NI]:CREADVAR == X[3] }) == 0
			IF EMPTY(SELF:ACOLUMNS[NI]:CTITLE) .AND.  VALTYPE(SELF:ACOLUMNS[NI]:CREADVAR) == "U"
				FOR NY := 1 TO LEN( AORDER )
					AORDER[NY][2]++
				NEXT
				AADD(AORDER,{0,SELF:ACOLUMNS[NI]:NORDERDEFAULT,SELF:ACOLUMNS[NI]:CREADVAR})
			ELSE
				AADD(AORDER,{LEN(AORDER)+1,SELF:ACOLUMNS[NI]:NORDERDEFAULT,SELF:ACOLUMNS[NI]:CREADVAR})
			ENDIF
		ENDIF

	NEXT

ENDIF



ASORT(AORDER,,,{|X,Y| X[2] < Y[2] })





FOR NI := 1 TO LEN(SELF:ACOLUMNS)
	IF !SELF:ACOLUMNS[NI]:DELETED() .OR.  __LISP12
		NITEM++
		IF !EMPTY(AORDER) .AND.  NITEM <= LEN(AORDER) .AND.  (NPOS := ASCAN(AORDER, {|X| X[2] == SELF:ACOLUMNS[NI]:NORDERDEFAULT })) > 0
			SELF:ACOLUMNS[NI]:SETORDER(AORDER[NPOS,1])
		ELSE
			SELF:ACOLUMNS[NI]:SETORDER(NITEM)
		ENDIF
	ENDIF
 NEXT




ASORT(SELF:ACOLUMNS,,,{ |X,Y| X:GETORDER() < Y:GETORDER() })

RETURN














FUNCTION ___FWBROWSE____SETPREEDITCELL(BBLOCK )
IF !(VALTYPE(BBLOCK) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BBLOCK"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BBLOCK)); ENDIF
SELF:BPREEDITCELL := BBLOCK
RETURN














FUNCTION ___FWBROWSE____SETPICTURECOLUMNS(APICTURE )
LOCAL NI
LOCAL XPICTURE

IF !(VALTYPE(APICTURE) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"APICTURE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(APICTURE)); ENDIF

FOR NI := 1 TO LEN(APICTURE)



	IF AT("{",APICTURE[NI]) > 0
		XPICTURE := &(APICTURE[NI])
		IF VALTYPE(XPICTURE) <> "B"
			XPICTURE := ""
		ENDIF
	ELSE
		XPICTURE := APICTURE[NI]
	ENDIF
	SELF:ACOLUMNS[NI]:SETPICTURE(XPICTURE)
NEXT

RETURN












FUNCTION ___FWBROWSE____SETQUERY(CQUERY,LUPDFIELDS )
	IF !(VALTYPE(CQUERY) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CQUERY"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CQUERY)); ENDIF
	IF LUPDFIELDS <> NIL .AND.  !(VALTYPE(LUPDFIELDS) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LUPDFIELDS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LUPDFIELDS)); ENDIF; LUPDFIELDS := IF(LUPDFIELDS == NIL, .F. ,LUPDFIELDS)

	IF ( SELF:DATAQUERY() )

		SELF:ODATA:SETQUERY( CQUERY, LUPDFIELDS )
	ENDIF
RETURN











FUNCTION ___FWBROWSE____GETQUERY( )

IF SELF:DATAQUERY()
	RETURN(SELF:ODATA:GETQUERY())
ELSE
	RETURN("")
ENDIF















FUNCTION ___FWBROWSE____SETQUERYINDEX(AINDEX )
IF !(VALTYPE(AINDEX) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AINDEX"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AINDEX)); ENDIF

IF SELF:DATAQUERY()
	SELF:ODATA:SETINDEX(AINDEX)
ENDIF

RETURN













FUNCTION ___FWBROWSE____SETRECUPARATECOLUMN(ARECCOLUMNS )
LOCAL NI

IF !(VALTYPE(ARECCOLUMNS) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"ARECCOLUMNS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(ARECCOLUMNS)); ENDIF

FOR NI := 1 TO LEN(ARECCOLUMNS)
	IF ARECCOLUMNS[NI]
		SELF:RECOVERYCOLUMN(NI)
	ENDIF
NEXT

RETURN






















FUNCTION ___FWBROWSE____SETSEEK(BACTION,AORDER )
LOCAL NI 		:= 1
LOCAL NX		:= 0

IF BACTION <> NIL .AND.  !(VALTYPE(BACTION) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BACTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BACTION)); ENDIF
IF AORDER <> NIL .AND.  !(VALTYPE(AORDER) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AORDER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AORDER)); ENDIF; AORDER := IF(AORDER == NIL,{},AORDER)

	SELF:BSACTION := BACTION



	IF SELF:DATATEXT()
		AORDER := {}
	ELSEIF SELF:DATATABLE()



		IF EMPTY(AORDER)
			WHILE !EMPTY((SELF:CALIAS)->(INDEXKEY(NI)))
				AADD( AORDER, { (SELF:CALIAS)->(INDEXKEY(NI)), {} } )
				NI++
			ENDDO
		ELSE
			FOR NI := 1 TO LEN(AORDER)
				FOR NX := 1 TO LEN(AORDER[NI][02])
					IF LEN(AORDER[NI][02][NX]) < 07
						AORDER[NI][02][NX] := ASIZE( AORDER[NI][02][NX] , 7)

					ELSE
						EXIT
					ENDIF
				NEXT
			NEXT
		ENDIF
	ENDIF

	SELF:ADEFORDERSEEK := ACLONE(AORDER)




	IF EMPTY(AORDER)
		SELF:OBROWSEUI:SETUSESEEK( .F. )
	ELSE
		SELF:ASORDER := AORDER
		SELF:OBROWSEUI:SETUSESEEK( .T. )
	ENDIF
RETURN












FUNCTION ___FWBROWSE____INITSEEK(OFWSEEK )
LOCAL BSEEKACTION := { || SELF:SEEKACTION(), SELF:SETFOCUS() }
LOCAL BACTION	:= SELF:BSACTION
LOCAL BCHANGE
LOCAL AORDER 	:= SELF:ASORDER
LOCAL AINDFIELDS:= {}
LOCAL AFIELDS	:= {}
LOCAL CFIELD
LOCAL NI
LOCAL NX
LOCAL CINDEXKEY




	IF !EMPTY(AORDER) .AND.  OFWSEEK <> NIL
		OFWSEEK:SETALIAS(SELF:CALIAS)
		OFWSEEK:SETORDER(AORDER)
		OFWSEEK:SETACTION(BSEEKACTION)

		IF !EMPTY( SELF:CALIAS ) .AND.  SELF:CANLOCSEEK() .AND.  !SELF:DATAQUERY()
			OFWSEEK:SETLOCSEEK( .T. )
			OFWSEEK:SETINDFIELDS( SELF:GETINDFIELDS( SELF:CALIAS, "C", AORDER ) )
		ELSEIF !SELF:DATATABLE() .AND.  SELF:FWFILTER() <> NIL .AND.  (SELF:CANLOCSEEK() .OR.  !SELF:DATAQUERY())



			AFIELDS := SELF:FWFILTER():GETFIELDS()



			AEVAL( AFIELDS , { |X| AADD(AINDFIELDS, { X[1], X[2],X[3],NIL, .F. ,NIL} ) })
			OFWSEEK:SETINDFIELDS( AINDFIELDS )
		ENDIF




		SELF:ODATA:SETSEEKACTION(BACTION,OFWSEEK)



		IF SELF:DATATABLE()
			BCHANGE := { |O| IF( OFWSEEK:GETSEEKSTYLE() == 1, ( (SELF:CALIAS)->(DBSETORDER(OFWSEEK:GETORDER())),IIF(SELF:LACTIVATE,(SELF:UPDATETOPBOT( .F. ),SELF:REFRESH()),)),  ) }
			SELF:SETSEEKCHANGE(BCHANGE)
		ENDIF

		IF SELF:DATAARRAY()
			BCHANGE := { |O| .T.  }
			SELF:SETSEEKCHANGE(BCHANGE)
		ENDIF

		OFWSEEK:SETCHANGE(SELF:BSEEKCHANGE)
		OFWSEEK:SETFINISH({ || SELF:SETFOCUS() })
	ENDIF
RETURN












FUNCTION ___FWBROWSE____SETSEEKCHANGE(BSEEKCHANGE )
LOCAL OFWSEEK := SELF:GETSEEK()
IF BSEEKCHANGE <> NIL .AND.  !(VALTYPE(BSEEKCHANGE) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BSEEKCHANGE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BSEEKCHANGE)); ENDIF

SELF:BSEEKCHANGE := BSEEKCHANGE
IF !(OFWSEEK == NIL)
	OFWSEEK:SETCHANGE(SELF:BSEEKCHANGE)
ENDIF

RETURN













FUNCTION ___FWBROWSE____SETSHOWLIMIT(LSHOWLIMIT )
IF LSHOWLIMIT <> NIL .AND.  !(VALTYPE(LSHOWLIMIT) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LSHOWLIMIT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LSHOWLIMIT)); ENDIF; LSHOWLIMIT := IF(LSHOWLIMIT == NIL, .T. ,LSHOWLIMIT)

IF SELF:DATAQUERY()
	SELF:ODATA:LSHOWLIMIT := LSHOWLIMIT
ENDIF

RETURN











FUNCTION ___FWBROWSE____SETSUPERDEL(BSUPERDEL )
IF !(VALTYPE(BSUPERDEL) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BSUPERDEL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BSUPERDEL)); ENDIF

IF SELF:DATATABLE() .OR.  SELF:DATAARRAY()
	SELF:BSUPERDEL := BSUPERDEL
ENDIF

RETURN













FUNCTION ___FWBROWSE____SETPROFILEID(CPROFILEID )
IF !(VALTYPE(CPROFILEID) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CPROFILEID"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CPROFILEID)); ENDIF

SELF:CPROFILEID := CPROFILEID

RETURN











FUNCTION ___FWBROWSE____SETSTYLE(CSTYLE )
IF !(VALTYPE(CSTYLE) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CSTYLE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CSTYLE)); ENDIF

SELF:CSTYLE := CSTYLE

RETURN











FUNCTION ___FWBROWSE____SETTOTALCOLUMNS( )
LOCAL LOLDTOTALCHANGE := SELF:LTOTALCHANGE

IF VALTYPE(SELF:ATOTAL) == "A"
	SELF:LEXECCHGCOLUMN := .T. 



	SELF:LTOTALCHANGE := .F. 
	FWMSGRUN(,{||SELF:ODATA:TOTALRESULT(SELF,SELF:ATOTAL) }, FWI18NLANG("FWBRWSTR","STR0085",85) )
	SELF:LTOTALCHANGE := LOLDTOTALCHANGE



	SELF:TOTALCHANGE()
ENDIF

RETURN













FUNCTION ___FWBROWSE____SETVSCROLL(LSCROLL )
	SELF:OBROWSEUI:SETVSCROLL(LSCROLL)
RETURN













FUNCTION ___FWBROWSE____SETCANGOTFOCUS(LCANGOTFOCUS )
	IF LCANGOTFOCUS <> NIL .AND.  !(VALTYPE(LCANGOTFOCUS) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LCANGOTFOCUS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LCANGOTFOCUS)); ENDIF; LCANGOTFOCUS := IF(LCANGOTFOCUS == NIL, .T. ,LCANGOTFOCUS)

	SELF:LCANGOTFOCUS := LCANGOTFOCUS
RETURN











FUNCTION ___FWBROWSE____SETTYPEMOVE(NTYPEMOVE )
IF !(VALTYPE(NTYPEMOVE) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NTYPEMOVE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NTYPEMOVE)); ENDIF

SELF:NTYPEMOVE := NTYPEMOVE

RETURN












FUNCTION ___FWBROWSE____SETUPDATEBROWSE(BUPDATEBROWSE )
IF !(VALTYPE(BUPDATEBROWSE) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BUPDATEBROWSE"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BUPDATEBROWSE)); ENDIF

SELF:BUPDATEBROWSE := BUPDATEBROWSE

RETURN












FUNCTION ___FWBROWSE____SETUSEFILTER(NALIGN,BONSTART )
LOCAL NI
LOCAL CALIAS := SELF:ALIAS()
LOCAL BEXECUTEFILTER := { || SELF:EXECUTEFILTER() }
LOCAL BCLEANFILTER   := { || SELF:CLEANFILTER()   }
LOCAL AFIELDSFILTER  := SELF:ODATA:GETFIELDFILTER()
LOCAL ASTRUCT        := {}

IF NALIGN <> NIL .AND.  !(VALTYPE(NALIGN) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NALIGN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NALIGN)); ENDIF; NALIGN := IF(NALIGN == NIL,3,NALIGN)
IF BONSTART <> NIL .AND.  !(VALTYPE(BONSTART) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BONSTART"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BONSTART)); ENDIF




IF !SELF:DATATABLE() .OR.  (SELF:DATATABLE() .AND.  (SELF:ODATA:TOPCONN() .OR.  (!SELF:ODATA:TOPCONN() .AND.  SELF:DBFFILTER())))



	IF !(SELF:DATATABLE() .AND.  !EMPTY((CALIAS)->(DBFILTER())))



		IF VALTYPE(BONSTART) <> "B" .AND.  (SELF:DATATABLE() .OR.  SELF:DATAQUERY()) .AND.  EMPTY(AFIELDSFILTER)
			ASTRUCT := (CALIAS)->(DBSTRUCT())
			FOR NI := 1 TO LEN(ASTRUCT)
				AADD( AFIELDSFILTER, { ASTRUCT[NI,1], ASTRUCT[NI,1], ASTRUCT[NI,2], ASTRUCT[NI,3], ASTRUCT[NI,4], } )
			NEXT
			SELF:SETFIELDFILTER(AFIELDSFILTER)
		ENDIF
		SELF:OBROWSEUI:SETUSEFILTER( .T. )
		SELF:BFONSTART := BONSTART
	ENDIF
ELSEIF FINDFUNCTION("FIRST") .OR.  FINDFUNCTION("FIRTJURI")
	SELF:OBROWSEUI:SETUSEFILTER( .T. )
ENDIF
RETURN










FUNCTION ___FWBROWSE____SETSAVEFILTER(LSAVEFILTER )
LOCAL OFILTER :=  SELF:FWFILTER()

	IF OFILTER <> NIL
		OFILTER:DISABLESAVE(!LSAVEFILTER)
	ENDIF
	SELF:LSAVEFILTER := LSAVEFILTER
RETURN










FUNCTION ___FWBROWSE____SETLOOKUP(LLOOKUP )

SELF:LLOOKUP := LLOOKUP
IF SELF:OBROWSEUI <> NIL
	SELF:OBROWSEUI:LFOCUSCFG := LLOOKUP
	SELF:OBROWSEUI:LSAVESEEK := LLOOKUP
ENDIF

RETURN












FUNCTION ___FWBROWSE____INITFILTER(OFWFILTER )
LOCAL BEXECUTEFILTER := { || SELF:EXECUTEFILTER() }
LOCAL BCLEANFILTER   := { || SELF:CLEANFILTER()   }
LOCAL AFIELDSFILTER  := SELF:ODATA:GETFIELDFILTER()
LOCAL NI
LOCAL AFORMAT
LOCAL CEXPRTRANS
LOCAL AOPERADOR
LOCAL ARELATION
LOCAL NPOS

IF OFWFILTER <> NIL
	OFWFILTER:SETCANUSE({|| IIF(SELF:DATATABLE() .OR.  SELF:DATAQUERY(),DBSELECTAREA(SELF:CALIAS),), .T. })
	OFWFILTER:SETCLEANFILTER(BCLEANFILTER)
	OFWFILTER:SETEXECUTE(BEXECUTEFILTER)
	IF VALTYPE(SELF:BFONSTART) == "B"
		OFWFILTER:SETONSTART(SELF:BFONSTART)
	ELSE
		OFWFILTER:SETFIELD(AFIELDSFILTER)
	ENDIF

	OFWFILTER:DISABLESAVE(!SELF:LSAVEFILTER)



	IF VALTYPE(SELF:BVLDEXECFILTER) == "B"
		OFWFILTER:SETVALIDEXECUTE(SELF:BVLDEXECFILTER)
	ENDIF



	OFWFILTER:SETISBYEMPFIL( VERSENHA(169) )

	IF !EMPTY(SELF:CPROFILEID)
		OFWFILTER:SETPROFILEID(SELF:CPROFILEID)
	ENDIF


	OFWFILTER:LOADFILTER()

	IF SELF:DATATABLE() .AND.  (SELF:CALIAS)->(RDDNAME()) == "TOPCONN" .AND.  !("@" $ SELF:CFILTERDEFAULT)
		OFWFILTER:SETALIAS(SELF:CALIAS)



		IF SELF:LRELATIONFILTER .AND.  FINDFUNCTION("FWLOADCDOM") .AND.  FINDFUNCTION("FWSTARTFILTER")
			IF ! __INTWSCALL
				ARELATION := FWLOADCDOM(SELF:ALIAS())
			ENDIF
			IF !EMPTY(ARELATION)
				OFWFILTER:SETRELATION(ARELATION,{ |OFILTER,CALIAS| FWSTARTFILTER(SELF,CALIAS) })
			ENDIF
		ENDIF
	ENDIF



	IF SELF:DATAARRAY() .OR.  SELF:DATATEXT()
		OFWFILTER:DISABLEVALID()
	ENDIF
	OFWFILTER:SETFINISH({ || SELF:SETFOCUS() })





	IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()



		IF !EMPTY(SELF:CFILTERDEFAULT)
			IF ASCAN(OFWFILTER:AFILTER, { |X| X[2] == SELF:CFILTERDEFAULT } ) == 0
				OFWFILTER:ADDLEVEL(FWI18NLANG("FWBRWSTR","STR0010",10),SELF:CFILTERDEFAULT,"",, .T. ,, .T. )
			ENDIF
		ENDIF



		IF SELECT("SXQ") > 0
			SXQ->(DBSETORDER(1))
			SXR->(DBSETORDER(1))
			IF !EMPTY(SELF:CALIAS) .AND.  SXQ->(DBSEEK(SELF:CALIAS))
				WHILE SXQ->(!EOF()) .AND.  SXQ->XQ_ALIAS == SELF:CALIAS

					IF SXR->(DBSEEK(SXQ->XQ_ALIAS+SXQ->XQ_SEQ) )

						IF !SXR->(DBSEEK(SXQ->XQ_ALIAS+SXQ->XQ_SEQ+FUNNAME()))
							SXQ->(DBSKIP())
							LOOP
						END
					END

					SXT->(DBSETORDER(1))
					IF SXT->(DBSEEK(SXQ->XQ_ALIAS+SXQ->XQ_SEQ))
						SXT->(DBSETORDER(2))

						IF !SXT->(DBSEEK(__CUSERID+SXQ->XQ_ALIAS+SXQ->XQ_SEQ))
							SXQ->(DBSKIP())
							LOOP
						END
					END

					AFORMAT := STR2ARRAY(SXQ->XQ_REGRA)
					CEXPRTRANS:= ""
					AOPERADOR	:= {}

					IF LEN(AFORMAT) == 9 .AND.  VALTYPE(AFORMAT[9]) == "A"
						AOPERADOR := {}
						CEXPRTRANS := CONVOPERA(AFORMAT,AFORMAT[1],@AOPERADOR)
						SELF:ADDFILTER(AFORMAT[2],CEXPRTRANS,,,SELF:CALIAS,("%" $ CEXPRTRANS),AOPERADOR,)
					ELSEIF LEN(AFORMAT) >= 2




						IF " LIKE " $ AFORMAT[2] .OR.  " IN "  $ AFORMAT[2] .OR.  " AND " $ AFORMAT[2] .OR.  " OR "  $ AFORMAT[2]

							AFORMAT[2] := "@" + AFORMAT[2]

						END

						ASIZE(AFORMAT,10)
						SELF:ADDFILTER(AFORMAT[1],AFORMAT[2],,,SELF:CALIAS,("%" $ AFORMAT[2]),ACLONE(AFORMAT[4]),,AFORMAT[10])
					END
					SXQ->(DBSKIP())
				END
			END
	    END



		FOR NI := 1 TO LEN(SELF:AFILTERDEFAULT)
			IF ASCAN(OFWFILTER:AFILTER, { |X| X[2] == SELF:AFILTERDEFAULT[NI,2] } ) == 0
				OFWFILTER:ADDLEVEL(SELF:AFILTERDEFAULT[NI,1],SELF:AFILTERDEFAULT[NI,2],"",SELF:AFILTERDEFAULT[NI,4],SELF:AFILTERDEFAULT[NI,5],SELF:AFILTERDEFAULT[NI,7],SELF:AFILTERDEFAULT[NI,5] .OR.  SELF:AFILTERDEFAULT[NI,6],SELF:AFILTERDEFAULT[NI,8],SELF:AFILTERDEFAULT[NI,9])
			ENDIF



			IF !EMPTY(SELF:AFILTERDEFAULT[NI,8]) .AND.  !EMPTY(OFWFILTER:ARELATION)
				IF (NPOS := ASCAN(OFWFILTER:ARELATION, { |X| X[2] == SELF:AFILTERDEFAULT[NI,8] })) > 0
					OFWFILTER:ARELATION[NPOS,1] := .T. 
				ENDIF
			ENDIF
		NEXT
	ENDIF
ENDIF
RETURN












FUNCTION ___FWBROWSE____SETUSECASEFILTER(NALIGN )
LOCAL LRET    := .F. 
LOCAL NPOS    := 0
LOCAL AFIELDS := {}
LOCAL NI
LOCAL BEXECUTEFILTER := { || SELF:EXECUTEFILTER() }
LOCAL BCLEANFILTER   := { || SELF:CLEANFILTER()   }

IF NALIGN <> NIL .AND.  !(VALTYPE(NALIGN) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NALIGN"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NALIGN)); ENDIF; NALIGN := IF(NALIGN == NIL,3,NALIGN)



IF SELF:DATATABLE() .AND.  SELF:ODATA:TOPCONN()
	LRET := .T. 
	SELF:OBROWSEUI:SETUSECASEFILTER( .T. )
ENDIF

RETURN LRET

FUNCTION ___FWBROWSE____INITCASEFILTER(OFWCASEFILTER )
	IF OFWCASEFILTER <> NIL
		OFWCASEFILTER:SETFINISH({ || SELF:SETFOCUS() })
	ENDIF
RETURN












FUNCTION ___FWBROWSE____SETUSERELATIONFILTER(LRELATIONFILTER )
IF LRELATIONFILTER <> NIL .AND.  !(VALTYPE(LRELATIONFILTER) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LRELATIONFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LRELATIONFILTER)); ENDIF; LRELATIONFILTER := IF(LRELATIONFILTER == NIL, .T. ,LRELATIONFILTER)

SELF:LRELATIONFILTER := LRELATIONFILTER

RETURN












FUNCTION ___FWBROWSE____SETVLDEXECFILTER(BVLDEXECFILTER )
IF !(VALTYPE(BVLDEXECFILTER) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BVLDEXECFILTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BVLDEXECFILTER)); ENDIF

SELF:BVLDEXECFILTER := BVLDEXECFILTER

RETURN













FUNCTION ___FWBROWSE____SETWIDTHCOLUMNS(AWIDTH )
LOCAL NI

IF !(VALTYPE(AWIDTH) $ SUBS("ARRAY",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"AWIDTH"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("ARRAY",1,1)+"->"+VALTYPE(AWIDTH)); ENDIF

FOR NI := 1 TO LEN(AWIDTH)
	SELF:ACOLUMNS[NI]:SETSIZE(AWIDTH[NI])
NEXT

RETURN










FUNCTION ___FWBROWSE____SHOW( )

SELF:OOWNER:SHOW()

RETURN












FUNCTION ___FWBROWSE____SHOWDATA(NCOUNT )
LOCAL NI
LOCAL NCURSOR    := 0
LOCAL NRECNO     := 0
LOCAL NOLDAT     := 0
LOCAL NLOGICLEN  := SELF:LOGICLEN()
LOCAL NNOVISIBLE := 0


IF SELF:LUPDVISIBRW
	SELF:UPDVISIBRW()
	SELF:LUPDVISIBRW := .F. 
ENDIF

IF NCOUNT <> NIL .AND.  !(VALTYPE(NCOUNT) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NCOUNT"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NCOUNT)); ENDIF; NCOUNT := IF(NCOUNT == NIL,SELF:NVISIBLEROWS,NCOUNT)
SELF:AVISIBLEREG := {}
FOR NI := 0 TO SELF:NPOSSIBLEROWS



	IF NI > 0 .AND.  !EMPTY(SELF:AGROUP)
		SELF:GROUPLINEREFRESH()



		IF NLOGICLEN == SELF:NAT
			IF SELF:AGROUP[LEN(SELF:AGROUP),2]
				SELF:GOTO(SELF:AGROUP[LEN(SELF:AGROUP),3], .F. )
			ELSE
				SELF:GOTO(SELF:AGROUP[LEN(SELF:AGROUP),1], .F. )
			ENDIF
			EXIT
		ENDIF
	ENDIF

	IF (SELF:DATATABLE() .OR.  SELF:DATAQUERY())
		DBSELECTAREA(SELF:ALIAS())



		IF NI <> 0
			NOLDAT := (SELF:ALIAS())->(RECNO())
		ENDIF



		SELF:ODATA:SKIP(IF(NI==0,0,1))




		IF (SELF:CALIAS)->(EOF()) .OR.  (NOLDAT == (SELF:CALIAS)->(RECNO()))
			SELF:GOTO(SELF:NAT, .F. , .T. )
			EXIT
		ENDIF
		SELF:NAT := (SELF:CALIAS)->(RECNO())
	ELSE
		IF NI > 0
			NLOGICLEN := SELF:LOGICLEN()
			SELF:NAT ++



			IF SELF:NAT > SELF:ODATA:LASTRECNO()
				SELF:NAT := SELF:ODATA:LASTRECNO()
				IF SELF:NAT <= 0
				    SELF:NAT := 1
				ENDIF
				EXIT
			ENDIF



			IF SELF:NAT > NLOGICLEN .AND.  NLOGICLEN > 0
   				SELF:NAT := NLOGICLEN
				EXIT
			ENDIF
		ENDIF
	ENDIF



	IF NLOGICLEN > 0
		IF NRECNO <> SELF:NAT
			SELF:LINEREFRESH(SELF:NCURSORPOS+NCURSOR)
			NCURSOR++
		ENDIF
		IF NI >= NCOUNT
			NNOVISIBLE++
		ELSE
			NRECNO := SELF:NAT
			AADD( SELF:AVISIBLEREG , SELF:NAT)
		ENDIF
	ENDIF
NEXT




SELF:GOTO(NRECNO, .F. )

RETURN (NCURSOR-1-NNOVISIBLE)











FUNCTION ___FWBROWSE____SHOWEDITLINE( )
LOCAL OVIEW
LOCAL OFWMVCWINDOW
OVIEW := MAKEMVCEDITLINE(SELF)

OFWMVCWINDOW := FWMVCWINDOW():NEW()
OFWMVCWINDOW:SETUSECONTROLBAR( .T. )
OFWMVCWINDOW:SETBROWSE(SELF, .F. , .T. )
OFWMVCWINDOW:SETVIEW(OVIEW)
OFWMVCWINDOW:SETPOS(0,0)
OFWMVCWINDOW:SETSIZE(400,640)
OFWMVCWINDOW:SETTITLE( FWI18NLANG("FWBRWSTR","STR0086",86) )
OFWMVCWINDOW:ACTIVATE()

RETURN










STATIC FUNCTION MAKEMVCEDITLINE(OBROWSE)
LOCAL OMODELSTRUCT
LOCAL OVIEWSTRUCT
LOCAL OVIEW
LOCAL OMODEL
IF OBROWSE:BMODELEDTLINE <> NIL
	OMODELSTRUCT := EVAL (OBROWSE:BMODELEDTLINE,OBROWSE)
ENDIF

IF OMODELSTRUCT == NIL
	OMODELSTRUCT := GETSTRUCTEDTLINE(OBROWSE,1)
ENDIF
IF OBROWSE:BVIEWEDTLINE <> NIL
	OVIEWSTRUCT  := EVAL (OBROWSE:BVIEWEDTLINE,OBROWSE)
ENDIF

IF OVIEWSTRUCT == NIL
	OVIEWSTRUCT := GETSTRUCTEDTLINE(OBROWSE,2)
ENDIF



OMODEL := FWFORMMODEL():NEW("EDITINLINE", {|| .T. }, {|| .T. }, {|OMODEL| SAVEEDITLINE(OMODEL,OBROWSE)}, {|| .T. } )
OMODEL:ADDFIELDS("EDITINLINE.GRID", NIL , OMODELSTRUCT , {|| .T. }, {|| .T. }, {|OMODEL,LLOAD| LOADEDITLINE(OMODEL,LLOAD,OBROWSE)})
OMODEL:SETDESCRIPTION("GRIDDETAILMODEL")
OMODEL:GETMODEL("EDITINLINE.GRID"):SETDESCRIPTION("GRID")
OMODEL:SETPRIMARYKEY({})

OVIEW := FWFORMVIEW():NEW()
OVIEW:SETUSECURSOR( .T. )
OVIEW:SETCLOSEONOK({|| .T. })
OVIEW:SETMODEL(OMODEL)
OVIEW:ADDFIELD( "EDITINLINE.GRID", OVIEWSTRUCT,,)
OVIEW:CREATEHORIZONTALBOX("FORMFIELD",100)
OVIEW:SETOWNERVIEW("EDITINLINE.GRID","FORMFIELD")
OVIEW:SETOPERATION( 4 )

RETURN OVIEW












STATIC FUNCTION GETSTRUCTEDTLINE(OBROWSE,NTYPE)
LOCAL ACOLUMNS := OBROWSE:ACOLUMNS
LOCAL OCOLUMN
LOCAL NX
LOCAL OSTRUCT
LOCAL LMODEL := NTYPE == 1
IF LMODEL
	OSTRUCT := FWFORMMODELSTRUCT():NEW()
ELSE
	OSTRUCT := FWFORMVIEWSTRUCT():NEW()
ENDIF
FOR NX := 1 TO LEN(ACOLUMNS)
	OCOLUMN := ACOLUMNS[NX]
	IF LMODEL
		OSTRUCT:ADDFIELD(OCOLUMN:GETTITLE(),"",OCOLUMN:CREADVAR,OCOLUMN:GETTYPE(),OCOLUMN:GETSIZE(),OCOLUMN:GETDECIMAL())
	ELSE
		OSTRUCT:ADDFIELD(OCOLUMN:CREADVAR,(STR(NX)),OCOLUMN:GETTITLE(),OCOLUMN:GETTITLE(),,OCOLUMN:GETTYPE(),OCOLUMN:GETPICTURE())
	ENDIF
NEXT
IF LMODEL
	OSTRUCT:ADDTABLE("EDIT_GRID",{}, FWI18NLANG("FWBRWSTR","STR0083",83) )
ENDIF
RETURN OSTRUCT












STATIC FUNCTION LOADEDITLINE(OMODEL,LLOAD,OBROWSE)
LOCAL ARETURN := {}
LOCAL NX
LOCAL ASTRUCT := OMODEL:GETSTRUCT():GETFIELDS()
LOCAL ACOLUMNS := OBROWSE:ACOLUMNS

FOR NX := 1 TO LEN(ASTRUCT)
	AADD(ARETURN,EVAL(ACOLUMNS[NX]:GETDATA()))
NEXT

RETURN ARETURN












STATIC FUNCTION SAVEEDITLINE(OMODEL,OBROWSE)
LOCAL NAT := OBROWSE:AT()
LOCAL NX
LOCAL ADADOS    := OMODEL:GETMODEL("EDITINLINE.GRID"):GETDATA()

FOR NX := 1 TO LEN(ADADOS)
	OBROWSE:ODATA:SETVALUE(NAT,NX,ADADOS[NX][2])
NEXT

RETURN .T. 











FUNCTION ___FWBROWSE____SETMODELEDTLINE(BSET )
IF !(VALTYPE(BSET) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BSET"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BSET)); ENDIF
SELF:BMODELEDTLINE := BSET
RETURN











FUNCTION ___FWBROWSE____SETVIEWEDTLINE(BSET )
IF !(VALTYPE(BSET) $ SUBS("BLOCK",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"BSET"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("BLOCK",1,1)+"->"+VALTYPE(BSET)); ENDIF
SELF:BVIEWEDTLINE := BSET
RETURN












FUNCTION ___FWBROWSE____SUPERDEL( )
LOCAL LRET := .T. 

IF SELF:DATATABLE() .OR.  SELF:DATAARRAY()
	IF VALTYPE(SELF:BSUPERDEL) == "B"
		LRET := EVAL(SELF:BSUPERDEL,SELF)
		IF VALTYPE(LRET) <> "L"
			LRET := .T. 
		ENDIF
		IF LRET
			SELF:REFRESH()
		ENDIF
	ENDIF
ENDIF

RETURN LRET











FUNCTION ___FWBROWSE____TOTALCHANGE( )
LOCAL NCOLUMN  := 0
LOCAL CPICTURE := ""
LOCAL NTOTAL
LOCAL OTOTAL
LOCAL CTITLE
LOCAL LSHOWTOTAL := .F. 
LOCAL CID
LOCAL NROWS






IF !SELF:LTOTALCHANGE
	RETURN
ENDIF

NCOLUMN  := SELF:COLPOS()




IF VALTYPE(SELF:ATOTAL) == "A" .AND.  NCOLUMN > 0
	IF NCOLUMN <= LEN(SELF:ATOTAL) .AND.  VALTYPE(SELF:ATOTAL[NCOLUMN]) == "A" .AND.  !EMPTY(SELF:ATOTAL[NCOLUMN,1])



		NTOTAL := SELF:ATOTAL[NCOLUMN,3]



		IF LEN(SELF:ATOTAL[NCOLUMN]) > 4
			CPICTURE := SELF:ATOTAL[NCOLUMN,5]
		ENDIF
		CTITLE := SELF:ATOTAL[NCOLUMN,1]

		LSHOWTOTAL := .T. 
	ELSE
		OTOTAL := SELF:GETTOTBYID(SELF:ACOLUMNS[NCOLUMN]:GETID())



		IF OTOTAL == NIL .AND.  NCOLUMN <= LEN(SELF:ATOTAL)
			OTOTAL := SELF:ATOTAL[NCOLUMN]
		ENDIF
		IF VALTYPE(OTOTAL) == "O" .AND.  !EMPTY(OTOTAL:GETTYPE()) .AND.  !EMPTY(OTOTAL:GETTITLE())



			NTOTAL := OTOTAL:GETVALUE()
			CTITLE := OTOTAL:GETTITLE()
			CPICTURE := OTOTAL:GETMASK()
			LSHOWTOTAL := .T. 
		ENDIF
	ENDIF
ENDIF

IF LSHOWTOTAL



	SELF:OBROWSEUI:SETTOTALTEXT(EVAL(BLOCOTOTAL(CPICTURE,CTITLE,NTOTAL)))
	NROWS := SELF:OBROWSE:GETVISIBLEROWS()
	SELF:OBROWSEUI:SHOWTOTAL()



	IF (NROWS - SELF:OBROWSE:GETVISIBLEROWS()) == 1



		IF SELF:NCURSORPOS == NROWS-1



			SELF:OBROWSE:SCROLLLINE(1)
			SELF:SELECTROW(--SELF:NCURSORPOS)
		ENDIF
	ENDIF
ELSE
	SELF:OBROWSEUI:HIDETOTAL()
ENDIF

RETURN

STATIC FUNCTION BLOCOTOTAL(CPICTURE,CTITLE,NTOTAL)
LOCAL BBLOCOTOTAL
	IF !EMPTY(CPICTURE)
		BBLOCOTOTAL := &("{|| '"+ RTRIM(CTITLE)+ IIF(AT(":",CTITLE)>0," ",": ") + TRANSFORM(NTOTAL,CPICTURE) +"' }")
	ELSE
		BBLOCOTOTAL := &("{|| '"+ RTRIM(CTITLE)+ IIF(AT(":",CTITLE)>0," ",": ") + LTRIM(STR(NTOTAL)) +"' }")
	ENDIF
RETURN BBLOCOTOTAL












FUNCTION ___FWBROWSE____TOTALCOLUMNCONFIG(OPCENTER )
LOCAL OPANEL
LOCAL OSAY
LOCAL OSELF     := SELF
LOCAL NI        := 0
LOCAL NLIN      := 15
LOCAL NCOLSAY   := 5
LOCAL NLINIMAGE := 15
LOCAL NCOLIMAGE := 250
LOCAL NSIZE     := 5
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL CTITLE    := ""
LOCAL NCOLHEADER := 5
LOCAL OFONT := TFONT():NEW(SELF:CFONTBODY,,-11,, .T. )

LOCAL OTYPE
LOCAL XDATA
LOCAL NTYPE     := 0
LOCAL ATYPE     := {"", FWI18NLANG("FWBRWSTR","STR0069",69),FWI18NLANG("FWBRWSTR","STR0070",70),FWI18NLANG("FWBRWSTR","STR0071",71),FWI18NLANG("FWBRWSTR","STR0072",72),FWI18NLANG("FWBRWSTR","STR0073",73) }
LOCAL ATOTAL    := {"","SUM","MIN","MAX","COUNT","AVERAGE"}
LOCAL LCENTERED := .T. 
LOCAL OTGET
LOCAL NPOSTOT

LOCAL CTYPE

IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()

IF VALTYPE(SELF:ATOTAL) <> "A"
	SELF:ATOTAL := ARRAY(NTOTAL)
ENDIF




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  !SELF:ACOLUMNS[NI]:ISIMAGE() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		NSIZE+=10
	ENDIF
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5

NCOLHEADER := (OPCENTER:NCLIENTWIDTH-20)/2/4
TSAY():NEW(5,5,{||FWI18NLANG("FWBRWSTR","STR0078",78)}, OPANEL,,OFONT,,,, .T. ,,,,,,,,,)
TSAY():NEW(5,NCOLHEADER+5,{||FWI18NLANG("FWBRWSTR","STR0021",21)}, OPANEL,,OFONT,,,, .T. ,,,,,,,,,)
TSAY():NEW(5,NCOLHEADER*2+5,{||FWI18NLANG("FWBRWSTR","STR0079",79)}, OPANEL,,OFONT,,,, .T. ,,,,,,,,,)
TSAY():NEW(5,NCOLHEADER*3+5,{||FWI18NLANG("FWBRWSTR","STR0024",24)}, OPANEL,,OFONT,,,, .T. ,,,,,,,,,)

FOR NI := 1 TO NTOTAL
	CTYPE	:=	SELF:ACOLUMNS[NI]:GETTYPE()



	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  CTYPE <> "M"
		IF !SELF:ACOLUMNS[NI]:ISIMAGE()






			IF CTYPE == "C" .OR.  CTYPE == "D" .OR.  EMPTY(CTYPE)
				ATYPE   := {"",FWI18NLANG("FWBRWSTR","STR0072",72)}
				ATOTAL  := {"","COUNT"}



			ELSEIF CTYPE == "F"
				XDATA := EVAL(SELF:ACOLUMNS[NI]:BDATA)
				IF VALTYPE(XDATA) <> "N"
					ATYPE   := {"",FWI18NLANG("FWBRWSTR","STR0072",72)}
					ATOTAL  := {"","COUNT"}
				ENDIF
			ENDIF

			IF VALTYPE(SELF:ATOTAL[NI]) == "A"
				NTYPE    := ASCAN(ATOTAL, { |X| X == SELF:ATOTAL[NI,2] } )

			ELSEIF VALTYPE(SELF:ATOTAL[NI]) == "O"
				NTYPE    := ASCAN(ATOTAL, { |X| X == SELF:ATOTAL[NI]:GETTYPE() } )
			ENDIF

			IF SELF:ATOTAL[NI] == NIL .OR.  (VALTYPE(SELF:ATOTAL[NI]) == "A" .AND.  LEN(SELF:ATOTAL[NI]) == 0)
				SELF:ATOTAL[NI] := FWBRWTOTAL():NEW()
				SELF:ATOTAL[NI]:SETID(SELF:ACOLUMNS[NI]:GETID())
				NTYPE := 1
			ENDIF

			NPOSTOT := ASCAN(SELF:ATOTAL, { |X| X <> NIL .AND.  X:GETID() == SELF:ACOLUMNS[NI]:GETID() })
			IIF(NPOSTOT > 0 , , NPOSTOT := NI )

			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
			OSAY := TSAY():NEW(NLIN+1,NCOLSAY,&("{|	|'"+ CTITLE +"'}"), OPANEL,,,,,, .T. ,,,,,,,,,)


			TGET():NEW(NLIN,NCOLHEADER+5,&("{ | U | IF( PCOUNT() == 0, SELF:ATOTAL["+CVALTOCHAR(NPOSTOT)+"]:CTITLE,SELF:ATOTAL["+CVALTOCHAR(NPOSTOT)+"]:CTITLE := U ) }"),OPANEL,30,08,,,,,, .F. ,, .T. ,, .F. ,{||}, .F. , .F. ,{|| }, .F. , .F. ,,,,,, .T. )


			OTYPE := TCOMBOBOX():NEW(NLIN,NCOLHEADER*2+3,&("{ | U | IF( PCOUNT() == 0, SELF:ATOTAL["+CVALTOCHAR(NPOSTOT)+"]:CTYPE, SELF:ATOTAL["+CVALTOCHAR(NPOSTOT)+"]:CTYPE := U ) }"),ATYPE,35,09,OPANEL,,,,,, .T. ,,, .F. ,, .F. ,,,,)
			IF NTYPE > 1
				OTYPE:SELECT(NTYPE)
			ENDIF


			OTGET := TGET():NEW(NLIN,NCOLHEADER*3+5,&("{ | U | IF( PCOUNT() == 0, SELF:ATOTAL["+CVALTOCHAR(NPOSTOT)+"]:CMASK,SELF:ATOTAL["+CVALTOCHAR(NPOSTOT)+"]:CMASK := U ) }"),OPANEL,30,08,,,,,, .F. ,, .T. ,, .F. ,, .F. , .F. ,{|| }, .F. , .F. ,,,,,, .T. )
			NLIN+=11

			ATYPE     := {"", FWI18NLANG("FWBRWSTR","STR0069",69),FWI18NLANG("FWBRWSTR","STR0070",70),FWI18NLANG("FWBRWSTR","STR0071",71),FWI18NLANG("FWBRWSTR","STR0072",72),FWI18NLANG("FWBRWSTR","STR0073",73) }
			ATOTAL    := {"", "SUM","MIN","MAX","COUNT","AVERAGE"}
		ENDIF
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETTOTALCOLUMNS() }

RETURN











FUNCTION ___FWBROWSE____UPDATEBROWSE(LRESEEK,LFORCEUPDTB )

LOCAL AAUX AS  ARRAY
LOCAL NFOR AS  NUMERIC

AAUX := {}

LRESEEK := IF( LRESEEK == NIL, .T. , LRESEEK ) ;
LFORCEUPDTB := IF( LFORCEUPDTB == NIL, .T. , LFORCEUPDTB ) ;

IF VALTYPE(SELF:OBROWSE) == "O"





	SELF:OBROWSEUI:GETGRID():COLORDER(AAUX)
	FOR NFOR := 1 TO LEN(AAUX)
		SELF:OBROWSEUI:GETGRID():REMOVECOLUMN(AAUX[NFOR])
	NEXT






	IF LRESEEK
		SELF:OBROWSEUI:RESETSEEK()
	ENDIF



	IF SELECT(SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN") > 0
	    IF SELECT( SELF:CREALALIAS ) > 0
		    (SELF:CREALALIAS)->( DBCLOSEAREA() )
		ENDIF
		DBCHANGEALIAS(SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN",SELF:CREALALIAS)
	ENDIF



	SELF:CREATEBROWSE( .T. ,LFORCEUPDTB)




	IF SELF:ODATA:CLASSNAME() == "FWBRWTABLE"



		IF !SELF:ODATA:LSEEALL .AND.  !EMPTY(SELF:ALEFTJOIN)

			SELF:FWBROWSE():CHANGETOPBOT()
		ENDIF
	ENDIF



	IF VALTYPE(SELF:BUPDATEBROWSE) == "B"
		EVAL(SELF:BUPDATEBROWSE,SELF)
	ENDIF





		SELF:ABKPBRWORDER := {}
		SELF:OBROWSEUI:GETGRID():COLORDER(SELF:ABKPBRWORDER)


	IF __CBUILDAPPSERVER > "7.00.131227A-20140129"
		SELF:ABKPSIZECOL := SELF:OBROWSE:GETCOLUMNSSIZE()
	ENDIF

	SELF:CHECKEMPTY()




	SELF:LSAVEDCONFIG := .F. 
ENDIF

RETURN












FUNCTION ___FWBROWSE____UPDATETOPBOT(LGOTOP )

IF SELF:DATATABLE() .OR.  SELF:DATAQUERY()
	SELF:ODATA:UPDATETOPBOT(LGOTOP)
ENDIF

RETURN













FUNCTION ___FWBROWSE____VALIDEDIT(LCANCEL,ODLG,OGET,LGORIGHT,BVALID )
LOCAL LRET := .T. 

LGORIGHT := IF( LGORIGHT == NIL, .T. , LGORIGHT ) ;
BVALID := IF( BVALID == NIL, {|| .T. }, BVALID ) ;

IF SELF:BVALIDEDIT <> NIL
	LRET := EVAL(SELF:BVALIDEDIT,LCANCEL,SELF)
ENDIF
IF LRET .AND.  !LCANCEL
	LRET := EVAL(BVALID,LCANCEL,SELF)
ENDIF
IF !LRET .AND.  ODLG <> NIL .AND.  OGET <> NIL
	ODLG:NLASTKEY := 0
	SETFOCUS(OGET:HWND)
  	OGET:REFRESH( .F. )
ELSEIF LRET .OR.  LGORIGHT
	SELF:GORIGHT()
ENDIF
RETURN LRET













FUNCTION ___FWBROWSE____VIEWCOMMENT( )
LOCAL BCOMMENT
LOCAL ADIM     := {}
LOCAL NCOLUMN  := SELF:COLPOS()




IF VALTYPE(SELF:ACOLUMNS[NCOLUMN]:GETCOMMENT()) == "C"
	BCOMMENT := { || SELF:OBROWSE:GETCELLRECT(ADIM),SELF:COMMENTCONFIG(SELF:OBROWSE,SELF:ACOLUMNS[NCOLUMN]:GETCOMMENT(),NCOLUMN, .T. ,,ADIM[2]) }
ENDIF



IF VALTYPE(BCOMMENT) == "B"
	EVAL(BCOMMENT,SELF)
ENDIF

RETURN












FUNCTION ___FWBROWSE____WIDTHCOLUMNCONFIG(OPCENTER )
LOCAL OPANEL
LOCAL NI        := 0
LOCAL NLIN      := 5
LOCAL NCOLSAY   := 5
LOCAL NCOLGET   := 95
LOCAL NSIZE     := 0
LOCAL NTOTAL    := LEN(SELF:ACOLUMNS)
LOCAL CTITLE    := ""
LOCAL AWIDTH    := ARRAY(NTOTAL)
LOCAL OGET
IF !(VALTYPE(OPCENTER) $ SUBS("OBJECT",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"OPCENTER"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("OBJECT",1,1)+"->"+VALTYPE(OPCENTER)); ENDIF




IF VALTYPE(SELF:BCONFIGITEMCONFIRM) == "B"
	EVAL(SELF:BCONFIGITEMCONFIRM)
ENDIF




OPCENTER:FREECHILDREN()




FOR NI := 1 TO NTOTAL
	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		AWIDTH[NI] := SELF:ACOLUMNS[NI]:GETSIZE()
		IF VALTYPE(AWIDTH[NI]) == "U"
			AWIDTH[NI] := 0
		ENDIF
		NSIZE+=11
	ENDIF
NEXT
NSIZE+=20

 OPANEL := TSCROLLBOX():NEW(OPCENTER, 00, 00, 0, 0,.T.,.T.,.F. )
OPANEL:ALIGN := 5

FOR NI := 1 TO NTOTAL



	IF !SELF:ACOLUMNS[NI]:DELETED() .AND.  SELF:ACOLUMNS[NI]:GETTYPE() <> "M"
		IF SELF:ACOLUMNS[NI]:ISIMAGE()
			CTITLE := FWI18NLANG("FWBRWSTR","STR0029",29)
		ELSE
			CTITLE := SELF:ACOLUMNS[NI]:GETTITLE()
		ENDIF
		TSAY():NEW(NLIN+1,NCOLSAY,&("{||'" + CTITLE + "'}"), OPANEL,,,,,, .T. ,,,,,,,,,)
		OGET := TGET():NEW(NLIN,NCOLGET,&("{ | U | IF( PCOUNT() == 0, AWIDTH["+STR(NI)+"],AWIDTH["+STR(NI)+"] := U ) }"),OPANEL,20,08,"999",,,,, .F. ,, .T. ,, .F. ,, .F. , .F. ,{|| }, .F. , .F. ,,,,,, .T. )
		IF FWISTOUCH()
			OGET:NHEIGHT += 12
			IF FWCHKBUILD("7.00.120420A-20120529")
				OGET:LTABLET := .F. 
			ENDIF
			NLIN += 9
		ENDIF
		NLIN+=11
	ENDIF
NEXT




SELF:BCONFIGITEMCONFIRM := { || SELF:SETWIDTHCOLUMNS(AWIDTH) }

RETURN











FUNCTION ___FWBROWSE____GETOWNER( )
RETURN SELF:OOWNER











FUNCTION __FWBROWSE()
RETURN















STATIC FUNCTION RGB2COLOR(NCOLOR)

LOCAL NBLUE     := INT(NCOLOR/65536)
LOCAL NRESTBLUE := MOD(NCOLOR,65536)
LOCAL NGREEN    := INT(NRESTBLUE/256)
LOCAL NRED      := INT(MOD(NRESTBLUE,256))

RETURN { NRED, NGREEN, NBLUE }
















STATIC FUNCTION HASORD(CALIAS,CREADVAR,LCHANGEORD,OFWSEEK)
LOCAL NORD AS  NUMERIC
LOCAL AKEY AS  ARRAY
LOCAL LRET AS  LOGICAL
LOCAL CKEY AS  CHARACTER

NORD := 1
AKEY := {}
LRET := .F. 
CKEY := ""

IF !(VALTYPE(CALIAS) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CALIAS"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CALIAS)); ENDIF
IF !(VALTYPE(CREADVAR) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CREADVAR"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CREADVAR)); ENDIF
IF LCHANGEORD <> NIL .AND.  !(VALTYPE(LCHANGEORD) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"2"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LCHANGEORD"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LCHANGEORD)); ENDIF; LCHANGEORD := IF(LCHANGEORD == NIL, .F. ,LCHANGEORD)

IF !EMPTY(CREADVAR)
	WHILE !EMPTY((CALIAS)->(INDEXKEY(NORD)))
		AKEY := STRTOKARR((CALIAS)->(INDEXKEY(NORD)),"+")
		CKEY := ""
		IF "_FILIAL" $ AKEY[1]
			IF LEN(AKEY) > 1
				CKEY := AKEY[2]
			ENDIF
		ELSE
			CKEY := AKEY[1]
		ENDIF



		CKEY := FWPARSERFILTER(CKEY)
		IF CKEY == UPPER(TRIM(CREADVAR))
			IF LCHANGEORD
				(CALIAS)->(DBSETORDER(NORD))
				IF VALTYPE(OFWSEEK) == "O" .AND.  OFWSEEK:GETSEEKSTYLE() == 1
					OFWSEEK:CHANGEORDER(NORD, .T. )
				ENDIF
			ENDIF
			LRET := .T. 
			EXIT
		ENDIF
		NORD ++
	ENDDO
ENDIF

RETURN LRET














STATIC FUNCTION AJINIBRW(CINIBRW,CALIAS)

LOCAL NINICIO   := 0
LOCAL NFIM      := 0
LOCAL CSTRING   := 0
LOCAL CNEWALIAS := CALIAS





WHILE "XFILIAL"$UPPER(CINIBRW)
	NINICIO := AT("XFILIAL",UPPER(CINIBRW))
	NFIM    := 0
	IF NINICIO <> 0
		NFIM := 6
		CSTRING := SUBSTR(CINIBRW,NINICIO,NFIM+1)
		WHILE SUBSTR(CINIBRW,NINICIO+NFIM,1)<>")"
			IF NINICIO+NFIM >= LEN(CINIBRW)
				NFIM := 0
				EXIT
			ENDIF
			NFIM ++
			CSTRING += ALLTRIM(SUBSTR(CINIBRW,NINICIO+NFIM,1))
		ENDDO
		IF NFIM > 0
			IF "XFILIAL(" $ UPPER(CSTRING) .AND.  ")" $ CSTRING
				CNEWALIAS := STRTRAN(UPPER(CSTRING),"XFILIAL(","")
				CNEWALIAS := STRTRAN(UPPER(CNEWALIAS),")","")
				CNEWALIAS := STRTRAN(UPPER(CNEWALIAS),"'","")
				CNEWALIAS := STRTRAN(UPPER(CNEWALIAS),'"',"")
				IF EMPTY(CNEWALIAS)
					CNEWALIAS := CALIAS
				ENDIF
				IF EMPTY(XFILIAL(CNEWALIAS)) .OR.  EMPTY(XFILIAL(CALIAS))
					EXIT
				ELSE
					CSTRING := CALIAS+"->"+PREFIXOCPO(CALIAS)+"_FILIAL"
				ENDIF
			ENDIF
			CINIBRW := SUBSTR(CINIBRW,1,NINICIO-1)+CSTRING+SUBSTR(CINIBRW,NINICIO+NFIM+1)
		ENDIF
	ENDIF
	IF NFIM == 0
		EXIT
	ENDIF
ENDDO
RETURN(CINIBRW)









STATIC FUNCTION FWAJUSFILIAL(CALIAS1,CALIAS2,CTAG,CCPOFIL,CKEY)
LOCAL NEMPRESA  := LEN(FWSM0LAYOUT(CEMPANT,1))
LOCAL NUNIDADE  := LEN(FWSM0LAYOUT(CEMPANT,2))
LOCAL NFILIAL   := LEN(FWSM0LAYOUT(CEMPANT,3))
LOCAL CFIL      := ""
LOCAL CDBMS     := UPPER(TCGETDB())


IF FWMODEACCESS(CALIAS1,1) <> FWMODEACCESS(CALIAS2,1) .OR.  FWMODEACCESS(CALIAS1,2) <> FWMODEACCESS(CALIAS2,2) .OR.  FWMODEACCESS(CALIAS1,3) <> FWMODEACCESS(CALIAS2,3)
	IF NEMPRESA > 0
		IF FWMODEACCESS(CALIAS2,1) == "E"
			IF ( CDBMS == "ORACLE" ) .OR.  ( CDBMS == "INFORMIX" ) .OR.  ( CDBMS == "DB2" )
				CFIL += "SUBSTR("+CTAG+"."+CCPOFIL+",1,"+LTRIM(STR(NEMPRESA))+") = SUBSTR("+CKEY+",1,"+LTRIM(STR(NEMPRESA))+")"
			ELSE
				CFIL += "SUBSTRING("+CTAG+"."+CCPOFIL+",1,"+LTRIM(STR(NEMPRESA))+") = SUBSTRING("+CKEY+",1,"+LTRIM(STR(NEMPRESA))+")"
			ENDIF
		ENDIF
	ENDIF
	IF NUNIDADE > 0
		IF FWMODEACCESS(CALIAS2,2) == "E"
			IF !EMPTY(CFIL)
				CFIL += " AND "
			ENDIF
			IF ( CDBMS == "ORACLE" ) .OR.  ( CDBMS == "INFORMIX" ) .OR.  ( CDBMS == "DB2" )
				CFIL += "SUBSTR("+CTAG+"."+CCPOFIL+","+LTRIM(STR(NEMPRESA+1))+","+LTRIM(STR(NUNIDADE))+") = SUBSTR("+CKEY+","+LTRIM(STR(NEMPRESA+1))+","+LTRIM(STR(NUNIDADE))+")"
			ELSE
				CFIL += "SUBSTRING("+CTAG+"."+CCPOFIL+","+LTRIM(STR(NEMPRESA+1))+","+LTRIM(STR(NUNIDADE))+") = SUBSTRING("+CKEY+","+LTRIM(STR(NEMPRESA+1))+","+LTRIM(STR(NUNIDADE))+")"
			ENDIF
		ENDIF
	ENDIF
	IF FWMODEACCESS(CALIAS2,3) == "E"
		IF !EMPTY(CFIL)
			CFIL += " AND "
		ENDIF
		IF ( CDBMS == "ORACLE" ) .OR.  ( CDBMS == "INFORMIX" ) .OR.  ( CDBMS == "DB2" )
			CFIL += "SUBSTR("+CTAG+"."+CCPOFIL+","+LTRIM(STR(NEMPRESA+NUNIDADE+1))+","+LTRIM(STR(NFILIAL))+") = SUBSTR("+CKEY+","+LTRIM(STR(NEMPRESA+NUNIDADE+1))+","+LTRIM(STR(NFILIAL))+")"
		ELSE
			CFIL += "SUBSTRING("+CTAG+"."+CCPOFIL+","+LTRIM(STR(NEMPRESA+NUNIDADE+1))+","+LTRIM(STR(NFILIAL))+") = SUBSTRING("+CKEY+","+LTRIM(STR(NEMPRESA+NUNIDADE+1))+","+LTRIM(STR(NFILIAL))+")"
		ENDIF
	ENDIF
ELSE
	CFIL := CTAG+"."+CCPOFIL + " = " + CKEY
ENDIF

RETURN CFIL












FUNCTION ___FWBROWSE____SETIDALIAS(CIDALIAS )
SELF:CIDALIAS := CIDALIAS
RETURN NIL













STATIC FUNCTION FWCHGSEEK(AORDER,OFWSEEK)
LOCAL NI

IF !EMPTY(AORDER)
	FOR NI := 1 TO LEN(AORDER)
		OFWSEEK:ADEFAULTORDER[NI,4] := AORDER[NI]
	NEXT
ENDIF

RETURN










FUNCTION ___FWBROWSE____GETLEFTJOIN( )
RETURN SELF:ALEFTJOIN










FUNCTION ___FWBROWSE____GETBRWRELATION( )
RETURN SELF:ABRWRELATION










FUNCTION ___FWBROWSE____GETCHANGE( )
RETURN SELF:BCHANGE










FUNCTION ___FWBROWSE____UPDATERELATION( )
	LOCAL NBROWSE := 1

	IF LEN( SELF:ABRWRELATION ) > 0
		FOR NBROWSE := 1 TO LEN( SELF:ABRWRELATION )
			SELF:ABRWRELATION[NBROWSE]:REFRESH()
		NEXT
	ENDIF
RETURN












FUNCTION ___FWBROWSE____SETDODESTROY(LDODESTROY )
	SELF:LDODESTROY	:=	LDODESTROY
RETURN










FUNCTION ___FWBROWSE____DODESTROY( )

RETURN SELF:LDODESTROY











FUNCTION ___FWBROWSE____ISCFGEMPFIL( )

RETURN SELF:LCFGEMPFIL











FUNCTION ___FWBROWSE____SETCFGEMPFIL(LCFGEMPFIL )
IF LCFGEMPFIL <> NIL .AND.  !(VALTYPE(LCFGEMPFIL) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LCFGEMPFIL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LCFGEMPFIL)); ENDIF; LCFGEMPFIL := IF(LCFGEMPFIL == NIL, .T. ,LCFGEMPFIL)

SELF:LCFGEMPFIL	:=	LCFGEMPFIL

RETURN











STATIC FUNCTION CONVOPERA(AFORMAT,CFILTRO,AOPERA)
LOCAL NI		:= 0
LOCAL NPOS		:= 0
LOCAL CCAMPO	:= ""
LOCAL CFILOK	:= ""
LOCAL CMARK		:= ""
LOCAL UVALOR	:= ""
LOCAL CFIELD	:= ""
LOCAL COPERA	:= ""
LOCAL CEXPRESS	:= ""
CFILTRO := ALLTRIM(CFILTRO)
CFILTRO := STRTRAN(CFILTRO,"'","")
CFILTRO := STRTRAN(CFILTRO,"%","")
FOR NI := 1 TO LEN(AFORMAT[8])
	CCAMPO := ALLTRIM(AFORMAT[9,AFORMAT[8,NI,1]])

	IF AFORMAT[8,NI,2,3] == "D"
		AFORMAT[8,NI,2,13] := ""
	END
	IF EMPTY(AFORMAT[8,NI,2,13]) .AND.  EMPTY(CCAMPO)

		CCAMPO := ""
		WHILE EMPTY(CCAMPO)
			NPOS := 1
			WHILE ! SUBSTR(CFILTRO,NPOS,1) $ " =><()"
				CCAMPO += SUBSTR(CFILTRO,NPOS,1)
				NPOS++
			END
			IF CCAMPO $ "(/AND/OR/)" .OR.  EMPTY(CCAMPO)
				CFILOK += CCAMPO + " "
				CFILTRO := SUBSTR(CFILTRO,NPOS+1)
				CCAMPO := ""
				LOOP
			END
		END

	END

	IF AFORMAT[8,NI,2,3] == "N"
		CMARK := ""
	ELSE
		CMARK := "'"
	END

	IF !EMPTY(CCAMPO)
		CFILOK += SUBSTR(CFILTRO,1,AT(CCAMPO,CFILTRO)+LEN(CCAMPO)-1)
		CFILTRO := SUBSTR(CFILTRO,AT(CCAMPO,CFILTRO)+LEN(CCAMPO))
		CFIELD	:= ""
		COPERA	:= ""
		CFIELD := CCAMPO



		IF LEFT(CFILTRO,1) == "="
			CFILOK += "="
			COPERA := "=="
		ELSEIF LEFT(CFILTRO,2) == "<>"
			CFILOK += "<>"
			COPERA := "!="
		ELSEIF LEFT(CFILTRO,2) == "<="
			CFILOK += "<="
			COPERA := "<="
		ELSEIF LEFT(CFILTRO,1) == "<"
			CFILOK += "<"
			COPERA := "<"
		ELSEIF LEFT(CFILTRO,2) == ">="
			CFILOK += ">="
			COPERA := ">="
		ELSEIF LEFT(CFILTRO,1) == ">"
			CFILOK += ">"
			COPERA := ">"
		ELSEIF LEFT(CFILTRO,9) == " NOT LIKE"
			CFILOK += " NOT LIKE"
			COPERA := "!."
		ELSEIF LEFT(CFILTRO,5) == " LIKE"
			CFILOK += " LIKE"
			COPERA := ".."
		ELSEIF LEFT(CFILTRO,7) == " NOT IN"
			CFILOK += " NOT IN"
			COPERA := "!X"
		ELSEIF LEFT(CFILTRO,3) == " IN"
			CFILOK += " IN"
			COPERA := "$"
		END
		IF EMPTY(AFORMAT[8,NI,2,13]) .OR.  VALTYPE(AFORMAT[8,NI,2,13]) <> "N"

			IF COPERA $ "$/!X"
				CFILOK += " (" + CMARK+"%"+ALLTRIM(CCAMPO)+ALLTRIM(STR(NI-1))+"%"+CMARK + ") "
			ELSE
				CFILOK += " " + CMARK+"%"+ALLTRIM(CCAMPO)+ALLTRIM(STR(NI-1))+"%"+CMARK + " "
			END
			CEXPRESS := "%"+ALLTRIM(CCAMPO)+ALLTRIM(STR(NI-1))+"%"
			CFILTRO := SUBSTR(CFILTRO,AT( STRZERO(NI,3),CFILTRO )+5)
			AADD(AOPERA,{CFIELD,"FIELD"} )
			AADD(AOPERA,{COPERA,"OPERATOR"} )
			AADD(AOPERA,{CEXPRESS,"EXPRESSION"} )
		ELSE
			UVALOR := AFORMAT[8,NI,2,13]

			IF VALTYPE(UVALOR) == "N"
				UVALOR := STR(UVALOR)
			END


			IF AT(".",UVALOR) < RAT(",",UVALOR)
				UVALOR := STRTRAN(UVALOR,".","")
				UVALOR := STRTRAN(UVALOR,",",".")
			END
			CFILOK += CMARK+UVALOR+CMARK + " "
		END
	ELSE
		CFILOK += SUBSTR(CFILTRO,1,1)
		CFILTRO := SUBSTR(CFILTRO,2)
	END
NEXT
CFILOK := STRTRAN(CFILOK, "''", "'" )
CFILOK := STRTRAN(CFILOK, "'%'%", "'%" )
CFILOK := STRTRAN(CFILOK, "%'%'", "%'" )
CFILOK := "@" + CFILOK
RETURN CFILOK

















FUNCTION ___FWBROWSE____GETINDFIELDS(CTABLE2,CVALIDTYPE,AORDER )

LOCAL AIDXFIELDS := {}
LOCAL AFIELDS    := {}
LOCAL AINFO      := {}
LOCAL AFIELDSIND := {}
LOCAL AORDERINFO := {}
LOCAL AFIELDINFO

LOCAL CINDEXKEY  := ""
LOCAL CDESC      := ""
LOCAL CTYPE      := ""
LOCAL CTABLE     := SELF:ALIAS()

LOCAL LFASTLOCATE

LOCAL NIND       := 1
LOCAL NLOOP      := 0
LOCAL NFIELDPOS  := 0
LOCAL NORDERPOS  := 0
LOCAL NCOLPOS
LOCAL NFOR
LOCAL NTAMFIELD

LOCAL OCOLUMN

CVALIDTYPE := IF( CVALIDTYPE == NIL, "", CVALIDTYPE ) ;




FOR NFOR := 1 TO LEN(AORDER)
	IF LEN(AORDER[NFOR][2]) >= 7
		AADD( AORDERINFO , NFOR )
	ENDIF
NEXT




WHILE NIND <= 36




	CINDEXKEY := ( CTABLE )->( INDEXKEY( NIND ) )

	IF EMPTY( CINDEXKEY )

		EXIT

	ELSE





			CINDEXKEY := UPPER( SQLORDER( CINDEXKEY ) )


		AFIELDSIND := STRTOKARR( CINDEXKEY, "," )

		FOR NFOR := 1 TO LEN(AFIELDSIND)
			IF ASCAN( AFIELDS , { |X| X == AFIELDSIND[NFOR] } ) == 0
				AADD(AFIELDS, ALLTRIM(AFIELDSIND[NFOR]) )
			ENDIF
		NEXT

	ENDIF
	NIND++
ENDDO

FOR NLOOP := 1 TO LEN( AFIELDS )
	OCOLUMN := NIL
	NFIELDPOS := ( CTABLE )->( FIELDPOS( AFIELDS[ NLOOP ] ) )
	IF (NCOLPOS := ASCAN( SELF:ACOLUMNS , {|X| ALLTRIM(X:READVAR()) == AFIELDS[ NLOOP ] } )) > 0
		OCOLUMN := SELF:ACOLUMNS[NCOLPOS]
	ENDIF




	FOR NFOR := 1 TO LEN(AORDERINFO)
		AINFO := ACLONE( AORDER[ AORDERINFO[NFOR] , 2 ] )
		NORDERPOS := ASCAN( AINFO, { |X| ALLTRIM( X[7] ) == AFIELDS[ NLOOP ] } )
		IF NORDERPOS > 0
			EXIT
		ENDIF
	NEXT

	IF NORDERPOS > 0
		CTYPE := AINFO[ NORDERPOS, 2 ]
		CDESC := AINFO[ NORDERPOS, 5 ]
		NTAMFIELD := AINFO[ NORDERPOS , 3 ]
	ELSE
		AFIELDINFO := SELF:GETFIELDINFO( AFIELDS[ NLOOP ] )
		CTYPE := AFIELDINFO[1]
		CDESC := AFIELDINFO[2]
		NTAMFIELD := AFIELDINFO[3]
	ENDIF

	IF EMPTY( CVALIDTYPE ) .OR.  CTYPE $ CVALIDTYPE
		LFASTLOCATE := NTAMFIELD <> NIL .AND.  SELF:FIELDISFASTLOCATE(AFIELDS[ NLOOP ],CTYPE,IIF(OCOLUMN<>NIL,OCOLUMN:GETPICTURE(),""))
		AADD( AIDXFIELDS, { AFIELDS[ NLOOP ], CDESC + IIF(LFASTLOCATE,"*",""), CTYPE, NTAMFIELD, LFASTLOCATE , NIL} )
	ENDIF

NEXT




AFIELDS := SELF:GETLEFTJOIN()
FOR NLOOP := 1 TO LEN(AFIELDS)
	OCOLUMN := NIL
	NFIELDPOS := ( CTABLE )->( FIELDPOS( AFIELDS[NLOOP][04] ) )
	IF (NCOLPOS := ASCAN( SELF:ACOLUMNS , {|X| ALLTRIM(X:READVAR()) == ALLTRIM(AFIELDS[NLOOP][04]) } )) > 0
		OCOLUMN := SELF:ACOLUMNS[NCOLPOS]
	ENDIF
	IF OCOLUMN <> NIL
		AADD( AIDXFIELDS, { AFIELDS[NLOOP][02], OCOLUMN:GETTITLE()+"'", OCOLUMN:GETTYPE(), OCOLUMN:GETSIZE(), .F.  , AFIELDS[NLOOP]})
	ENDIF

NEXT

RETURN AIDXFIELDS
















FUNCTION ___FWBROWSE____FIELDISFASTLOCATE(CFIELD,CTIPO,CMASC )

LOCAL LRETURN 	:= .F. 

IF CTIPO == "C"
	IF !EMPTY(CMASC)
		CMASC := UPPER(CMASC)
		LRETURN := !("A"$CMASC .OR.  "N"$CMASC .OR.  "X"$CMASC .OR.  "!"$CMASC)
	ENDIF
ENDIF
RETURN(LRETURN)

















FUNCTION ___FWBROWSE____GETFIELDINFO(CFIELD )
LOCAL NFIELDPOS := 0
LOCAL NCOLPOS
LOCAL OCOLUMN
LOCAL AFIELDINFO := ARRAY(3)
IF SELF:DATATABLE()
	NFIELDPOS := ( SELF:ALIAS() )->( FIELDPOS( CFIELD ) )
ENDIF
IF (NCOLPOS := ASCAN( SELF:ACOLUMNS , {|X| ALLTRIM(X:READVAR()) == CFIELD } )) > 0
 OCOLUMN := SELF:ACOLUMNS[NCOLPOS]
ENDIF

IF OCOLUMN <> NIL
	AFIELDINFO[1] := OCOLUMN:GETTYPE()
	AFIELDINFO[2] := OCOLUMN:GETTITLE()
	AFIELDINFO[3] := OCOLUMN:GETSIZE()
ELSE
	AFIELDINFO[1] := ( SELF:ALIAS() )->( DBFIELDINFO(2,NFIELDPOS) )
	AFIELDINFO[2] := ALLTRIM( CFIELD )
	AFIELDINFO[3] := NIL
ENDIF

RETURN AFIELDINFO
















FUNCTION ___FWBROWSE____SETDISABLEADJUST(LADJUST )
IF LADJUST <> NIL .AND.  !(VALTYPE(LADJUST) $ SUBS("LOGICAL",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"LADJUST"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("LOGICAL",1,1)+"->"+VALTYPE(LADJUST)); ENDIF; LADJUST := IF(LADJUST == NIL, .T. ,LADJUST)
SELF:LADJUST := LADJUST
RETURN













FUNCTION ___FWBROWSE____CHECKEMPTY( )



	IF SELF:OBROWSEUI:HASEMPTYMSG()



		IF SELF:ODATA:ISEMPTY() .AND.  (SELF:LFILTRATE .OR.  LEN(SELF:AEMPTYMESSAGE) > 1)
			IF !SELF:OBROWSEUI:ISVISIBLEEMPTYMSG()
			SELF:OBROWSEUI:HIDEBROWSE()
			SELF:UPDEMPTYMESSAGE()
			SELF:OBROWSEUI:SHOWEMPTYMSG()
			ENDIF
		ELSE
			IF SELF:OBROWSEUI:ISVISIBLEEMPTYMSG()
			SELF:OBROWSEUI:HIDEEMPTYMSG()
			SELF:SHOWBROWSE()
			ENDIF
		ENDIF
	ENDIF
RETURN










FUNCTION ___FWBROWSE____SHOWBROWSE( )
	SELF:OBROWSEUI:SHOWBROWSE()



	SELF:TOTALCHANGE()
RETURN











FUNCTION ___FWBROWSE____UPDEMPTYMESSAGE( )
	IF SELF:OBROWSEUI:HASEMPTYMSG()
		IF SELF:LFILTRATE
			SELF:OBROWSEUI:SETEMPTYTITLE(FWI18NLANG("FWBRWSTR","STR0080",80))
			SELF:OBROWSEUI:SETEMPTYMSG(FWI18NLANG("FWBRWSTR","STR0081",81))
		ELSE
			SELF:OBROWSEUI:SETEMPTYTITLE(SELF:AEMPTYMESSAGE[1])
			SELF:OBROWSEUI:SETEMPTYMSG(SELF:AEMPTYMESSAGE[2])
		ENDIF
	ENDIF
RETURN












FUNCTION ___FWBROWSE____SETEMPTYMESSAGE(AMESSAGE )
	SELF:AEMPTYMESSAGE := AMESSAGE
RETURN















FUNCTION ___FWBROWSE____SETTOTALDEFAULT(CID,CTYPE,CTITLE,CMASK )
LOCAL NPOS
LOCAL OTOTAL
	IF __LISP12
		OTOTAL := FWBRWTOTAL():NEW(CID , CTYPE, CTITLE, CMASK)
		IF (NPOS := ASCAN(SELF:ATOTALDEFAULT, { |X| X:GETID() == CID } )) > 0
			SELF:ATOTALDEFAULT[NPOS] := NIL
			SELF:ATOTALDEFAULT[NPOS] := OTOTAL
		ELSE
			AADD(SELF:ATOTALDEFAULT ,  OTOTAL )
		ENDIF
	ENDIF
RETURN










FUNCTION ___FWBROWSE____INITTOTALS( )
LOCAL NFOR
LOCAL OCOLUMN
LOCAL NCOLUMN
LOCAL CID
LOCAL NPOS
LOCAL NI

	IF SELF:ATOTAL <> NIL .AND.  LEN(SELF:ATOTAL) < LEN(SELF:ACOLUMNS)
		FOR NI := 1 TO LEN(SELF:ACOLUMNS)
			IF SELF:ACOLUMNS[NI]:GETID() <> NIL .AND.  ASCAN(SELF:ATOTAL, { |X| X:GETID() == SELF:ACOLUMNS[NI]:GETID() } ) == 0
				AADD(SELF:ATOTAL,NIL)
				AINS(SELF:ATOTAL, NI)
				SELF:ATOTAL[NI] := FWBRWTOTAL():NEW()
				SELF:ATOTAL[NI]:SETID(SELF:ACOLUMNS[NI]:GETID())
			ENDIF
		NEXT
	ENDIF

	IF !(VALTYPE(SELF:ATOTAL) == "A") .AND.  LEN(SELF:ATOTALDEFAULT) > 0
		SELF:ATOTAL := {}
		FOR NFOR := 1 TO LEN(SELF:ACOLUMNS)
			AADD(SELF:ATOTAL,FWBRWTOTAL():NEW())
			ATAIL(SELF:ATOTAL):SETID(SELF:ACOLUMNS[NFOR]:GETID())
		NEXT
	ENDIF
	FOR NFOR := 1 TO LEN(SELF:ATOTALDEFAULT)
		CID := SELF:ATOTALDEFAULT[NFOR]:GETID()
		OCOLUMN := SELF:GETCOLBYID(CID)




		IF OCOLUMN <> NIL



			NPOS := ASCAN(SELF:ATOTAL, {|X| X:GETID() == CID })



			IF NPOS == 0
				 NPOS := OCOLUMN:GETORDER()
			ENDIF

			IF NPOS <= LEN(SELF:ATOTAL) .AND.  EMPTY(SELF:ATOTAL[NPOS]:GETTYPE())
				SELF:ATOTAL[NPOS] := NIL
				SELF:ATOTAL[NPOS] := SELF:ATOTALDEFAULT[NFOR]
			ENDIF
		ENDIF
	NEXT
RETURN














FUNCTION ___FWBROWSE____GETCOLBYID(CID )
LOCAL NPOS

	NPOS := ASCAN(SELF:ACOLUMNS, { |X| X:GETID() == CID })

RETURN IIF(NPOS > 0 , SELF:ACOLUMNS[NPOS], NIL)














FUNCTION ___FWBROWSE____GETCOLBYGRIDID(NID )
LOCAL NPOS

	NPOS := ASCAN(SELF:ACOLUMNS, { |X| X:GETGRIDID() == NID })

RETURN IIF(NPOS > 0 , SELF:ACOLUMNS[NPOS], NIL)














FUNCTION ___FWBROWSE____GETTOTBYID(CID )
LOCAL NPOS := 0
IF !EMPTY(CID)
	NPOS := ASCAN(SELF:ATOTAL, { |X| X <> NIL .AND.  X:GETID() == CID })
ENDIF

RETURN IIF(NPOS > 0 , SELF:ATOTAL[NPOS], NIL)











FUNCTION ___FWBROWSE____CHECKFILTRATE( )
	IF SELF:FILTRATE()
		SELF:OBROWSEUI:SHOWFILTRATE()
	ELSE
		SELF:OBROWSEUI:HIDEFILTRATE()
	ENDIF
RETURN










FUNCTION ___FWBROWSE____VERIFYLAYOUT( )
LOCAL LSIZE := .F. 
LOCAL AORDBRW := {}
LOCAL NFOR
LOCAL LCANGETSIZE := (__CBUILDAPPSERVER > "7.00.131227A-20140129")
LOCAL ASIZECOL
LOCAL NMIN
LOCAL OCOLUMN
LOCAL AAUX := {}
IF __LISP12
	IF SELF:LCHECKLAYOUT
		IF LCANGETSIZE
			ASIZECOL := SELF:OBROWSE:GETCOLUMNSSIZE()



			NMIN := MIN(LEN(SELF:ABKPSIZECOL),LEN(ASIZECOL)) - 1
			FOR NFOR := 1 TO NMIN
				IF ASIZECOL[NFOR] <> SELF:ABKPSIZECOL[NFOR]
					LSIZE := .T. 
					EXIT
				ENDIF
			NEXT
		ENDIF

		IF LSIZE



			SELF:OBROWSE:COLORDER(AORDBRW)




			FOR NFOR:= 1 TO LEN(AORDBRW)
				OCOLUMN := SELF:GETCOLBYGRIDID(AORDBRW[NFOR])
				IF OCOLUMN <> NIL
					 AADD(AAUX, {OCOLUMN:GETID(), ASIZECOL[NFOR]})
				ENDIF
			NEXT



			SELF:OCONFIG:AWIDTH := ACLONE(AAUX)



			SELF:SAVE()

		ENDIF
	ENDIF
ENDIF
RETURN










FUNCTION ___FWBROWSE____GETSEEK( )
RETURN SELF:OBROWSEUI:GETSEEK()










FUNCTION ___FWBROWSE____SETCHKLAYOUT(LCHECKLAYOUT )
	SELF:LCHECKLAYOUT := LCHECKLAYOUT
RETURN












FUNCTION ___FWBROWSE____CANLOCSEEK( )
	LOCAL LRET := .F. 




	IF !SELF:LLOOKUP .AND.  !SELF:LDATAARRAY



		IF EMPTY( SELF:CALIAS )
			IF ( SELECT( ALIAS() ) > 0 )
				LRET := ( ALIAS() )->( RDDNAME() ) == "TOPCONN"
			ENDIF
		ELSE
			IF ( SELECT( SELF:CALIAS ) > 0 )
				LRET := ( SELF:CALIAS )->( RDDNAME() ) == "TOPCONN"
			ENDIF
		ENDIF
	ENDIF

RETURN( LRET )










FUNCTION ___FWBROWSE____SAVEONPROFILE(APROFILE )
LOCAL OPROFILE
	OPROFILE:= FWPROFILE():NEW()
	OPROFILE:SETTASK("PROTHEUS")
	OPROFILE:SETTYPE(IF(SUBSTR(SELF:GETPROFILEID(),1,4)=="FWLK","BRW","BROWSE")+SELF:GETPROFILEID())
	OPROFILE:SETPROFILE(APROFILE)
	OPROFILE:SAVE(SELF:ISCFGEMPFIL())
RETURN











FUNCTION ___FWBROWSE____CLEARFILTER(NOPTION,CFUNCTION )
IF !(VALTYPE(NOPTION) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NOPTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NOPTION)); ENDIF
IF CFUNCTION <> NIL .AND.  !(VALTYPE(CFUNCTION) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CFUNCTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CFUNCTION)); ENDIF; CFUNCTION := IF(CFUNCTION == NIL,"",CFUNCTION)

	SELF:NRECNOATU := RECNO()
	SELF:ARECBRWRELA := {}

	IF SELF:DATATABLE() .AND.  ((UPPER(SUBS(CFUNCTION,1,7)) == "VIEWDEF" .OR.  NOPTION <> 1) .AND.  NOPTION <> 8)
		SELF:DATA():FORCECLEANFILTER()



		CLEFILRELATION( SELF:GETBRWRELATION(), @SELF:ARECBRWRELA )
	ENDIF
RETURN










FUNCTION ___FWBROWSE____RESTOREFILTER(NOPTION,CFUNCTION,NRECNO )
IF !(VALTYPE(NOPTION) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NOPTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NOPTION)); ENDIF
IF CFUNCTION <> NIL .AND.  !(VALTYPE(CFUNCTION) $ SUBS("CHARACTER",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"CFUNCTION"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("CHARACTER",1,1)+"->"+VALTYPE(CFUNCTION)); ENDIF; CFUNCTION := IF(CFUNCTION == NIL,"",CFUNCTION)
IF NRECNO <> NIL .AND.  !(VALTYPE(NRECNO) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"1"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NRECNO"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NRECNO)); ENDIF; NRECNO := IF(NRECNO == NIL,0,NRECNO)

	IF !EMPTY(NRECNO)
		SELF:NRECNOATU := NRECNO
	ENDIF

	IF !EMPTY(SELF:ALIAS())
		DBSELECTAREA(SELF:ALIAS())
		IF UPPER(SUBS(CFUNCTION,1,7)) == "VIEWDEF" .OR.  NOPTION <> 1



			IF NOPTION == 3 .OR.  NOPTION == 9
				SELF:NRECNOATU := RECNO()
				NRECNO := RECNO()
			ENDIF



			IF SELF:DATATABLE() .AND.  ( UPPER(SUBS(CFUNCTION,1,7)) == "VIEWDEF" .OR.  NOPTION <> 1 )
				SELF:DATA():RESTOREFILTER()
				SELF:EXECUTEFILTER( .F. )



				RESFILRELATION( SELF:GETBRWRELATION(), @SELF:ARECBRWRELA )
			ENDIF
			DBSELECTAREA(SELF:ALIAS())
			DBGOTO(SELF:NRECNOATU)
		ENDIF
	ENDIF

	ASIZE(SELF:ARECBRWRELA, 0)
	SELF:NRECNOATU := 0
RETURN
















STATIC FUNCTION LOADTOTALS(APROFILETOT)
LOCAL ATOTAL := {}
LOCAL NFOR
	FOR NFOR :=  1 TO LEN(APROFILETOT)
		AADD(ATOTAL , FWBRWTOTAL():NEW())
		IF VALTYPE(APROFILETOT[NFOR]) == "A"
			ATOTAL[NFOR]:SETTITLE(APROFILETOT[NFOR][1])
			ATOTAL[NFOR]:SETTYPE(APROFILETOT[NFOR][2])
			IF LEN(APROFILETOT[NFOR]) > 4
				ATOTAL[NFOR]:SETMASK(APROFILETOT[NFOR][5])
			ENDIF
			IF LEN(APROFILETOT[NFOR]) > 5
				ATOTAL[NFOR]:SETID(APROFILETOT[NFOR][6])
			ENDIF
		ENDIF
	NEXT

RETURN ACLONE(ATOTAL)















STATIC FUNCTION TOTALTOARR(ATOTAL)
LOCAL NFOR
LOCAL APROFILETOT := {}
	FOR NFOR := 1 TO LEN(ATOTAL)
		IF ATOTAL[NFOR] <> NIL
			AADD(APROFILETOT , ATOTAL[NFOR]:GETMEINARR() )
		ELSE
			AADD(APROFILETOT , NIL )
		END
	NEXT
RETURN APROFILETOT













STATIC FUNCTION VALIDNEWCOLUMN(CTITLE,CDATA,CTYPE,CPICTURE,CALIGN,NWIDTH,CEDIT,CVALID,CIMAGE,CREADVAR,CID)
LOCAL LVALID := .T. 

	IF EMPTY(CTITLE) .OR. EMPTY(CDATA)
		ALERT(FWI18NLANG("FWBRWSTR","STR0075",75))
		LVALID := .F. 
	ELSEIF EMPTY(CREADVAR) .AND.  EMPTY(CID)
		ALERT(FWI18NLANG("FWBRWSTR","STR0082",82))
		LVALID := .F. 
	ENDIF

RETURN LVALID













STATIC FUNCTION CAPTION(OPANEL,CCAPTION)

LOCAL OFONTTITLE := TFONT():NEW("TAHOMA",,-16, .T. )
LOCAL OPANELTITLE

OPANELTITLE := TPANEL():NEW(0,0,CCAPTION,OPANEL,OFONTTITLE,,,,,0,16)

	OPANELTITLE:ALIGN := 3


	OPANELTITLE:SETCSS( FWCSSVERIFY( GETCLASSNAME(OPANELTITLE), "QLABEL", "QLABEL{MARGIN:5PX; MARGIN-RIGHT:0PX; BACKGROUND-COLOR:"+ "QLINEARGRADIENT(X1: 0, Y1: 0, X2: 1, Y2: 0, STOP: 0 #A7A6AA, STOP: 1.0 #EBE9ED);}"))

RETURN













STATIC FUNCTION CLEFILRELATION( ARELATION, ARECBRWRELA )
LOCAL NX        := 1
LOCAL CALIAS    := ""
LOCAL OBRW

FOR NX := 1 TO LEN( ARELATION )
	OBRW := ARELATION[NX]



	IF OBRW:DATATABLE()
		CALIAS    := OBRW:ALIAS()
		AADD( ARECBRWRELA, { CALIAS, (CALIAS)->( RECNO() ) } )
		OBRW:DATA():FORCECLEANFILTER()
	ENDIF

	CLEFILRELATION(OBRW:GETBRWRELATION(), @ARECBRWRELA)
NEXT

RETURN NIL













STATIC FUNCTION RESFILRELATION( ARELATION, ARECBRWRELA )
LOCAL NX := 1
LOCAL NPOS := 0
LOCAL OBRW

FOR NX := 1 TO LEN( ARELATION )
	OBRW := ARELATION[NX]




	IF OBRW:DATATABLE()
		OBRW:DATA():RESTOREFILTER()
		OBRW:EXECUTEFILTER( .F. )
		IF ( NPOS := ASCAN( ARECBRWRELA, { |AX| AX[1] == OBRW:ALIAS() } ) ) > 0
			(ARECBRWRELA[NPOS][1])->( DBGOTO( ARECBRWRELA[NPOS][2] ) )
		ENDIF
	ENDIF

	RESFILRELATION( OBRW:GETBRWRELATION(), @ARECBRWRELA )
NEXT

RETURN NIL













FUNCTION ___FWBROWSE____UPDVISIBRW( )

LOCAL NADJUST := 0






	SELF:OBROWSE:READCLIENTCOORS( .T. , .T. )
	SELF:OBROWSE:READCLIENTCOORS( .T. , .T. )

	IF SELF:LADJUST
		NADJUST := SELF:OBROWSEUI:NHEIGHTHEADERTGRID / 2
	ENDIF

	SELF:NVISIBLEROWS  := ROUND((SELF:OBROWSE:NHEIGHT-NADJUST)/SELF:NROWHEIGHT,0)

	IF SELF:NVISIBLEROWS < 1



		OMAINWND:READCLIENTCOORS()

		SELF:NVISIBLEROWS := INT((OMAINWND:NHEIGHT-NADJUST)/SELF:NROWHEIGHT)

	ENDIF
	SELF:NVISIBLEROWS := SELF:NVISIBLEROWS -1
	SELF:NPOSSIBLEROWS := SELF:NVISIBLEROWS
	IF !("DIALOG" $ SELF:OOWNER:CLASSNAME() .OR.  "WINDOW" $ SELF:OOWNER:CLASSNAME())
		SELF:NPOSSIBLEROWS := INT((SELF:OOWNER:OWND:NHEIGHT-NADJUST)/SELF:NROWHEIGHT)
	ENDIF

RETURN










FUNCTION ___FWBROWSE____REFRESHSEEK(NOPER )

IF NOPER == 1
	IF SELF:GETSEEK() <> NIL
		SELF:GETSEEK():HIDE()
		SELF:GETSEEK():DESTROY()
		SELF:GETSEEK() := NIL
	ENDIF
ELSE
	SELF:OBROWSEUI:CREATESEEK()
	SELF:AFTERCONTENTCREATE()
	SELF:OBROWSEUI:ACTIVATE()
ENDIF
RETURN










FUNCTION ___FWBROWSE____GETALIAS( )
RETURN SELF:CALIAS











FUNCTION ___FWBROWSE____DISABLEORDER( )
  SELF:LORDERCOL:= .F. 
RETURN











FUNCTION ___FWBROWSE____GETFILTEREXPRESSION( )
	LOCAL CFILTER         := ""
	LOCAL CFILTERRELATION := ""


	CFILTER := TCINTERNAL(20)

	CFILTERRELATION := TCSQLFILTER()



	IF !EMPTY(CFILTERRELATION) .AND.  LEN(CFILTERRELATION) > 1
		CFILTER += " AND (" + SUBSTR(CFILTERRELATION,2,LEN(CFILTERRELATION)) + ") "
	ENDIF





	IF SUBSTR( CFILTER , 1 , 4 ) == " AND"
		CFILTER := SUBSTR( CFILTER , 5 , LEN(CFILTER) )
	ENDIF



RETURN CFILTER











FUNCTION ___FWBROWSE____APPLYLEFTJOIN( )
LOCAL CFILTER
LOCAL NORDER
LOCAL NI
IF !EMPTY(SELF:ALEFTJOIN)
	SELF:SETCANSAVEAREA( .T. )
	CFILTER := (SELF:CALIAS)->(DBFILTER())
	NORDER := (SELF:CREALALIAS)->(INDEXORD())



	DBCHANGEALIAS(SELF:CREALALIAS,SELF:CREALALIAS+"_"+SELF:CIDALIAS+"_MAIN")
	FOR NI := 1 TO LEN(SELF:ALEFTJOIN)
		TCINTERNAL(19,SELF:ALEFTJOIN[NI,1]+";"+SELF:ALEFTJOIN[NI,2]+";"+SELF:ALEFTJOIN[NI,3])
	NEXT



	CHKFILE(SELF:CREALALIAS,,,,,,, , , .T.  )
	(SELF:CREALALIAS)->(DBSETORDER(NORDER))
	IF !EMPTY(CFILTER)
		(SELF:CREALALIAS)->(&("DBSETFILTER({|| "+CFILTER+"},'"+STRTRAN(CFILTER,"'",'"')+"')"))
	ENDIF
ENDIF

RETURN









FUNCTION ___FWBROWSE____SETAPPLYFILTERONACTIVATE(LAPPLY )
LOCAL LOLDVALUE := SELF:LAPPLYFILTERONACTIVATE

IF VALTYPE(LAPPLY) == "L"
	SELF:LAPPLYFILTERONACTIVATE := LAPPLY
ENDIF
RETURN LOLDVALUE











FUNCTION ___FWBROWSE____SAVESRCALIAS( )
IF EMPTY(SELF:CSVSRCALIAS)
	SELF:CSVSRCALIAS := SELF:CREALALIAS+"_BEFORE"+CVALTOCHAR(SECONDS())
	SELF:NSVSRCRECNO := (SELF:CREALALIAS)->(RECNO())
	SELF:NSVSRCORDER := (SELF:CREALALIAS)->(INDEXORD())

	DBCHANGEALIAS(SELF:CREALALIAS,SELF:CSVSRCALIAS)
	DBSELECTAREA(SELF:CREALALIAS)
ENDIF
RETURN










FUNCTION ___FWBROWSE____RESTORESRCALIAS( )
IF !EMPTY(SELF:CSVSRCALIAS)
	(SELF:CREALALIAS)->(DBCLOSEAREA())
	DBCHANGEALIAS(SELF:CSVSRCALIAS, SELF:CREALALIAS)
	DBSELECTAREA(SELF:CREALALIAS)
	(SELF:CREALALIAS)->(DBSETORDER(SELF:NSVSRCORDER))
	(SELF:CREALALIAS)->(DBGOTO(SELF:NSVSRCRECNO))
ENDIF
RETURN











FUNCTION ___FWBROWSE____SETCANSAVEAREA(LSET )
	LOCAL LOLDVALUE := SELF:LCANSAVEAREA

	IF VALTYPE(LSET) == "L" .AND.  LSET
		IF SELF:DATATABLE()
			SELF:LCANSAVEAREA := LSET
		ELSE
			USEREXCEPTION( FWI18NLANG("FWBRWSTR","STR0084",84) )
		ENDIF
	ENDIF
RETURN LOLDVALUE












FUNCTION ___FWBROWSE____SETCOLPOS(NCOL )
IF NCOL <> NIL .AND.  !(VALTYPE(NCOL) $ SUBS("NUMERIC",1,1)); USEREXCEPTION(FWI18NLANG("PARMTYPECH","STR0001",1)+"0"+FWI18NLANG("PARMTYPECH","STR0002",2)+"NCOL"+FWI18NLANG("PARMTYPECH","STR0003",3)+SUBS("NUMERIC",1,1)+"->"+VALTYPE(NCOL)); ENDIF; NCOL := IF(NCOL == NIL,1,NCOL)

SELF:OBROWSE:GOCOLUMN(NCOL)
RETURN












FUNCTION ___FWBROWSE____GOTOARRAYINITIALLINE(NLINE )
LOCAL LRET 		:= .F. 

IF !SELF:DATAQUERY() .AND.  !SELF:DATATABLE() .AND.  !SELF:DATATEXT() .AND.  NLINE > 1
	SELF:NAT := NLINE
	SELF:NCURSORPOS := NLINE-1
	SELF:SELECTROW( SELF:NCURSORPOS )
	SELF:REFRESH()
ENDIF

RETURN LRET











FUNCTION ___FWBROWSE____GETUNIQUEKEY( )
RETURN ACLONE( AUNIQUEKEY )











FUNCTION ___FWBROWSE____SETUNIQUEKEY(ASETKEY )
LOCAL LRETURN := .F. 
LOCAL NI := 0
LOCAL CTIPO := ""

IF VALTYPE( ASETKEY ) == "A" .AND.  LEN(ASETKEY) > 0
	IF SELF:DATAQUERY()
		CTIPO := "C"
	ELSEIF SELF:DATAARRAY()
		CTIPO := "N"
	ENDIF




	FOR NI := 1 TO LEN(ASETKEY)
		IF VALTYPE(ASETKEY[NI])==CTIPO
			LRETURN := .T. 
		ELSE
			LRETURN := .F. 
			EXIT
		ENDIF
	NEXT


	IF LRETURN
		SELF:AUNIQUEKEY := ACLONE(ASETKEY)
	ENDIF
ENDIF

RETURN LRETURN










FUNCTION ___FWBROWSE____GETUNIQUEDATAKEY( )
LOCAL ARETURN        := {}
LOCAL NCAMPO         := 0
LOCAL NPOSCAMPO      := 0
LOCAL ADATAARRAY     := {}


IF LEN( SELF:AUNIQUEKEY ) > 0 .AND.  SELF:LACTIVATE
	IF SELF:DATAQUERY()

		FOR NCAMPO := 1 TO LEN( SELF:AUNIQUEKEY )

			NPOSCAMPO := (SELF:CALIAS)->( FIELDPOS( SELF:AUNIQUEKEY[NCAMPO] ) )
			IF NPOSCAMPO > 0

				AADD( ARETURN, { SELF:AUNIQUEKEY[NCAMPO], (SELF:CALIAS)->( FIELDGET( NPOSCAMPO ) ) } )
			ENDIF
		NEXT
	ELSEIF SELF:DATAARRAY()

		ADATAARRAY := SELF:ODATA:GETARRAY()

		FOR NCAMPO := 1 TO LEN( SELF:AUNIQUEKEY )

			NPOSCAMPO := SELF:AUNIQUEKEY[NCAMPO]
			IF NPOSCAMPO > 0

				AADD( ARETURN, { SELF:AUNIQUEKEY[NCAMPO], ADATAARRAY[SELF:NAT,NPOSCAMPO] } )
			ENDIF
		NEXT
	ENDIF
ENDIF

RETURN ARETURN











FUNCTION ___FWBROWSE____GOTODATAKEY(ADATAKEY )
LOCAL LCOULDPOS      := .F. 
LOCAL ARETURN        := {}
LOCAL NCAMPO         := 0
LOCAL NPOSCAMPO      := 0

IF SELF:LACTIVATE

	IF KEYCOMPARE( ADATAKEY, SELF:GETUNIQUEDATAKEY() )
		LCOULDPOS := .T. 
	ELSE

		SELF:GOBOTTOM()
		SELF:GOTOP()

		WHILE !( SELF:ODATA:ISLAST(SELF:NAT) )

			IF KEYCOMPARE( ADATAKEY, SELF:GETUNIQUEDATAKEY() )
				LCOULDPOS := .T. 
				EXIT
			ENDIF

			SELF:GODOWN( 1 )
		END
	ENDIF
ENDIF

RETURN LCOULDPOS










FUNCTION ___FWBROWSE____ISWHEELMOVE( )
RETURN SELF:NMOVETYPE == 11 .OR.  SELF:NMOVETYPE == 10













STATIC FUNCTION KEYCOMPARE( AARRAY1, AARRAY2 )
LOCAL LRETURN    := .T. 
LOCAL NPOS1      := 0
LOCAL NPOS2      := 0
LOCAL NTAM1      := LEN(AARRAY1)

LRETURN := ( NTAM1 == LEN(AARRAY2) )

IF LRETURN

	FOR NPOS1 := 1 TO NTAM1

		LRETURN := ( LEN(AARRAY1[NPOS1]) == LEN(AARRAY2[NPOS1]) )

		IF LRETURN

			FOR NPOS2 := 1 TO LEN( AARRAY1[NPOS1] )

				LRETURN := ( AARRAY1[ NPOS1, NPOS2 ]== AARRAY2[ NPOS1, NPOS2 ] )
				IF !LRETURN
					EXIT
				ENDIF
			NEXT
		ELSE
			EXIT
		ENDIF
	NEXT
ENDIF

RETURN LRETURN







STATIC FUNCTION CRIABLOCK(OSELF, CBLINE)
RETURN &("{ |O| {" + CBLINE + "} }")